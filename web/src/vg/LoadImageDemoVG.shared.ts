// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/LoadImageDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoadImageDemoXml.loremPixel TS loremPixel
// FQImport: com.lightningkite.khrysalistemplate.vg.LoadImageDemoVG.generate.<anonymous>.<anonymous>.url TS url
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoadImageDemoXml TS LoadImageDemoXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoadImageDemoXml.gallery TS gallery
// FQImport: com.lightningkite.khrysalistemplate.vg.LoadImageDemoVG.generate.view TS view
// FQImport: com.lightningkite.khrysalis.ImageReference TS ImageReference
// FQImport: com.lightningkite.khrysalistemplate.vg.LoadImageDemoVG.generate.<anonymous>.<anonymous>.<anonymous>.url TS url
// FQImport: com.lightningkite.khrysalis.views.requestImagesGallery>com.lightningkite.khrysalis.android.ActivityAccess TS comLightningkiteKhrysalisAndroidActivityAccessRequestImagesGallery
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoadImageDemoXml.camera TS camera
// FQImport: com.lightningkite.khrysalis.observables.binding.loadImage>android.widget.ImageView TS androidWidgetImageViewLoadImage
// FQImport: com.lightningkite.khrysalis.views.requestImageGallery>com.lightningkite.khrysalis.android.ActivityAccess TS comLightningkiteKhrysalisAndroidActivityAccessRequestImageGallery
// FQImport: com.lightningkite.khrysalistemplate.vg.LoadImageDemoVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalis.views.requestImageCamera>com.lightningkite.khrysalis.android.ActivityAccess TS comLightningkiteKhrysalisAndroidActivityAccessRequestImageCamera
// FQImport: com.lightningkite.khrysalistemplate.vg.LoadImageDemoVG.generate.<anonymous>.<anonymous>.urls TS urls
// FQImport: com.lightningkite.khrysalis.ImageRemoteUrl TS ImageRemoteUrl
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoadImageDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoadImageDemoXml.image TS image
// FQImport: com.lightningkite.khrysalistemplate.vg.LoadImageDemoVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoadImageDemoXml.galleryMultiple TS galleryMultiple
import { ImageReference, ImageRemoteUrl } from 'khrysalis/dist/Image.shared'
import { comLightningkiteKhrysalisAndroidActivityAccessRequestImageCamera, comLightningkiteKhrysalisAndroidActivityAccessRequestImageGallery, comLightningkiteKhrysalisAndroidActivityAccessRequestImagesGallery } from 'khrysalis/dist/views/ViewDependency.actual'
import { androidWidgetImageViewLoadImage } from 'khrysalis/dist/views/ImageView.actual'
import { ViewGenerator } from 'khrysalis/dist/views/ViewGenerator.shared'
import { LoadImageDemoXml } from '../layout/LoadImageDemoXml'

//! Declares com.lightningkite.khrysalistemplate.vg.LoadImageDemoVG
export class LoadImageDemoVG extends ViewGenerator {
    public constructor() {
        super();
    }
    
    //! Declares com.lightningkite.khrysalistemplate.vg.LoadImageDemoVG.title
    public get title(): string { return "Load Image Demo"; }
    
    
    public generate(dependency: Window): HTMLElement {
        const xml = new LoadImageDemoXml();
        
        const view = xml.setup(dependency);
        
        xml.camera.onclick = (_ev) => { _ev.stopPropagation(); 
            comLightningkiteKhrysalisAndroidActivityAccessRequestImageCamera(dependency, undefined, (url) => {
                    androidWidgetImageViewLoadImage(xml.image, new ImageReference(url))
            });
        };
        xml.galleryMultiple.onclick = (_ev) => { _ev.stopPropagation(); 
            comLightningkiteKhrysalisAndroidActivityAccessRequestImagesGallery(dependency, (urls) => {
                    const temp87 = (urls[0] ?? null);
                    if(temp87 !== null) ((url) => androidWidgetImageViewLoadImage(xml.image, new ImageReference(url)))(temp87)
            });
        };
        xml.gallery.onclick = (_ev) => { _ev.stopPropagation(); 
            comLightningkiteKhrysalisAndroidActivityAccessRequestImageGallery(dependency, (url) => {
                    androidWidgetImageViewLoadImage(xml.image, new ImageReference(url))
            });
        };
        xml.loremPixel.onclick = (_ev) => { _ev.stopPropagation(); 
            androidWidgetImageViewLoadImage(xml.image, new ImageRemoteUrl("https://picsum.photos/200"));
        };
        return view;
    }
}

