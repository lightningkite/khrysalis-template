// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/ViewPagerDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
import { ViewPagerDemoXml } from '../layout/ViewPagerDemoXml'
import { androidxViewpagerWidgetViewPagerBindStatic } from 'khrysalis/dist/observables/binding/ViewPager.binding.actual'
import { ComponentTestXml } from '../layout/ComponentTestXml'
import { StandardObservableProperty } from 'khrysalis/dist/observables/StandardObservableProperty.shared'
import { ViewGenerator } from 'khrysalis/dist/views/ViewGenerator.shared'
import { setViewText } from 'khrysalis/dist/views/ViewWithText.ext.actual'
import { ObservableStack } from 'khrysalis/dist/observables/ObservableStack.shared'
import { comRdPageIndicatorViewBind } from 'khrysalis/dist/observables/binding/PageIndicatorView.binding.actual'

//! Declares com.lightningkite.khrysalistemplate.vg.ViewPagerDemoVG
export class ViewPagerDemoVG extends ViewGenerator {
    public readonly stack: ObservableStack<ViewGenerator>;
    public constructor(stack: ObservableStack<ViewGenerator>) {
        super();
        this.stack = stack;
        this.items = ["First", "Second", "Third"];
        this.selectedIndex = new StandardObservableProperty(0, undefined);
    }
    
    //! Declares com.lightningkite.khrysalistemplate.vg.ViewPagerDemoVG.title
    public get title(): string { return "View Pager Demo"; }
    
    
    public readonly items: Array<string>;
    
    public readonly selectedIndex: StandardObservableProperty<number>;
    
    
    public generate(dependency: Window): HTMLElement {
        const xml = new ViewPagerDemoXml();
        
        const view = xml.setup(dependency);
        
        
        androidxViewpagerWidgetViewPagerBindStatic(xml.viewPager, this.items, this.selectedIndex, (it) => {
                const xml = new ComponentTestXml();
                
                const view = xml.setup(dependency);
                
                setViewText(xml.label, it);
                return view;
        });
        comRdPageIndicatorViewBind(xml.viewPagerIndicator, this.items.length, this.selectedIndex);
        
        return view;
    }
}

