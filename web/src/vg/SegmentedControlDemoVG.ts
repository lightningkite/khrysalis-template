//! This file will translate using Butterfly.
// Generated by Butterfly TypeScript converter - this file will be overwritten.
// File: vg/SegmentedControlDemoVG.shared.kt
// Package: com.lightningkite.butterflytemplate.vg
import { StandardObservableProperty } from 'butterfly/dist/observables/StandardObservableProperty.shared'
import { ViewGenerator } from 'butterfly/dist/views/ViewGenerator.shared'
import { SegmentedControlDemoXml } from '../layout/SegmentedControlDemoXml'
import { xTabLayoutBindIndex } from 'butterfly/dist/observables/binding/TabLayout.binding.actual'

//! Declares com.lightningkite.butterflytemplate.vg.SegmentedControlDemoVG
export class SegmentedControlDemoVG extends ViewGenerator {
    public constructor() {
        super();
    }
    
    //! Declares com.lightningkite.butterflytemplate.vg.SegmentedControlDemoVG.title
    public get title(): string { return "Segmented Control Demo"; }
    
    
    public generate(dependency: Window): HTMLElement {
        const xml = new SegmentedControlDemoXml();
        
        const view = xml.setup(dependency);
        
        
        xTabLayoutBindIndex(xml.tabs, ["A", "B", "C"], new StandardObservableProperty<number>(0, undefined), undefined);
        xTabLayoutBindIndex(xml.tabs2, ["A", "B", "C", "D", "E", "F", "G"], new StandardObservableProperty<number>(0, undefined), undefined);
        
        return view;
    }
}

