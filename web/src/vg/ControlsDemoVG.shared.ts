// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/ControlsDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml.numberText TS numberText
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.<anonymous>.xml TS xml
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTestXml TS ComponentTestXml
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.number TS number
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.<anonymous>.obs TS obs
// FQImport: com.lightningkite.khrysalis.observables.binding.bind>android.widget.Spinner TS spinnerBindAdvanced
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalis.observables.binding.bind>android.widget.AutoCompleteTextView TS androidWidgetAutoCompleteTextViewBind
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTestXml.label TS label
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.text TS text
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.view TS view
// FQImport: com.lightningkite.khrysalis.observables.binding.bindString>android.widget.EditText TS androidWidgetEditTextBindString
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTestXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml.editableAutoText TS editableAutoText
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.<anonymous>.t TS t
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml.editableText TS editableText
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.<anonymous>.n TS n
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.<anonymous>.item TS item
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.<anonymous>.view TS view
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml.editableTextCopy TS editableTextCopy
// FQImport: com.lightningkite.khrysalis.observables.combine>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any> TS comLightningkiteKhrysalisObservablesObservablePropertyCombine
// FQImport: com.lightningkite.khrysalis.observables.binding.bindInteger>android.widget.EditText TS androidWidgetEditTextBindInteger
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.options TS options
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty TS StandardObservableProperty
// FQImport: com.lightningkite.khrysalis.observables.binding.bindString>android.widget.TextView TS androidWidgetTextViewBindString
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty.value TS value
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml.editableTextBig TS editableTextBig
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml.spinner TS spinner
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml TS ControlsDemoXml
import { androidWidgetAutoCompleteTextViewBind } from 'khrysalis/dist/observables/binding/AutoCompleteTextView.binding.actual'
import { spinnerBindAdvanced } from 'khrysalis/dist/observables/binding/Spinner.binding.actual'
import { androidWidgetEditTextBindInteger, androidWidgetEditTextBindString } from 'khrysalis/dist/observables/binding/EditText.binding.actual'
import { comLightningkiteKhrysalisObservablesObservablePropertyCombine } from 'khrysalis/dist/observables/CombineObservableProperty.shared'
import { ComponentTestXml } from '../layout/ComponentTestXml'
import { StandardObservableProperty } from 'khrysalis/dist/observables/StandardObservableProperty.shared'
import { ViewGenerator } from 'khrysalis/dist/views/ViewGenerator.shared'
import { androidWidgetTextViewBindString } from 'khrysalis/dist/observables/binding/TextView.binding.actual'
import { ControlsDemoXml } from '../layout/ControlsDemoXml'

//! Declares com.lightningkite.khrysalistemplate.vg.ControlsDemoVG
export class ControlsDemoVG extends ViewGenerator {
    public constructor() {
        super();
        this.text = new StandardObservableProperty("", undefined);
        this.options = new StandardObservableProperty(["Apple", "Banana", "Chili Pepper", "Dragon Fruit"], undefined);
        this._number = new StandardObservableProperty(32, undefined);
    }
    
    //! Declares com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.title
    public get title(): string { return "Controls Demo"; }
    
    
    public readonly text: StandardObservableProperty<string>;
    
    public readonly options: StandardObservableProperty<Array<string>>;
    
    public readonly _number: StandardObservableProperty<number>;
    
    
    public generate(dependency: Window): HTMLElement {
        const xml = new ControlsDemoXml();
        
        const view = xml.setup(dependency);
        
        
        androidWidgetEditTextBindInteger(xml.numberText, this._number);
        androidWidgetTextViewBindString(xml.editableText, comLightningkiteKhrysalisObservablesObservablePropertyCombine(this.text, this._number, (t, n) => `${t} (${n})`));
        androidWidgetEditTextBindString(xml.editableAutoText, this.text);
        androidWidgetAutoCompleteTextViewBind(xml.editableAutoText, this.options, (it) => it, (item) => {
                this.text.value = item
        });
        androidWidgetTextViewBindString(xml.editableTextCopy, this.text);
        androidWidgetEditTextBindString(xml.editableTextBig, this.text);
        spinnerBindAdvanced(xml.spinner, this.options, this.text, (obs) => {
                const xml = new ComponentTestXml();
                
                const view = xml.setup(dependency);
                
                
                androidWidgetTextViewBindString(xml.label, obs);
                
                return view;
        });
        
        return view;
    }
}

