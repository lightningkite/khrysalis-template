// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/ControlsDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
import { androidWidgetAutoCompleteTextViewBind } from 'khrysalis/dist/observables/binding/AutoCompleteTextView.binding.actual'
import { androidWidgetEditTextBindInteger, androidWidgetEditTextBindString } from 'khrysalis/dist/observables/binding/EditText.binding.actual'
import { StandardObservableProperty } from 'khrysalis/dist/observables/StandardObservableProperty.shared'
import { ViewGenerator } from 'khrysalis/dist/views/ViewGenerator.shared'
import { androidWidgetTextViewBindString } from 'khrysalis/dist/observables/binding/TextView.binding.actual'
import { ControlsDemoXml } from '../layout/ControlsDemoXml'
import { spinnerBind } from 'khrysalis/dist/observables/binding/Spinner.binding.actual'

//! Declares com.lightningkite.khrysalistemplate.vg.ControlsDemoVG
export class ControlsDemoVG extends ViewGenerator {
    public constructor() {
        super();
        this.text = new StandardObservableProperty<string>("", undefined);
        this.options = new StandardObservableProperty<Array<string>>(["Apple", "Banana", "Chili Pepper", "Dragon Fruit"], undefined);
        this._number = new StandardObservableProperty<number>(32, undefined);
    }
    
    //! Declares com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.title
    public get title(): string { return "Controls Demo"; }
    
    
    public readonly text: StandardObservableProperty<string>;
    
    public readonly options: StandardObservableProperty<Array<string>>;
    
    public readonly _number: StandardObservableProperty<number>;
    
    
    public generate(dependency: Window): HTMLElement {
        const xml = new ControlsDemoXml();
        
        const view = xml.setup(dependency);
        
        
        androidWidgetEditTextBindInteger(xml.numberText, this._number);
        androidWidgetEditTextBindString(xml.editableText, this.text);
        androidWidgetEditTextBindString(xml.editableAutoText, this.text);
        androidWidgetAutoCompleteTextViewBind<string>(xml.editableAutoText, this.options, (it: string): string => it, (item: string): void => {
                this.text.value = item
        });
        androidWidgetTextViewBindString(xml.editableTextCopy, this.text);
        androidWidgetEditTextBindString(xml.editableTextBig, this.text);
        spinnerBind<string>(xml.spinner, this.options, this.text, undefined);
        
        return view;
    }
}

