// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/ExampleContentVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
import { ExampleContentXml } from '../layout/ExampleContentXml'
import { androidWidgetTextViewBindString, androidWidgetTextViewBindText } from 'khrysalis/dist/observables/binding/TextView.binding.actual'
import { MutableObservableProperty } from 'khrysalis/dist/observables/MutableObservableProperty.shared'
import { StandardObservableProperty } from 'khrysalis/dist/observables/StandardObservableProperty.shared'
import { ViewGenerator } from 'khrysalis/dist/views/ViewGenerator.shared'
import { comLightningkiteKhrysalisObservablesObservablePropertyMap } from 'khrysalis/dist/observables/TransformedObservableProperty.shared'
import { comLightningkiteKhrysalisObservablesObservablePropertyFlatMap } from 'khrysalis/dist/observables/FlatMappedObservableProperty.shared'

//! Declares com.lightningkite.khrysalistemplate.vg.ExampleContentVG
export class ExampleContentVG extends ViewGenerator {
    public constructor() {
        super();
        this._number = new StandardObservableProperty(0, undefined);
        this.chained = new StandardObservableProperty(new StandardObservableProperty(0, undefined), undefined);
    }
    
    //! Declares com.lightningkite.khrysalistemplate.vg.ExampleContentVG.title
    public get title(): string { return "Example Content"; }
    
    
    public readonly _number: StandardObservableProperty<number>;
    
    public readonly chained: StandardObservableProperty<MutableObservableProperty<number>>;
    
    
    public increment(): void {
        const temp16 = this._number;
        this._number.value += 1;
    }
    
    public generate(dependency: Window): HTMLElement {
        const xml = new ExampleContentXml();
        
        const view = xml.setup(dependency);
        
        xml.exampleContentIncrement.onclick = (_ev) => { _ev.stopPropagation(); 
            this.increment();
        };
        androidWidgetTextViewBindText(xml.exampleContentNumber, this._number, (it) => it.toString());
        xml.chainedIncrement.onclick = (_ev) => { _ev.stopPropagation(); 
            this.chained.value.value = this.chained.value.value + 1;
        };
        androidWidgetTextViewBindString(xml.chainedNumber, comLightningkiteKhrysalisObservablesObservablePropertyMap(comLightningkiteKhrysalisObservablesObservablePropertyFlatMap(this.chained, (it) => it), (it) => it.toString()));
        xml.scrollToTop.onclick = (_ev) => { _ev.stopPropagation(); 
            xml.scrollView.scroll(0, 0);
        };
        return view;
    }
}

