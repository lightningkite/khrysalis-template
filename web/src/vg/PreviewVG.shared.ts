// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/PreviewVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.layouts.PreviewXml.viewName TS viewName
// FQImport: com.lightningkite.khrysalis.observables.binding.bind>androidx.viewpager.widget.ViewPager TS androidxViewpagerWidgetViewPagerBindStatic
// FQImport: com.lightningkite.khrysalistemplate.layouts.MainXml TS MainXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.PreviewXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG.generate.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG.previews.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalistemplate.layouts.ViewPagerDemoXml TS ViewPagerDemoXml
// FQImport: com.lightningkite.khrysalis.observables.subscribeBy>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any> TS comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG.generate.view TS view
// FQImport: com.lightningkite.khrysalistemplate.layouts.SegmentedControlDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.layouts.SelectDemoXml TS SelectDemoXml
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalistemplate.layouts.SegmentedControlDemoXml TS SegmentedControlDemoXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoginDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalis.rx.until>io.reactivex.disposables.Disposable TS ioReactivexDisposablesDisposableUntil
// FQImport: com.lightningkite.khrysalistemplate.layouts.ExampleContentXml TS ExampleContentXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.SliderDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG.XmlPreview.name TS name
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG.previews TS previews
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalistemplate.layouts.MainXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG.previewIndex TS previewIndex
// FQImport: com.lightningkite.khrysalistemplate.layouts.PreviewXml TS PreviewXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.DateRangeDemoXml TS DateRangeDemoXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.PreviewXml.pager TS pager
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG.XmlPreview.make TS make
// FQImport: com.lightningkite.khrysalistemplate.layouts.DateRangeDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.layouts.SliderDemoXml TS SliderDemoXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.ExampleContentXml.setup TS setup
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty TS StandardObservableProperty
// FQImport: com.lightningkite.khrysalis.rx.removed>android.view.View TS getAndroidViewViewRemoved
// FQImport: com.lightningkite.khrysalistemplate.layouts.SelectDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoginDemoXml TS LoginDemoXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.ViewPagerDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml TS ControlsDemoXml
import { SelectDemoXml } from '../layout/SelectDemoXml'
import { ViewPagerDemoXml } from '../layout/ViewPagerDemoXml'
import { MainXml } from '../layout/MainXml'
import { getAndroidViewViewRemoved, ioReactivexDisposablesDisposableUntil } from 'khrysalis/dist/rx/DisposeCondition.actual'
import { SliderDemoXml } from '../layout/SliderDemoXml'
import { DateRangeDemoXml } from '../layout/DateRangeDemoXml'
import { ExampleContentXml } from '../layout/ExampleContentXml'
import { androidxViewpagerWidgetViewPagerBindStatic } from 'khrysalis/dist/observables/binding/ViewPager.binding.actual'
import { StandardObservableProperty } from 'khrysalis/dist/observables/StandardObservableProperty.shared'
import { ViewGenerator } from 'khrysalis/dist/views/ViewGenerator.shared'
import { SegmentedControlDemoXml } from '../layout/SegmentedControlDemoXml'
import { PreviewXml } from '../layout/PreviewXml'
import { ControlsDemoXml } from '../layout/ControlsDemoXml'
import { LoginDemoXml } from '../layout/LoginDemoXml'
import { comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy } from 'khrysalis/dist/observables/ObservableProperty.ext.shared'

//! Declares com.lightningkite.khrysalistemplate.vg.PreviewVG
export class PreviewVG extends ViewGenerator {
    public constructor() {
        super();
        this.previews = [new PreviewVG.XmlPreview("ControlsDemoXml", (it) => new ControlsDemoXml().setup(it)), new PreviewVG.XmlPreview("DateRangeDemoXml", (it) => new DateRangeDemoXml().setup(it)), new PreviewVG.XmlPreview("ExampleContentXml", (it) => new ExampleContentXml().setup(it)), new PreviewVG.XmlPreview("LoginDemoXml", (it) => new LoginDemoXml().setup(it)), new PreviewVG.XmlPreview("MainXml", (it) => new MainXml().setup(it)), new PreviewVG.XmlPreview("SegmentedControlDemoXml", (it) => new SegmentedControlDemoXml().setup(it)), new PreviewVG.XmlPreview("SelectDemoXml", (it) => new SelectDemoXml().setup(it)), new PreviewVG.XmlPreview("SliderDemoXml", (it) => new SliderDemoXml().setup(it)), new PreviewVG.XmlPreview("ViewPagerDemoXml", (it) => new ViewPagerDemoXml().setup(it))];
        this.previewIndex = new StandardObservableProperty(0, undefined);
    }
    
    //! Declares com.lightningkite.khrysalistemplate.vg.PreviewVG.title
    public get title(): string { return "Preview"; }
    
    
    
    
    public readonly previews: Array<PreviewVG.XmlPreview>;
    
    
    public readonly previewIndex: StandardObservableProperty<number>;
    
    
    public generate(dependency: Window): HTMLElement {
        const xml = new PreviewXml();
        
        const view = xml.setup(dependency);
        
        androidxViewpagerWidgetViewPagerBindStatic(xml.pager, this.previews, this.previewIndex, (it) => it.make(dependency));
        ioReactivexDisposablesDisposableUntil(comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(this.previewIndex, undefined, undefined, (it) => {
                    xml.viewName.innerText = this.previews[it].name
        }), getAndroidViewViewRemoved(view));
        return view;
    }
    
}
export namespace PreviewVG {
    //! Declares com.lightningkite.khrysalistemplate.vg.PreviewVG.XmlPreview
    export class XmlPreview {
        public readonly name: string;
        public readonly make:  (a: Window) => HTMLElement;
        public constructor(name: string, make:  (a: Window) => HTMLElement) {
            this.name = name;
            this.make = make;
        }
    }
}

