// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: api/APIOnline.shared.kt
// Package: com.lightningkite.khrysalistemplate.api
// FQImport: com.lightningkite.khrysalis.net.HttpClient.GET TS GET
// FQImport: com.lightningkite.khrysalis.net.HttpClient TS HttpClient
// FQImport: com.lightningkite.khrysalistemplate.api.APIOnline.baseUrl TS baseUrl
// FQImport: com.lightningkite.khrysalis.net.readJson>io.reactivex.Single<okhttp3.Response> TS ioReactivexSingleReadJson
// FQImport: com.lightningkite.khrysalis.net.HttpClient.call TS call
// FQImport: com.lightningkite.khrysalistemplate.api.APIInterface TS APIInterface
// FQImport: com.lightningkite.khrysalistemplate.models.Post TS Post
import { Post } from '../models/Post.shared'
import { Observable } from 'rxjs'
import { ioReactivexSingleReadJson } from 'khrysalis/dist/net/RxHttpAssist.actual'
import { HttpClient } from 'khrysalis/dist/net/HttpClient.actual'
import { APIInterface } from './APIInterface.shared'

//! Declares com.lightningkite.khrysalistemplate.api.APIOnline
export class APIOnline implements APIInterface {
    public static implementsInterfaceComLightningkiteKhrysalistemplateApiAPIInterface = true;
    public readonly baseUrl: string;
    public constructor(baseUrl: string = "https://jsonplaceholder.typicode.com") {
        this.baseUrl = baseUrl;
    }
    
    public getExamplePosts(): Observable<Array<Post>> {
        return ioReactivexSingleReadJson(HttpClient.INSTANCE.call(this.baseUrl + "/posts", HttpClient.INSTANCE.GET, new Map([]), undefined), [Array, [Post]]);
    }
    
}

