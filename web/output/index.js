/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../khrysalis/web/dist/Image.shared.js":
/*!************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/Image.shared.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: Image.shared.kt
// Package: com.lightningkite.khrysalis
// FQImport: com.lightningkite.khrysalis.ImageRemoteUrl TS ImageRemoteUrl
// FQImport: com.lightningkite.khrysalis.ImageBitmap TS ImageBitmap
// FQImport: com.lightningkite.khrysalis.Image TS Image
// FQImport: com.lightningkite.khrysalis.ImageReference TS ImageReference
const Kotlin_1 = __webpack_require__(/*! ./Kotlin */ "../../khrysalis/web/dist/Kotlin.js");
//! Declares com.lightningkite.khrysalis.Image
class Image {
    constructor() {
    }
}
exports.Image = Image;
//! Declares com.lightningkite.khrysalis.ImageReference
class ImageReference extends Image {
    constructor(uri) {
        super();
        this.uri = uri;
    }
    hashCode() {
        var _a, _b;
        let hash = 17;
        hash = (_b = 31 * hash + ((_a = this.uri) === null || _a === void 0 ? void 0 : _a.hashCode())) !== null && _b !== void 0 ? _b : 0;
        return hash;
    }
    equals(other) { return other instanceof ImageReference && this.uri === other.uri; }
    toString() { return `ImageReference(uri = ${this.uri})`; }
    copy(uri = this.uri) { return new ImageReference(uri); }
}
exports.ImageReference = ImageReference;
//! Declares com.lightningkite.khrysalis.ImageBitmap
class ImageImageBitmap extends Image {
    constructor(bitmap) {
        super();
        this.bitmap = bitmap;
    }
    hashCode() {
        var _a, _b;
        let hash = 17;
        hash = (_b = 31 * hash + ((_a = this.bitmap) === null || _a === void 0 ? void 0 : _a.hashCode())) !== null && _b !== void 0 ? _b : 0;
        return hash;
    }
    equals(other) { var _a, _b; return other instanceof ImageImageBitmap && ((_b = (_a = this.bitmap) === null || _a === void 0 ? void 0 : _a.equals(other.bitmap)) !== null && _b !== void 0 ? _b : other.bitmap === null); }
    toString() { return `ImageImageBitmap(bitmap = ${this.bitmap})`; }
    copy(bitmap = this.bitmap) { return new ImageImageBitmap(bitmap); }
}
exports.ImageImageBitmap = ImageImageBitmap;
//! Declares com.lightningkite.khrysalis.ImageRaw
class ImageRaw extends Image {
    constructor(raw) {
        super();
        this.raw = raw;
    }
    hashCode() {
        var _a, _b;
        let hash = 17;
        hash = (_b = 31 * hash + ((_a = this.raw) === null || _a === void 0 ? void 0 : _a.hashCode())) !== null && _b !== void 0 ? _b : 0;
        return hash;
    }
    equals(other) { var _a, _b; return other instanceof ImageRaw && ((_b = (_a = this.raw) === null || _a === void 0 ? void 0 : _a.equals(other.raw)) !== null && _b !== void 0 ? _b : other.raw === null); }
    toString() { return `ImageRaw(raw = ${this.raw})`; }
    copy(raw = this.raw) { return new ImageRaw(raw); }
}
exports.ImageRaw = ImageRaw;
//! Declares com.lightningkite.khrysalis.ImageRemoteUrl
class ImageRemoteUrl extends Image {
    constructor(url) {
        super();
        this.url = url;
    }
    hashCode() {
        let hash = 17;
        hash = 31 * hash + Kotlin_1.hashString(this.url);
        return hash;
    }
    equals(other) { return other instanceof ImageRemoteUrl && this.url === other.url; }
    toString() { return `ImageRemoteUrl(url = ${this.url})`; }
    copy(url = this.url) { return new ImageRemoteUrl(url); }
}
exports.ImageRemoteUrl = ImageRemoteUrl;
//! Declares com.lightningkite.khrysalis.asImage>kotlin.String
function kotlinStringAsImage(this_) { return new ImageRemoteUrl(this_); }
exports.kotlinStringAsImage = kotlinStringAsImage;
//! Declares com.lightningkite.khrysalis.asImage>android.net.Uri
function androidNetUriAsImage(this_) { return new ImageReference(this_); }
exports.androidNetUriAsImage = androidNetUriAsImage;
//! Declares com.lightningkite.khrysalis.asImage>android.graphics.Bitmap
function androidGraphicsBitmapAsImage(this_) { return new ImageImageBitmap(this_); }
exports.androidGraphicsBitmapAsImage = androidGraphicsBitmapAsImage;
//# sourceMappingURL=Image.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/Kotlin.js":
/*!******************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/Kotlin.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// export type FullType = Array<any>;
Object.defineProperty(exports, "__esModule", { value: true });
//! Declares kotlin.Exception
//! Declares java.lang.Exception
class Exception extends Error {
    constructor(message, cause) {
        super(message);
        this.cause = cause;
    }
    printStackTrace() {
        console.trace(this);
    }
}
exports.Exception = Exception;
//! Declares kotlin.IllegalArgumentException
//! Declares java.lang.IllegalArgumentException
class IllegalArgumentException extends Exception {
}
exports.IllegalArgumentException = IllegalArgumentException;
//! Declares kotlin.IllegalStateException
//! Declares java.lang.IllegalStateException
class IllegalStateException extends Exception {
}
exports.IllegalStateException = IllegalStateException;
//! Declares kotlin.NoSuchElementException
//! Declares java.lang.NoSuchElementException
class NoSuchElementException extends Exception {
}
exports.NoSuchElementException = NoSuchElementException;
function hashString(item) {
    let hash = 0, i, chr;
    for (i = 0; i < this.length; i++) {
        chr = this.charCodeAt(i);
        hash = ((hash << 5) - hash) + chr;
        hash |= 0; // Convert to 32bit integer
    }
    return hash;
}
exports.hashString = hashString;
function hashAnything(item) {
    if (item === null || item === undefined)
        return 0;
    switch (typeof item) {
        case "object":
            return item.hashCode();
        case "number":
            return Math.floor(item);
        case "string":
            return hashString(item);
        case "boolean":
            return item ? 1 : 0;
        default:
            return 0;
    }
}
exports.hashAnything = hashAnything;
function equalityAnything(left, right) {
    if (typeof left === "object") {
        return left.equals(right);
    }
    else {
        return left === right;
    }
}
exports.equalityAnything = equalityAnything;
function checkIsInterface(item, key) {
    return item.constructor["implementsInterface" + key];
}
exports.checkIsInterface = checkIsInterface;
function tryCastInterface(item, key) {
    if (item.constructor["implementsInterface" + key]) {
        return item;
    }
    else {
        return null;
    }
}
exports.tryCastInterface = tryCastInterface;
function tryCastPrimitive(item, key) {
    if (typeof item === key) {
        return item;
    }
    else {
        return null;
    }
}
exports.tryCastPrimitive = tryCastPrimitive;
function tryCastClass(item, erasedType) {
    if (item instanceof erasedType) {
        return item;
    }
    else {
        return null;
    }
}
exports.tryCastClass = tryCastClass;
function also(item, action) {
    action(item);
    return item;
}
exports.also = also;
function takeIf(item, action) {
    if (action(item))
        return item;
    else
        return null;
}
exports.takeIf = takeIf;
function takeUnless(item, action) {
    if (!action(item))
        return item;
    else
        return null;
}
exports.takeUnless = takeUnless;
function parseIntOrNull(s) {
    const r = parseInt(s);
    if (isNaN(r))
        return null;
    return r;
}
exports.parseIntOrNull = parseIntOrNull;
function parseFloatOrNull(s) {
    const r = parseFloat(s);
    if (isNaN(r))
        return null;
    return r;
}
exports.parseFloatOrNull = parseFloatOrNull;
Object.defineProperty(Object.prototype, "hashCode", {
    value: function () {
        const existing = this["__randomizedHash"];
        if (existing)
            return existing;
        const r = Math.random() * 1000000;
        this["__randomizedHash"] = r;
        return r;
    }
});
Object.defineProperty(Object.prototype, "equals", {
    value: function (other) {
        return this == other;
    }
});
Object.defineProperty(Number.prototype, "compareTo", {
    value: function (other) {
        return (this > other ? 1 : this < other ? -1 : 0);
    }
});
Object.defineProperty(Number.prototype, "implementsInterfaceKotlinComparable", { value: true });
Object.defineProperty(String.prototype, "compareTo", {
    value: function (other) {
        return (this > other ? 1 : this < other ? -1 : 0);
    }
});
Object.defineProperty(String.prototype, "implementsInterfaceKotlinComparable", { value: true });
class Range {
    constructor(start, endInclusive) {
        this.start = start;
        this.endInclusive = endInclusive;
    }
    contains(element) {
        return element >= this.start && element <= this.endInclusive;
    }
}
exports.Range = Range;
class NumberRange extends Range {
    constructor(start, endInclusive) {
        super(start, endInclusive);
    }
    [Symbol.iterator]() {
        return new NumberRangeIterator(this);
    }
}
exports.NumberRange = NumberRange;
class NumberRangeIterator {
    constructor(range) {
        this.start = range.start;
        this.endInclusive = range.endInclusive;
    }
    next() {
        const result = { done: this.start >= this.endInclusive, value: this.start };
        this.start++;
        return result;
    }
}
class CharRange extends Range {
    constructor(start, endInclusive) {
        super(start, endInclusive);
    }
    [Symbol.iterator]() {
        return new CharRangeIterator(this);
    }
}
exports.CharRange = CharRange;
class CharRangeIterator {
    constructor(range) {
        this.startCode = range.start.charCodeAt(0);
        this.endInclusiveCode = range.endInclusive.charCodeAt(0);
    }
    next() {
        const result = { done: this.startCode >= this.endInclusiveCode, value: String.fromCharCode(this.startCode) };
        this.startCode++;
        return result;
    }
}
// interface Collection<E> extends Iterable<E> {
//     readonly size: number; //Why?  Because that's what Array uses, and we conform to Array.
//     contains(e: E): boolean
//     containsAll(e: E): boolean
// }
// interface MutableCollection<E> extends Collection<E> {
//     add(element: E): boolean
//     remove(element: E): boolean
//     addAll(elements: Collection<E>): boolean
//     removeAll(elements: Collection<E>): boolean
//     retainAll(elements: Collection<E>): boolean
//     clear(): boolean
// }
function safeEq(a, b) {
    if (typeof a === "object") {
        return a.equals(b);
    }
    else {
        return a === b;
    }
}
exports.safeEq = safeEq;
const rxjs_1 = __webpack_require__(/*! rxjs */ "../../khrysalis/web/node_modules/rxjs/_esm5/index.js");
function doOnSubscribe(observable, action) {
    return rxjs_1.defer(() => {
        action(null);
        return observable;
    });
}
exports.doOnSubscribe = doOnSubscribe;
//# sourceMappingURL=Kotlin.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/KotlinCollections.js":
/*!*****************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/KotlinCollections.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const Kotlin_1 = __webpack_require__(/*! ./Kotlin */ "../../khrysalis/web/dist/Kotlin.js");
const iterable_operator_1 = __webpack_require__(/*! iterable-operator */ "../../khrysalis/web/node_modules/iterable-operator/dist/es2018/index.umd.js");
class EqualOverrideSet {
    add(element) {
        return this.map.set(element, 0) == null;
    }
    clear() {
        this.map.clear();
    }
    delete(element) {
        this.map.delete(element);
    }
    has(element) {
        return this.map.has(element);
    }
    toString() {
        return "[" + this.map.internalEntries.flatMap((x) => x).join(", ") + "]";
    }
    values() {
        return this.map.keys()[Symbol.iterator]();
    }
    keys() {
        return this.map.keys()[Symbol.iterator]();
    }
    forEach(action) {
        let index = 0;
        for (const sublist of this.map.internalEntries) {
            for (const entry of sublist) {
                action(entry[0], index);
                index++;
            }
        }
    }
}
exports.EqualOverrideSet = EqualOverrideSet;
class EqualOverrideMap {
    constructor() {
        //This implementation is frankly kinda lazy, but it will do the trick.
        this.internalEntries = [];
        this.size = 0;
    }
    getListForHash(hash) {
        let e = this.internalEntries[hash];
        if (e === undefined) {
            e = [];
            this.internalEntries[hash] = e;
        }
        return e;
    }
    getEntryFromList(list, key) {
        var _a;
        for (const entry of list) {
            if ((_a = entry[0]) === null || _a === void 0 ? void 0 : _a.equals(key)) {
                return entry;
            }
        }
        return null;
    }
    set(key, value) {
        const list = this.getListForHash(key.hashCode());
        const entry = this.getEntryFromList(list, key);
        if (entry != null) {
            entry[1] = value;
        }
        else {
            list.push([key, value]);
            this.size++;
        }
    }
    get(key) {
        const list = this.getListForHash(key.hashCode());
        const entry = this.getEntryFromList(list, key);
        if (entry == null)
            return null;
        return entry[1];
    }
    has(key) {
        const list = this.getListForHash(key.hashCode());
        const entry = this.getEntryFromList(list, key);
        return entry != null;
    }
    keys() {
        return this.internalEntries.flatMap((x) => x.map((y) => y[0]))[Symbol.iterator]();
    }
    delete(key) {
        const list = this.getListForHash(key.hashCode());
        let index = 0;
        for (const pair of list) {
            if (pair[0].equals(key)) {
                list.splice(index, 1);
                this.size--;
                break;
            }
            index++;
        }
    }
    values() {
        return this.internalEntries.flatMap((x) => x.map((y) => y[1]))[Symbol.iterator]();
    }
    forEachK(action) {
        let index = 0;
        for (const sublist of this.internalEntries) {
            for (const entry of sublist) {
                action(entry, index);
                index++;
            }
        }
    }
    entries() {
        return this.internalEntries.flatMap((x) => x)[Symbol.iterator]();
    }
    clear() {
        this.internalEntries = [];
        this.size = 0;
    }
    toString() {
        return "[" + this.internalEntries.flatMap((x) => x).map((x) => `${x[0]}: ${x[1]}`).join(", ") + "]";
    }
    [Symbol.iterator]() {
        return undefined;
    }
}
exports.EqualOverrideMap = EqualOverrideMap;
//Freakin' JS inconsistency.  We'll have to fix it.
Object.defineProperty(Array.prototype, "size", {
    get: function () {
        let thing = new Map();
        return this.length;
    }
});
function listFilterNotNull(array) {
    return this.filter((it) => it !== null);
}
exports.listFilterNotNull = listFilterNotNull;
function iterableFilterNotNull(iterable) {
    return iterable_operator_1.filter(iterable, (x) => x != null);
}
exports.iterableFilterNotNull = iterableFilterNotNull;
function listRemoveAll(array, predicate) {
    let index = 0;
    while (index < array.length) {
        if (predicate(array[index])) {
            array.splice(index, 1);
        }
        else {
            index++;
        }
    }
}
exports.listRemoveAll = listRemoveAll;
function listRemoveFirst(array, predicate) {
    let index = 0;
    while (index < array.length) {
        if (predicate(array[index])) {
            array.splice(index, 1);
            return;
        }
        else {
            index++;
        }
    }
}
exports.listRemoveFirst = listRemoveFirst;
function listRemoveItem(array, item) {
    listRemoveFirst(array, (x) => Kotlin_1.safeEq(item, x));
}
exports.listRemoveItem = listRemoveItem;
//# sourceMappingURL=KotlinCollections.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/Math.shared.js":
/*!***********************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/Math.shared.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: Math.shared.kt
// Package: com.lightningkite.khrysalis
// FQImport: com.lightningkite.khrysalis.floorMod.other TS other
// FQImport: com.lightningkite.khrysalis.floorDiv.other TS other
Object.defineProperty(exports, "__esModule", { value: true });
//! Declares com.lightningkite.khrysalis.floorMod>kotlin.Int
function kotlinIntFloorMod(this_, other) { return (this_ % other + other) % other; }
exports.kotlinIntFloorMod = kotlinIntFloorMod;
//! Declares com.lightningkite.khrysalis.floorDiv>kotlin.Int
function kotlinIntFloorDiv(this_, other) {
    if (this_ < 0) {
        return this_ / other - 1;
    }
    else {
        return this_ / other;
    }
}
exports.kotlinIntFloorDiv = kotlinIntFloorDiv;
//! Declares com.lightningkite.khrysalis.floorMod>kotlin.Float
function kotlinFloatFloorMod(this_, other) { return (this_ % other + other) % other; }
exports.kotlinFloatFloorMod = kotlinFloatFloorMod;
//! Declares com.lightningkite.khrysalis.floorDiv>kotlin.Float
function kotlinFloatFloorDiv(this_, other) {
    if (this_ < 0) {
        return this_ / other - 1;
    }
    else {
        return this_ / other;
    }
}
exports.kotlinFloatFloorDiv = kotlinFloatFloorDiv;
//! Declares com.lightningkite.khrysalis.floorMod>kotlin.Double
function kotlinDoubleFloorMod(this_, other) { return (this_ % other + other) % other; }
exports.kotlinDoubleFloorMod = kotlinDoubleFloorMod;
//! Declares com.lightningkite.khrysalis.floorDiv>kotlin.Double
function kotlinDoubleFloorDiv(this_, other) {
    if (this_ < 0) {
        return this_ / other - 1;
    }
    else {
        return this_ / other;
    }
}
exports.kotlinDoubleFloorDiv = kotlinDoubleFloorDiv;
//# sourceMappingURL=Math.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/Random.actual.js":
/*!*************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/Random.actual.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Generated by Khrysalis TypeScript converter
// File: Random.actual.kt
// Package: com.lightningkite.khrysalis
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const mersenne_twister_1 = __importDefault(__webpack_require__(/*! mersenne-twister */ "../../khrysalis/web/node_modules/mersenne-twister/src/mersenne-twister.js"));
const RandomInstance = new mersenne_twister_1.default();
exports.RandomInstance = RandomInstance;
//# sourceMappingURL=Random.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/delay.actual.js":
/*!************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/delay.actual.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: delay.actual.kt
// Package: com.lightningkite.khrysalis
const rxjs_1 = __webpack_require__(/*! rxjs */ "../../khrysalis/web/node_modules/rxjs/_esm5/index.js");
//! Declares com.lightningkite.khrysalis.delay
function delay(milliseconds, action) {
    if (milliseconds === 0) {
        action();
    }
    else {
        setTimeout(action, milliseconds);
    }
}
exports.delay = delay;
//! Declares com.lightningkite.khrysalis.post
function post(action) {
    setTimeout(action);
}
exports.post = post;
//! Declares com.lightningkite.khrysalis.animationFrame
exports._animationFrame = new rxjs_1.Subject();
let started = false;
function getAnimationFrame() {
    if (!started) {
        started = true;
    }
    let currentTime = Date.now();
    setInterval(() => {
        const now = Date.now();
        exports._animationFrame.next((now - currentTime) / 1000.0);
        currentTime = now;
    }, 16);
    return exports._animationFrame;
}
exports.getAnimationFrame = getAnimationFrame;
//# sourceMappingURL=delay.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/kotlin/kotlin.text.js":
/*!******************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/kotlin/kotlin.text.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
//! Declares kotlin.text.isBlank
function kotlinCharSequenceIsBlank(s) {
    if (s == null)
        return true;
    for (const c of s) {
        if (!kotlinCharIsWhitespace(c)) {
            return false;
        }
    }
    return true;
}
exports.kotlinCharSequenceIsBlank = kotlinCharSequenceIsBlank;
//! Declares kotlin.text.substringBefore
function kotlinStringSubstringBefore(s, delimeter, defaultResult) {
    const pos = s.indexOf(delimeter);
    if (pos == -1) {
        return defaultResult;
    }
    else {
        return s.substring(0, pos);
    }
}
exports.kotlinStringSubstringBefore = kotlinStringSubstringBefore;
//! Declares kotlin.text.substringAfter
function kotlinStringSubstringAfter(s, delimeter, defaultResult) {
    const pos = s.indexOf(delimeter);
    if (pos == -1) {
        return defaultResult;
    }
    else {
        return s.substring(pos + delimeter.length);
    }
}
exports.kotlinStringSubstringAfter = kotlinStringSubstringAfter;
//! Declares kotlin.text.substringBeforeLast
function kotlinStringSubstringBeforeLast(s, delimeter, defaultResult) {
    const pos = s.lastIndexOf(delimeter);
    if (pos == -1) {
        return defaultResult;
    }
    else {
        return s.substring(0, pos);
    }
}
exports.kotlinStringSubstringBeforeLast = kotlinStringSubstringBeforeLast;
//! Declares kotlin.text.substringAfterLast
function kotlinStringSubstringAfterLast(s, delimeter, defaultResult) {
    const pos = s.lastIndexOf(delimeter);
    if (pos == -1) {
        return defaultResult;
    }
    else {
        return s.substring(pos + delimeter.length);
    }
}
exports.kotlinStringSubstringAfterLast = kotlinStringSubstringAfterLast;
//! Declares kotlin.text.isWhitespace
function kotlinCharIsWhitespace(c) {
    switch (c) {
        case " ":
        case "\n":
        case "\r":
        case "\t":
            return true;
        default:
            return false;
    }
}
exports.kotlinCharIsWhitespace = kotlinCharIsWhitespace;
//! Declares kotlin.text.isUpperCase
function kotlinCharIsUpperCase(c) {
    return c.toUpperCase() === c;
}
exports.kotlinCharIsUpperCase = kotlinCharIsUpperCase;
//! Declares kotlin.text.isLowerCase
function kotlinCharIsLowerCase(c) {
    return c.toLowerCase() === c;
}
exports.kotlinCharIsLowerCase = kotlinCharIsLowerCase;
//! Declares kotlin.text.isLetter
function kotlinCharIsLetter(c) {
    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');
}
exports.kotlinCharIsLetter = kotlinCharIsLetter;
//! Declares kotlin.text.isDigit
function kotlinCharIsDigit(c) {
    return c >= '0' && c <= '9';
}
exports.kotlinCharIsDigit = kotlinCharIsDigit;
//! Declares kotlin.text.isLetterOrDigit
function kotlinCharIsLetterOrDigit(c) {
    return kotlinCharIsLetter(c) || kotlinCharIsDigit(c);
}
exports.kotlinCharIsLetterOrDigit = kotlinCharIsLetterOrDigit;
//! Declares kotlin.text.StringBuilder
//! Declares java.lang.StringBuilder
class StringBuilder {
    constructor() {
        this.value = "";
    }
    toString() { return this.value; }
}
exports.StringBuilder = StringBuilder;
//# sourceMappingURL=kotlin.text.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/location/GeoCoordinate.shared.js":
/*!*****************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/location/GeoCoordinate.shared.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: location/GeoCoordinate.shared.kt
// Package: com.lightningkite.khrysalis.location
// FQImport: com.lightningkite.khrysalis.Codable TS Codable
const jsonParsing_1 = __webpack_require__(/*! ../net/jsonParsing */ "../../khrysalis/web/dist/net/jsonParsing.js");
//! Declares com.lightningkite.khrysalis.location.GeoCoordinate
class GeoCoordinate {
    constructor(latitude, longitude) {
        this.latitude = latitude;
        this.longitude = longitude;
    }
    static fromJson(obj) {
        return new GeoCoordinate(jsonParsing_1.parse(obj["latitude"], [Number]), jsonParsing_1.parse(obj["longitude"], [Number]));
    }
    toJson() {
        return {
            latitude: this.latitude,
            longitude: this.longitude
        };
    }
    hashCode() {
        let hash = 17;
        hash = 31 * hash + Math.floor(this.latitude);
        hash = 31 * hash + Math.floor(this.longitude);
        return hash;
    }
    equals(other) { return other instanceof GeoCoordinate && this.latitude === other.latitude && this.longitude === other.longitude; }
    toString() { return `GeoCoordinate(latitude = ${this.latitude}, longitude = ${this.longitude})`; }
    copy(latitude = this.latitude, longitude = this.longitude) { return new GeoCoordinate(latitude, longitude); }
}
exports.GeoCoordinate = GeoCoordinate;
GeoCoordinate.implementsInterfaceComLightningkiteKhrysalisCodable = true;
//# sourceMappingURL=GeoCoordinate.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/location/LocationResult.shared.js":
/*!******************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/location/LocationResult.shared.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: location/LocationResult.shared.kt
// Package: com.lightningkite.khrysalis.location
// FQImport: com.lightningkite.khrysalis.location.GeoCoordinate TS GeoCoordinate
const GeoCoordinate_shared_1 = __webpack_require__(/*! ./GeoCoordinate.shared */ "../../khrysalis/web/dist/location/GeoCoordinate.shared.js");
//! Declares com.lightningkite.khrysalis.location.LocationResult
class LocationResult {
    constructor(coordinate = new GeoCoordinate_shared_1.GeoCoordinate(0.0, 0.0), accuracyMeters = 100.0, altitudeMeters = 0.0, altitudeAccuracyMeters = 100.0, headingFromNorth = 0.0, speedMetersPerSecond = 0.0) {
        this.coordinate = coordinate;
        this.accuracyMeters = accuracyMeters;
        this.altitudeMeters = altitudeMeters;
        this.altitudeAccuracyMeters = altitudeAccuracyMeters;
        this.headingFromNorth = headingFromNorth;
        this.speedMetersPerSecond = speedMetersPerSecond;
    }
    hashCode() {
        var _a, _b;
        let hash = 17;
        hash = (_b = 31 * hash + ((_a = this.coordinate) === null || _a === void 0 ? void 0 : _a.hashCode())) !== null && _b !== void 0 ? _b : 0;
        hash = 31 * hash + Math.floor(this.accuracyMeters);
        hash = 31 * hash + Math.floor(this.altitudeMeters);
        hash = 31 * hash + Math.floor(this.altitudeAccuracyMeters);
        hash = 31 * hash + Math.floor(this.headingFromNorth);
        hash = 31 * hash + Math.floor(this.speedMetersPerSecond);
        return hash;
    }
    equals(other) { var _a, _b; return other instanceof LocationResult && ((_b = (_a = this.coordinate) === null || _a === void 0 ? void 0 : _a.equals(other.coordinate)) !== null && _b !== void 0 ? _b : other.coordinate === null) && this.accuracyMeters === other.accuracyMeters && this.altitudeMeters === other.altitudeMeters && this.altitudeAccuracyMeters === other.altitudeAccuracyMeters && this.headingFromNorth === other.headingFromNorth && this.speedMetersPerSecond === other.speedMetersPerSecond; }
    toString() { return `LocationResult(coordinate = ${this.coordinate}, accuracyMeters = ${this.accuracyMeters}, altitudeMeters = ${this.altitudeMeters}, altitudeAccuracyMeters = ${this.altitudeAccuracyMeters}, headingFromNorth = ${this.headingFromNorth}, speedMetersPerSecond = ${this.speedMetersPerSecond})`; }
    copy(coordinate = this.coordinate, accuracyMeters = this.accuracyMeters, altitudeMeters = this.altitudeMeters, altitudeAccuracyMeters = this.altitudeAccuracyMeters, headingFromNorth = this.headingFromNorth, speedMetersPerSecond = this.speedMetersPerSecond) { return new LocationResult(coordinate, accuracyMeters, altitudeMeters, altitudeAccuracyMeters, headingFromNorth, speedMetersPerSecond); }
}
exports.LocationResult = LocationResult;
//# sourceMappingURL=LocationResult.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/location/ViewDependency.location.actual.js":
/*!***************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/location/ViewDependency.location.actual.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: location/ViewDependency.location.actual.kt
// Package: com.lightningkite.khrysalis.location
const GeoCoordinate_shared_1 = __webpack_require__(/*! ./GeoCoordinate.shared */ "../../khrysalis/web/dist/location/GeoCoordinate.shared.js");
const LocationResult_shared_1 = __webpack_require__(/*! ./LocationResult.shared */ "../../khrysalis/web/dist/location/LocationResult.shared.js");
//! Declares com.lightningkite.khrysalis.location.requestLocation
function comLightningkiteKhrysalisAndroidActivityAccessRequestLocation(this_RequestLocation, accuracyBetterThanMeters = 10.0, timeoutInSeconds = 100.0, onResult) {
    navigator.geolocation.getCurrentPosition((position) => onResult(new LocationResult_shared_1.LocationResult(new GeoCoordinate_shared_1.GeoCoordinate(position.coords.latitude, position.coords.longitude), position.coords.accuracy, position.coords.altitude, position.coords.altitudeAccuracy, position.coords.heading, position.coords.speed), null), (err) => onResult(null, err.message), {
        maximumAge: timeoutInSeconds,
        timeout: timeoutInSeconds,
        enableHighAccuracy: accuracyBetterThanMeters <= 100
    });
}
exports.comLightningkiteKhrysalisAndroidActivityAccessRequestLocation = comLightningkiteKhrysalisAndroidActivityAccessRequestLocation;
//! Declares com.lightningkite.khrysalis.location.requestLocationCached
function comLightningkiteKhrysalisAndroidActivityAccessRequestLocationCached(this_RequestLocationCached, accuracyBetterThanMeters = 10.0, timeoutInSeconds = 100.0, onResult) {
    navigator.geolocation.getCurrentPosition((position) => onResult(new LocationResult_shared_1.LocationResult(new GeoCoordinate_shared_1.GeoCoordinate(position.coords.latitude, position.coords.longitude), position.coords.accuracy, position.coords.altitude, position.coords.altitudeAccuracy, position.coords.heading, position.coords.speed), null), (err) => onResult(null, err.message), {
        maximumAge: 60 * 60 * 1000,
        timeout: timeoutInSeconds,
        enableHighAccuracy: accuracyBetterThanMeters <= 100
    });
}
exports.comLightningkiteKhrysalisAndroidActivityAccessRequestLocationCached = comLightningkiteKhrysalisAndroidActivityAccessRequestLocationCached;
//# sourceMappingURL=ViewDependency.location.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/net/ConnectedWebSocket.actual.js":
/*!*****************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/net/ConnectedWebSocket.actual.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: net/ConnectedWebSocket.actual.kt
// Package: com.lightningkite.khrysalis.net
const rxjs_1 = __webpack_require__(/*! rxjs */ "../../khrysalis/web/node_modules/rxjs/_esm5/index.js");
const WebSocketFrame_shared_1 = __webpack_require__(/*! ./WebSocketFrame.shared */ "../../khrysalis/web/dist/net/WebSocketFrame.shared.js");
//! Declares com.lightningkite.khrysalis.net.ConnectedWebSocket
class ConnectedWebSocket {
    constructor(url) {
        this.underlyingSocket = null;
        this.read = new rxjs_1.Subject();
        this.ownConnection = new rxjs_1.Subject();
        this.closed = false;
        this.url = url;
    }
    resetSocket() {
        var _a;
        (_a = this.underlyingSocket) === null || _a === void 0 ? void 0 : _a.close(1000, "Resetting connection");
        const newSocket = new WebSocket(this.url);
        const parent = this;
        newSocket.binaryType = "arraybuffer";
        newSocket.addEventListener("open", (event) => {
            parent.ownConnection.next(this);
        });
        newSocket.addEventListener("error", (event) => {
            parent.ownConnection.error(event);
            parent.read.error(event);
        });
        newSocket.addEventListener("close", (event) => {
            parent.ownConnection.complete();
            parent.read.complete();
        });
        newSocket.addEventListener("message", (event) => {
            const d = event.data;
            if (typeof d === "string") {
                parent.read.next(new WebSocketFrame_shared_1.WebSocketFrame(null, d));
            }
            else {
                parent.read.next(new WebSocketFrame_shared_1.WebSocketFrame(new Int8Array(d), null));
            }
        });
        this.underlyingSocket = newSocket;
    }
    complete() {
        var _a;
        (_a = this.underlyingSocket) === null || _a === void 0 ? void 0 : _a.close(1000, null);
        this.closed = true;
    }
    next(t) {
        var _a;
        this.underlyingSocket.send((_a = t.text) !== null && _a !== void 0 ? _a : t.binary.buffer);
    }
    error(e) {
        var _a;
        (_a = this.underlyingSocket) === null || _a === void 0 ? void 0 : _a.close(1011, e.message);
        this.closed = true;
    }
    unsubscribe() {
        this.complete();
    }
}
exports.ConnectedWebSocket = ConnectedWebSocket;
ConnectedWebSocket.implementsInterfaceIoReactivexObserver = true;
//# sourceMappingURL=ConnectedWebSocket.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/net/HttpClient.actual.js":
/*!*********************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/net/HttpClient.actual.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: net/HttpClient.actual.kt
// Package: com.lightningkite.khrysalis.net
const rxjs_1 = __webpack_require__(/*! rxjs */ "../../khrysalis/web/node_modules/rxjs/_esm5/index.js");
const ConnectedWebSocket_actual_1 = __webpack_require__(/*! ./ConnectedWebSocket.actual */ "../../khrysalis/web/dist/net/ConnectedWebSocket.actual.js");
//! Declares com.lightningkite.khrysalis.net.HttpClient
class HttpClient {
    constructor() {
        this.GET = "GET";
        this.POST = "POST";
        this.PUT = "PUT";
        this.PATCH = "PATCH";
        this.DELETE = "DELETE";
    }
    call(url, method = HttpClient.INSTANCE.GET, headers = new Map([]), body = null) {
        return rxjs_1.from(fetch(url, {
            body: body,
            cache: "no-cache",
            credentials: "omit",
            headers: Object.fromEntries(headers),
            method: method
        }));
    }
    webSocket(url) {
        return rxjs_1.using(() => {
            const out = new ConnectedWebSocket_actual_1.ConnectedWebSocket(url);
            // out.underlyingSocket =
            return out;
        }, (r) => r.ownConnection);
    }
}
exports.HttpClient = HttpClient;
HttpClient.INSTANCE = new HttpClient();
//# sourceMappingURL=HttpClient.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/net/HttpResponseError.actual.js":
/*!****************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/net/HttpResponseError.actual.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const Kotlin_1 = __webpack_require__(/*! ../Kotlin */ "../../khrysalis/web/dist/Kotlin.js");
//! Declares com.lightningkite.khrysalis.net.HttpResponseException
class HttpResponseException extends Kotlin_1.Exception {
    constructor(response, cause = null) {
        super(`Got code ${response.status}`, cause);
        this.response = response;
    }
}
exports.HttpResponseException = HttpResponseException;
//! Declares com.lightningkite.khrysalis.net.HttpReadResponseException
class HttpReadResponseException extends Kotlin_1.Exception {
    constructor(response, text, cause = null) {
        super(`Got code ${response.status}`, cause);
        this.response = response;
        this.text = text;
    }
}
exports.HttpReadResponseException = HttpReadResponseException;
//# sourceMappingURL=HttpResponseError.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/net/RxHttpAssist.actual.js":
/*!***********************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/net/RxHttpAssist.actual.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: net/RxHttpAssist.actual.kt
// Package: com.lightningkite.khrysalis.net
const HttpResponseError_actual_1 = __webpack_require__(/*! ./HttpResponseError.actual */ "../../khrysalis/web/dist/net/HttpResponseError.actual.js");
const rxjs_1 = __webpack_require__(/*! rxjs */ "../../khrysalis/web/node_modules/rxjs/_esm5/index.js");
const operators_1 = __webpack_require__(/*! rxjs/operators */ "../../khrysalis/web/node_modules/rxjs/_esm5/operators/index.js");
const jsonParsing_1 = __webpack_require__(/*! ./jsonParsing */ "../../khrysalis/web/dist/net/jsonParsing.js");
//! Declares com.lightningkite.khrysalis.net.unsuccessfulAsError
function ioReactivexSingleUnsuccessfulAsError(this_) {
    return this_.pipe(operators_1.map((it) => {
        if (it.ok) {
            return it;
        }
        else {
            throw new HttpResponseError_actual_1.HttpResponseException(it, undefined);
        }
    }));
}
exports.ioReactivexSingleUnsuccessfulAsError = ioReactivexSingleUnsuccessfulAsError;
//! Declares com.lightningkite.khrysalis.net.readJson
function ioReactivexSingleReadJson(this_, T) {
    return this_.pipe(operators_1.switchMap((it) => {
        if (it.ok) {
            return rxjs_1.from(it.json());
        }
        else {
            throw new HttpResponseError_actual_1.HttpResponseException(it, undefined);
        }
    }), operators_1.map((it) => {
        return jsonParsing_1.parse(it, T);
    }));
}
exports.ioReactivexSingleReadJson = ioReactivexSingleReadJson;
//! Declares com.lightningkite.khrysalis.net.readText
function ioReactivexSingleReadText(this_) {
    return this_.pipe(operators_1.switchMap((it) => {
        if (it.ok) {
            return rxjs_1.from(it.text());
        }
        else {
            throw new HttpResponseError_actual_1.HttpResponseException(it, undefined);
        }
    }));
}
exports.ioReactivexSingleReadText = ioReactivexSingleReadText;
//! Declares com.lightningkite.khrysalis.net.readData
function ioReactivexSingleReadData(this_) {
    return this_.pipe(operators_1.switchMap((it) => {
        if (it.ok) {
            return rxjs_1.from(it.arrayBuffer());
        }
        else {
            throw new HttpResponseError_actual_1.HttpResponseException(it, undefined);
        }
    }), operators_1.map((it) => new Int8Array(it)));
}
exports.ioReactivexSingleReadData = ioReactivexSingleReadData;
//! Declares com.lightningkite.khrysalis.net.readHttpException
function ioReactivexSingleReadHttpException(this_) {
    return this_.pipe(operators_1.catchError((err) => {
        if (err instanceof HttpResponseError_actual_1.HttpResponseException) {
            return rxjs_1.from(err.response.text())
                .pipe(operators_1.map((text) => {
                throw new HttpResponseError_actual_1.HttpReadResponseException(err.response, text, err.cause);
            }));
        }
        else {
            return rxjs_1.throwError(err);
        }
    }));
}
exports.ioReactivexSingleReadHttpException = ioReactivexSingleReadHttpException;
//# sourceMappingURL=RxHttpAssist.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/net/WebSocketFrame.shared.js":
/*!*************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/net/WebSocketFrame.shared.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: net/WebSocketFrame.shared.kt
// Package: com.lightningkite.khrysalis.net
// FQImport: com.lightningkite.khrysalis.net.WebSocketFrame.toString.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.net.WebSocketFrame.binary TS binary
// FQImport: com.lightningkite.khrysalis.net.WebSocketFrame.text TS text
Object.defineProperty(exports, "__esModule", { value: true });
//! Declares com.lightningkite.khrysalis.net.WebSocketFrame
class WebSocketFrame {
    constructor(binary = null, text = null) {
        this.binary = binary;
        this.text = text;
    }
    toString() {
        var _a, _b;
        return (_b = (_a = this.text) !== null && _a !== void 0 ? _a : ((_it) => {
            if (_it === null)
                return null;
            return ((it) => `<Binary data length ${it.length}`)(_it);
        })(this.binary)) !== null && _b !== void 0 ? _b : "<Empty Frame>";
    }
}
exports.WebSocketFrame = WebSocketFrame;
//# sourceMappingURL=WebSocketFrame.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/net/jsonParsing.js":
/*!***************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/net/jsonParsing.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function parse(item, asType) {
    const mainType = asType[0];
    switch (mainType) {
        case null:
        case String:
        case Number:
        case Boolean:
            return item;
        case Array:
            return item.map(x => parse(x, asType[1]));
        case Map:
            let asObj = item;
            let map = new Map();
            if (asType[1] === String) {
                for (const key in Object.keys(asObj)) {
                    map.set(key, parse(asObj[key], asType[2]));
                }
            }
            else {
                for (const key in Object.keys(asObj)) {
                    map.set(parse(key, asType[1]), parse(asObj[key], asType[2]));
                }
            }
            return map;
        default:
            return mainType.fromJson(item, ...asType.slice(1));
    }
}
exports.parse = parse;
//# sourceMappingURL=jsonParsing.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/CombineObservableProperty.shared.js":
/*!********************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/CombineObservableProperty.shared.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: observables/CombineObservableProperty.shared.kt
// Package: com.lightningkite.khrysalis.observables
// FQImport: com.lightningkite.khrysalis.observables.CombineObservableProperty.A TS A
// FQImport: com.lightningkite.khrysalis.observables.CombineObservableProperty.combiner TS combiner
// FQImport: com.lightningkite.khrysalis.observables.CombineObservableProperty TS CombineObservableProperty
// FQImport: com.lightningkite.khrysalis.observables.CombineObservableProperty.observableB TS observableB
// FQImport: com.lightningkite.khrysalis.observables.CombineObservableProperty.<get-onChange>.<anonymous>.a TS a
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty.onChange TS onChange
// FQImport: com.lightningkite.khrysalis.observables.combine.C TS C
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty TS ObservableProperty
// FQImport: com.lightningkite.khrysalis.observables.CombineObservableProperty.T TS T
// FQImport: com.lightningkite.khrysalis.observables.combine.T TS T
// FQImport: com.lightningkite.khrysalis.observables.combine.combiner TS combiner
// FQImport: com.lightningkite.khrysalis.observables.CombineObservableProperty.observableA TS observableA
// FQImport: com.lightningkite.khrysalis.observables.CombineObservableProperty.B TS B
// FQImport: com.lightningkite.khrysalis.observables.combine.other TS other
// FQImport: com.lightningkite.khrysalis.observables.combine.B TS B
// FQImport: com.lightningkite.khrysalis.observables.CombineObservableProperty.<get-onChange>.<anonymous>.b TS b
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty.value TS value
const operators_1 = __webpack_require__(/*! rxjs/operators */ "../../khrysalis/web/node_modules/rxjs/_esm5/operators/index.js");
const ObservableProperty_shared_1 = __webpack_require__(/*! ./ObservableProperty.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.shared.js");
const rxjs_1 = __webpack_require__(/*! rxjs */ "../../khrysalis/web/node_modules/rxjs/_esm5/index.js");
//! Declares com.lightningkite.khrysalis.observables.CombineObservableProperty
class CombineObservableProperty extends ObservableProperty_shared_1.ObservableProperty {
    constructor(observableA, observableB, combiner) {
        super();
        this.observableA = observableA;
        this.observableB = observableB;
        this.combiner = combiner;
    }
    //! Declares com.lightningkite.khrysalis.observables.CombineObservableProperty.value
    get value() { return this.combiner(this.observableA.value, this.observableB.value); }
    //! Declares com.lightningkite.khrysalis.observables.CombineObservableProperty.onChange
    get onChange() { return rxjs_1.combineLatest([rxjs_1.concat(rxjs_1.of(this.observableA.value), this.observableA.onChange), rxjs_1.concat(rxjs_1.of(this.observableB.value), this.observableB.onChange)]).pipe(operators_1.map(x => ((a, b) => this.combiner(a, b))(x[0], x[1]))).pipe(operators_1.skip(0)); }
}
exports.CombineObservableProperty = CombineObservableProperty;
//! Declares com.lightningkite.khrysalis.observables.combine>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any>
function comLightningkiteKhrysalisObservablesObservablePropertyCombine(this_, other, combiner) {
    return new CombineObservableProperty(this_, other, combiner);
}
exports.comLightningkiteKhrysalisObservablesObservablePropertyCombine = comLightningkiteKhrysalisObservablesObservablePropertyCombine;
//# sourceMappingURL=CombineObservableProperty.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/ConstantObservableProperty.shared.js":
/*!*********************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/ConstantObservableProperty.shared.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: observables/ConstantObservableProperty.shared.kt
// Package: com.lightningkite.khrysalis.observables
// FQImport: com.lightningkite.khrysalis.observables.ConstantObservableProperty.underlyingValue TS underlyingValue
// FQImport: com.lightningkite.khrysalis.observables.ConstantObservableProperty.T TS T
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty TS ObservableProperty
const ObservableProperty_shared_1 = __webpack_require__(/*! ./ObservableProperty.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.shared.js");
const rxjs_1 = __webpack_require__(/*! rxjs */ "../../khrysalis/web/node_modules/rxjs/_esm5/index.js");
//! Declares com.lightningkite.khrysalis.observables.ConstantObservableProperty
class ConstantObservableProperty extends ObservableProperty_shared_1.ObservableProperty {
    constructor(underlyingValue) {
        super();
        this.underlyingValue = underlyingValue;
        this.onChange = rxjs_1.NEVER;
    }
    //! Declares com.lightningkite.khrysalis.observables.ConstantObservableProperty.value
    get value() { return this.underlyingValue; }
}
exports.ConstantObservableProperty = ConstantObservableProperty;
//# sourceMappingURL=ConstantObservableProperty.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/EventToObservableProperty.shared.js":
/*!********************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/EventToObservableProperty.shared.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: observables/EventToObservableProperty.shared.kt
// Package: com.lightningkite.khrysalis.observables
// FQImport: com.lightningkite.khrysalis.observables.EventToObservableProperty.value TS value
// FQImport: com.lightningkite.khrysalis.observables.asObservableProperty.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.observables.EventToObservableProperty.<get-onChange>.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.observables.EventToObservableProperty.T TS T
// FQImport: com.lightningkite.khrysalis.observables.EventToObservableProperty TS EventToObservableProperty
// FQImport: com.lightningkite.khrysalis.observables.EventToObservableProperty.wrapped TS wrapped
// FQImport: com.lightningkite.khrysalis.observables.asObservableProperty.Element TS Element
// FQImport: com.lightningkite.khrysalis.observables.asObservableProperty.defaultValue TS defaultValue
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty TS ObservableProperty
// FQImport: com.lightningkite.khrysalis.observables.asObservablePropertyDefaultNull.Element TS Element
// FQImport: com.lightningkite.khrysalis.observables.asObservablePropertyDefaultNull.<anonymous>.it TS it
const ObservableProperty_shared_1 = __webpack_require__(/*! ./ObservableProperty.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.shared.js");
const operators_1 = __webpack_require__(/*! rxjs/operators */ "../../khrysalis/web/node_modules/rxjs/_esm5/operators/index.js");
//! Declares com.lightningkite.khrysalis.observables.EventToObservableProperty
class EventToObservableProperty extends ObservableProperty_shared_1.ObservableProperty {
    constructor(value, wrapped) {
        super();
        this.value = value;
        this.wrapped = wrapped;
    }
    //! Declares com.lightningkite.khrysalis.observables.EventToObservableProperty.onChange
    get onChange() {
        return this.wrapped.pipe(operators_1.map((it) => {
            this.value = it;
            return it;
        }));
    }
}
exports.EventToObservableProperty = EventToObservableProperty;
//! Declares com.lightningkite.khrysalis.observables.asObservableProperty>io.reactivex.Observable<kotlin.Any>
function ioReactivexObservableAsObservableProperty(this_, defaultValue) {
    return new EventToObservableProperty(defaultValue, this_.pipe(operators_1.map((it) => it)));
}
exports.ioReactivexObservableAsObservableProperty = ioReactivexObservableAsObservableProperty;
//! Declares com.lightningkite.khrysalis.observables.asObservablePropertyDefaultNull>io.reactivex.Observable<kotlin.Any>
function ioReactivexObservableAsObservablePropertyDefaultNull(this_) {
    return new EventToObservableProperty(null, this_.pipe(operators_1.map((it) => it)));
}
exports.ioReactivexObservableAsObservablePropertyDefaultNull = ioReactivexObservableAsObservablePropertyDefaultNull;
//# sourceMappingURL=EventToObservableProperty.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/FlatMappedObservableProperty.shared.js":
/*!***********************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/FlatMappedObservableProperty.shared.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: observables/FlatMappedObservableProperty.shared.kt
// Package: com.lightningkite.khrysalis.observables
// FQImport: com.lightningkite.khrysalis.observables.flatMapMutable.B TS B
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty.value TS value
// FQImport: com.lightningkite.khrysalis.observables.flatMap.T TS T
// FQImport: com.lightningkite.khrysalis.observables.flatMap.B TS B
// FQImport: com.lightningkite.khrysalis.observables.FlatMappedObservableProperty.basedOn TS basedOn
// FQImport: com.lightningkite.khrysalis.observables.MutableFlatMappedObservableProperty.<get-onChange>.<anonymous>.prop TS prop
// FQImport: com.lightningkite.khrysalis.observables.observable>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any> TS getComLightningkiteKhrysalisObservablesObservablePropertyObservable
// FQImport: com.lightningkite.khrysalis.observables.MutableFlatMappedObservableProperty.basedOn TS basedOn
// FQImport: com.lightningkite.khrysalis.observables.FlatMappedObservableProperty.transformation TS transformation
// FQImport: com.lightningkite.khrysalis.observables.MutableFlatMappedObservableProperty.B TS B
// FQImport: com.lightningkite.khrysalis.observables.flatMapMutable.transformation TS transformation
// FQImport: com.lightningkite.khrysalis.observables.FlatMappedObservableProperty.B TS B
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty.update TS update
// FQImport: com.lightningkite.khrysalis.observables.MutableFlatMappedObservableProperty.transformation TS transformation
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty TS ObservableProperty
// FQImport: com.lightningkite.khrysalis.observables.FlatMappedObservableProperty.<get-onChange>.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.observables.MutableFlatMappedObservableProperty.A TS A
// FQImport: com.lightningkite.khrysalis.observables.flatMap.transformation TS transformation
// FQImport: com.lightningkite.khrysalis.observables.FlatMappedObservableProperty TS FlatMappedObservableProperty
// FQImport: com.lightningkite.khrysalis.observables.MutableFlatMappedObservableProperty.<set-value>.value TS value
// FQImport: com.lightningkite.khrysalis.observables.MutableFlatMappedObservableProperty.lastProperty TS lastProperty
// FQImport: com.lightningkite.khrysalis.observables.flatMapMutable.T TS T
// FQImport: com.lightningkite.khrysalis.observables.MutableFlatMappedObservableProperty.<get-onChange>.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.observables.FlatMappedObservableProperty.A TS A
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty TS MutableObservableProperty
// FQImport: com.lightningkite.khrysalis.observables.MutableFlatMappedObservableProperty TS MutableFlatMappedObservableProperty
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty.value TS value
const operators_1 = __webpack_require__(/*! rxjs/operators */ "../../khrysalis/web/node_modules/rxjs/_esm5/operators/index.js");
const ObservableProperty_shared_1 = __webpack_require__(/*! ./ObservableProperty.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.shared.js");
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! ./ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
const MutableObservableProperty_shared_1 = __webpack_require__(/*! ./MutableObservableProperty.shared */ "../../khrysalis/web/dist/observables/MutableObservableProperty.shared.js");
//! Declares com.lightningkite.khrysalis.observables.FlatMappedObservableProperty
class FlatMappedObservableProperty extends ObservableProperty_shared_1.ObservableProperty {
    constructor(basedOn, transformation) {
        super();
        this.basedOn = basedOn;
        this.transformation = transformation;
    }
    //! Declares com.lightningkite.khrysalis.observables.FlatMappedObservableProperty.value
    get value() { return this.transformation(this.basedOn.value).value; }
    //! Declares com.lightningkite.khrysalis.observables.FlatMappedObservableProperty.onChange
    get onChange() { return ObservableProperty_ext_shared_1.getComLightningkiteKhrysalisObservablesObservablePropertyObservable(this.basedOn).pipe(operators_1.switchMap((it) => ObservableProperty_ext_shared_1.getComLightningkiteKhrysalisObservablesObservablePropertyObservable(this.transformation(it)))).pipe(operators_1.skip(0)); }
}
exports.FlatMappedObservableProperty = FlatMappedObservableProperty;
//! Declares com.lightningkite.khrysalis.observables.flatMap>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any>
function comLightningkiteKhrysalisObservablesObservablePropertyFlatMap(this_, transformation) {
    return new FlatMappedObservableProperty(this_, transformation);
}
exports.comLightningkiteKhrysalisObservablesObservablePropertyFlatMap = comLightningkiteKhrysalisObservablesObservablePropertyFlatMap;
//! Declares com.lightningkite.khrysalis.observables.MutableFlatMappedObservableProperty
class MutableFlatMappedObservableProperty extends MutableObservableProperty_shared_1.MutableObservableProperty {
    constructor(basedOn, transformation) {
        super();
        this.basedOn = basedOn;
        this.transformation = transformation;
        this.lastProperty = null;
    }
    //! Declares com.lightningkite.khrysalis.observables.MutableFlatMappedObservableProperty.value
    get value() { return this.transformation(this.basedOn.value).value; }
    set value(value) {
        this.transformation(this.basedOn.value).value = value;
    }
    //! Declares com.lightningkite.khrysalis.observables.MutableFlatMappedObservableProperty.onChange
    get onChange() {
        return ObservableProperty_ext_shared_1.getComLightningkiteKhrysalisObservablesObservablePropertyObservable(this.basedOn).pipe(operators_1.switchMap((it) => {
            const prop = this.transformation(it);
            this.lastProperty = prop;
            return ObservableProperty_ext_shared_1.getComLightningkiteKhrysalisObservablesObservablePropertyObservable(prop);
        })).pipe(operators_1.skip(0));
    }
    update() {
        var _a;
        (_a = this.lastProperty) === null || _a === void 0 ? void 0 : _a.update();
    }
}
exports.MutableFlatMappedObservableProperty = MutableFlatMappedObservableProperty;
//! Declares com.lightningkite.khrysalis.observables.flatMapMutable>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any>
function comLightningkiteKhrysalisObservablesObservablePropertyFlatMapMutable(this_, transformation) {
    return new MutableFlatMappedObservableProperty(this_, transformation);
}
exports.comLightningkiteKhrysalisObservablesObservablePropertyFlatMapMutable = comLightningkiteKhrysalisObservablesObservablePropertyFlatMapMutable;
//# sourceMappingURL=FlatMappedObservableProperty.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/MutableObservableProperty.shared.js":
/*!********************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/MutableObservableProperty.shared.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: observables/MutableObservableProperty.shared.kt
// Package: com.lightningkite.khrysalis.observables
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty.T TS T
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty TS ObservableProperty
const ObservableProperty_shared_1 = __webpack_require__(/*! ./ObservableProperty.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.shared.js");
//! Declares com.lightningkite.khrysalis.observables.MutableObservableProperty
class MutableObservableProperty extends ObservableProperty_shared_1.ObservableProperty {
    constructor() {
        super();
    }
}
exports.MutableObservableProperty = MutableObservableProperty;
//# sourceMappingURL=MutableObservableProperty.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js":
/*!*****************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/ObservableProperty.ext.shared.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: observables/ObservableProperty.ext.shared.kt
// Package: com.lightningkite.khrysalis.observables
// FQImport: com.lightningkite.khrysalis.observables.includes.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.observables.subscribeBy.onNext TS onNext
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty.value TS value
// FQImport: com.lightningkite.khrysalis.observables.subscribeBy.T TS T
// FQImport: com.lightningkite.khrysalis.observables.includes.collection TS collection
// FQImport: kotlin.Throwable.printStackTrace TS printStackTrace
// FQImport: kotlin.collections.Set TS Set
// FQImport: com.lightningkite.khrysalis.observables.observableNN.T TS T
// FQImport: com.lightningkite.khrysalis.observables.observable>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any> TS getComLightningkiteKhrysalisObservablesObservablePropertyObservable
// FQImport: com.lightningkite.khrysalis.observables.subscribeBy.onComplete TS onComplete
// FQImport: com.lightningkite.khrysalis.observables.observable.T TS T
// FQImport: com.lightningkite.khrysalis.observables.map>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any> TS comLightningkiteKhrysalisObservablesObservablePropertyMap
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty.onChange TS onChange
// FQImport: com.lightningkite.khrysalis.observables.withWrite>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any> TS comLightningkiteKhrysalisObservablesObservablePropertyWithWrite
// FQImport: com.lightningkite.khrysalis.observables.<get-observableNN>.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty TS ObservableProperty
// FQImport: com.lightningkite.khrysalis.observables.subscribeBy.onError TS onError
// FQImport: com.lightningkite.khrysalis.observables.includes.E TS E
// FQImport: com.lightningkite.khrysalis.observables.onChangeNN.T TS T
// FQImport: com.lightningkite.khrysalis.observables.includes.element TS element
// FQImport: com.lightningkite.khrysalis.observables.subscribeBy.<anonymous>.boxed TS boxed
// FQImport: com.lightningkite.khrysalis.observables.subscribeBy.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.observables.<get-onChangeNN>.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty TS MutableObservableProperty
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty.value TS value
const WriteAddedObservableProperty_shared_1 = __webpack_require__(/*! ./WriteAddedObservableProperty.shared */ "../../khrysalis/web/dist/observables/WriteAddedObservableProperty.shared.js");
const TransformedObservableProperty_shared_1 = __webpack_require__(/*! ./TransformedObservableProperty.shared */ "../../khrysalis/web/dist/observables/TransformedObservableProperty.shared.js");
const rxjs_1 = __webpack_require__(/*! rxjs */ "../../khrysalis/web/node_modules/rxjs/_esm5/index.js");
const operators_1 = __webpack_require__(/*! rxjs/operators */ "../../khrysalis/web/node_modules/rxjs/_esm5/operators/index.js");
//! Declares com.lightningkite.khrysalis.observables.observable>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any>
function getComLightningkiteKhrysalisObservablesObservablePropertyObservable(this_) { return rxjs_1.concat(rxjs_1.of(this_.value), this_.onChange); }
exports.getComLightningkiteKhrysalisObservablesObservablePropertyObservable = getComLightningkiteKhrysalisObservablesObservablePropertyObservable;
//! Declares com.lightningkite.khrysalis.observables.observableNN>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any>
function getComLightningkiteKhrysalisObservablesObservablePropertyObservableNN(this_) { return rxjs_1.concat(rxjs_1.of(this_.value), this_.onChange).pipe(operators_1.map((it) => it)); }
exports.getComLightningkiteKhrysalisObservablesObservablePropertyObservableNN = getComLightningkiteKhrysalisObservablesObservablePropertyObservableNN;
//! Declares com.lightningkite.khrysalis.observables.onChangeNN>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any>
function getComLightningkiteKhrysalisObservablesObservablePropertyOnChangeNN(this_) { return this_.onChange.pipe(operators_1.map((it) => it)); }
exports.getComLightningkiteKhrysalisObservablesObservablePropertyOnChangeNN = getComLightningkiteKhrysalisObservablesObservablePropertyOnChangeNN;
//! Declares com.lightningkite.khrysalis.observables.subscribeBy>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any>
function comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(this_, onError = (it) => {
    it.printStackTrace();
}, onComplete = () => { }, onNext = (it) => { }) {
    return getComLightningkiteKhrysalisObservablesObservablePropertyObservable(this_).subscribe((boxed) => {
        onNext(boxed);
    }, onError, onComplete);
}
exports.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy = comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy;
//! Declares com.lightningkite.khrysalis.observables.includes
function includes(collection, element) {
    return WriteAddedObservableProperty_shared_1.comLightningkiteKhrysalisObservablesObservablePropertyWithWrite(TransformedObservableProperty_shared_1.comLightningkiteKhrysalisObservablesObservablePropertyMap(collection, (it) => it.has(element)), (it) => {
        if (it) {
            collection.value = new Set([...collection.value, element]);
        }
        else {
            collection.value = new Set([...collection.value].filter(x => x !== element));
        }
    });
}
exports.includes = includes;
//# sourceMappingURL=ObservableProperty.ext.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/ObservableProperty.shared.js":
/*!*************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/ObservableProperty.shared.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
//! Declares com.lightningkite.khrysalis.observables.ObservableProperty
class ObservableProperty {
    constructor() {
    }
}
exports.ObservableProperty = ObservableProperty;
//# sourceMappingURL=ObservableProperty.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/ObservableStack.shared.js":
/*!**********************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/ObservableStack.shared.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: observables/ObservableStack.shared.kt
// Package: com.lightningkite.khrysalis.observables
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.onChange TS onChange
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.swap.t TS t
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.stack TS stack
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.T TS T
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.popTo.found TS found
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack TS ObservableStack
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.push.t TS t
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.popTo.predicate TS predicate
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty TS ObservableProperty
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.Companion.withFirst.value TS value
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.popTo TS popTo
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.popTo.i TS i
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.Companion.withFirst.T TS T
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.reset.t TS t
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.Companion.withFirst.result TS result
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.reset TS reset
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.popTo.t TS t
const ObservableProperty_shared_1 = __webpack_require__(/*! ./ObservableProperty.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.shared.js");
const rxjs_1 = __webpack_require__(/*! rxjs */ "../../khrysalis/web/node_modules/rxjs/_esm5/index.js");
const Kotlin_1 = __webpack_require__(/*! ../Kotlin */ "../../khrysalis/web/dist/Kotlin.js");
//! Declares com.lightningkite.khrysalis.observables.ObservableStack
class ObservableStack extends ObservableProperty_shared_1.ObservableProperty {
    constructor() {
        super();
        this.onChange = new rxjs_1.Subject();
        this.stack = [];
    }
    //! Declares com.lightningkite.khrysalis.observables.ObservableStack.value
    get value() {
        return this.stack;
    }
    push(t) {
        this.stack.push(t);
        this.onChange.next(this.stack);
    }
    swap(t) {
        this.stack.splice((this.stack.length - 1), 1);
        this.stack.push(t);
        this.onChange.next(this.stack);
    }
    pop() {
        if (this.stack.length <= 1) {
            return false;
        }
        this.stack.splice((this.stack.length - 1), 1);
        this.onChange.next(this.stack);
        return true;
    }
    dismiss() {
        if (this.stack.length === 0) {
            return false;
        }
        this.stack.splice((this.stack.length - 1), 1);
        this.onChange.next(this.stack);
        return true;
    }
    popTo(t) {
        let found = false;
        for (const i of new Kotlin_1.NumberRange(0, (this.stack.length - 1))) {
            if (found) {
                this.stack.splice((this.stack.length - 1), 1);
            }
            else if (this.stack[i] === t) {
                found = true;
            }
        }
        this.onChange.next(this.stack);
    }
    popToPredicate(predicate) {
        let found = false;
        for (const i of new Kotlin_1.NumberRange(0, (this.stack.length - 1))) {
            if (found) {
                this.stack.splice((this.stack.length - 1), 1);
            }
            else if (predicate(this.stack[i])) {
                found = true;
            }
        }
        this.onChange.next(this.stack);
    }
    root() {
        this.popTo(this.stack[0]);
    }
    reset(t) {
        this.stack.length = 0;
        this.stack.push(t);
        this.onChange.next(this.stack);
    }
}
exports.ObservableStack = ObservableStack;
(function (ObservableStack) {
    //! Declares com.lightningkite.khrysalis.observables.ObservableStack.Companion
    class Companion {
        constructor() {
        }
        withFirst(value) {
            const result = new ObservableStack();
            result.reset(value);
            return result;
        }
    }
    Companion.INSTANCE = new Companion();
    ObservableStack.Companion = Companion;
})(ObservableStack = exports.ObservableStack || (exports.ObservableStack = {}));
//# sourceMappingURL=ObservableStack.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js":
/*!*********************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/StandardObservableProperty.shared.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: observables/StandardObservableProperty.shared.kt
// Package: com.lightningkite.khrysalis.observables
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty.underlyingValue TS underlyingValue
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty.onChange TS onChange
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty.T TS T
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty.value TS value
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty.<set-value>.value TS value
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty TS MutableObservableProperty
const MutableObservableProperty_shared_1 = __webpack_require__(/*! ./MutableObservableProperty.shared */ "../../khrysalis/web/dist/observables/MutableObservableProperty.shared.js");
const rxjs_1 = __webpack_require__(/*! rxjs */ "../../khrysalis/web/node_modules/rxjs/_esm5/index.js");
//! Declares com.lightningkite.khrysalis.observables.StandardObservableProperty
class StandardObservableProperty extends MutableObservableProperty_shared_1.MutableObservableProperty {
    constructor(underlyingValue, onChange = new rxjs_1.Subject()) {
        super();
        this.underlyingValue = underlyingValue;
        this.onChange = onChange;
    }
    //! Declares com.lightningkite.khrysalis.observables.StandardObservableProperty.value
    get value() { return this.underlyingValue; }
    set value(value) {
        this.underlyingValue = value;
        this.onChange.next(value);
    }
    update() {
        this.onChange.next(this.value);
    }
}
exports.StandardObservableProperty = StandardObservableProperty;
//# sourceMappingURL=StandardObservableProperty.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/TransformedMutableObservableProperty.shared.js":
/*!*******************************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/TransformedMutableObservableProperty.shared.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const operators_1 = __webpack_require__(/*! rxjs/operators */ "../../khrysalis/web/node_modules/rxjs/_esm5/operators/index.js");
const MutableObservableProperty_shared_1 = __webpack_require__(/*! ./MutableObservableProperty.shared */ "../../khrysalis/web/dist/observables/MutableObservableProperty.shared.js");
//! Declares com.lightningkite.khrysalis.observables.TransformedMutableObservableProperty
class TransformedMutableObservableProperty extends MutableObservableProperty_shared_1.MutableObservableProperty {
    constructor(basedOn, read, write) {
        super();
        this.basedOn = basedOn;
        this.read = read;
        this.write = write;
        this.onChange = this.basedOn.onChange.pipe(operators_1.map((it) => this.read(it)));
    }
    update() {
        this.basedOn.update();
    }
    //! Declares com.lightningkite.khrysalis.observables.TransformedMutableObservableProperty.value
    get value() {
        return this.read(this.basedOn.value);
    }
    set value(value) {
        this.basedOn.value = this.write(value);
    }
}
exports.TransformedMutableObservableProperty = TransformedMutableObservableProperty;
//! Declares com.lightningkite.khrysalis.observables.transformed>com.lightningkite.khrysalis.observables.MutableObservableProperty<kotlin.Any>
function comLightningkiteKhrysalisObservablesMutableObservablePropertyTransformed(this_, read, write) {
    return new TransformedMutableObservableProperty(this_, read, write);
}
exports.comLightningkiteKhrysalisObservablesMutableObservablePropertyTransformed = comLightningkiteKhrysalisObservablesMutableObservablePropertyTransformed;
//! Declares com.lightningkite.khrysalis.observables.map>com.lightningkite.khrysalis.observables.MutableObservableProperty<kotlin.Any>
function comLightningkiteKhrysalisObservablesMutableObservablePropertyMap(this_, read, write) {
    return new TransformedMutableObservableProperty(this_, read, write);
}
exports.comLightningkiteKhrysalisObservablesMutableObservablePropertyMap = comLightningkiteKhrysalisObservablesMutableObservablePropertyMap;
//# sourceMappingURL=TransformedMutableObservableProperty.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/TransformedObservableProperty.shared.js":
/*!************************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/TransformedObservableProperty.shared.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: observables/TransformedObservableProperty.shared.kt
// Package: com.lightningkite.khrysalis.observables
// FQImport: com.lightningkite.khrysalis.observables.TransformedObservableProperty.basedOn TS basedOn
// FQImport: com.lightningkite.khrysalis.observables.TransformedObservableProperty.A TS A
// FQImport: com.lightningkite.khrysalis.observables.transformed.T TS T
// FQImport: com.lightningkite.khrysalis.observables.TransformedObservableProperty.onChange.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.observables.map.T TS T
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty.onChange TS onChange
// FQImport: com.lightningkite.khrysalis.observables.TransformedObservableProperty TS TransformedObservableProperty
// FQImport: com.lightningkite.khrysalis.observables.transformed.read TS read
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty TS ObservableProperty
// FQImport: com.lightningkite.khrysalis.observables.map.read TS read
// FQImport: com.lightningkite.khrysalis.observables.TransformedObservableProperty.B TS B
// FQImport: com.lightningkite.khrysalis.observables.TransformedObservableProperty.read TS read
// FQImport: com.lightningkite.khrysalis.observables.transformed.B TS B
// FQImport: com.lightningkite.khrysalis.observables.map.B TS B
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty.value TS value
const ObservableProperty_shared_1 = __webpack_require__(/*! ./ObservableProperty.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.shared.js");
const operators_1 = __webpack_require__(/*! rxjs/operators */ "../../khrysalis/web/node_modules/rxjs/_esm5/operators/index.js");
//! Declares com.lightningkite.khrysalis.observables.TransformedObservableProperty
class TransformedObservableProperty extends ObservableProperty_shared_1.ObservableProperty {
    constructor(basedOn, read) {
        super();
        this.basedOn = basedOn;
        this.read = read;
        this.onChange = this.basedOn.onChange.pipe(operators_1.map((it) => this.read(it)));
    }
    //! Declares com.lightningkite.khrysalis.observables.TransformedObservableProperty.value
    get value() {
        return this.read(this.basedOn.value);
    }
}
exports.TransformedObservableProperty = TransformedObservableProperty;
//! Declares com.lightningkite.khrysalis.observables.transformed>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any>
function comLightningkiteKhrysalisObservablesObservablePropertyTransformed(this_, read) {
    return new TransformedObservableProperty(this_, read);
}
exports.comLightningkiteKhrysalisObservablesObservablePropertyTransformed = comLightningkiteKhrysalisObservablesObservablePropertyTransformed;
//! Declares com.lightningkite.khrysalis.observables.map>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any>
function comLightningkiteKhrysalisObservablesObservablePropertyMap(this_, read) {
    return new TransformedObservableProperty(this_, read);
}
exports.comLightningkiteKhrysalisObservablesObservablePropertyMap = comLightningkiteKhrysalisObservablesObservablePropertyMap;
//# sourceMappingURL=TransformedObservableProperty.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/WriteAddedObservableProperty.shared.js":
/*!***********************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/WriteAddedObservableProperty.shared.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const MutableObservableProperty_shared_1 = __webpack_require__(/*! ./MutableObservableProperty.shared */ "../../khrysalis/web/dist/observables/MutableObservableProperty.shared.js");
//! Declares com.lightningkite.khrysalis.observables.WriteAddedObservableProperty
class WriteAddedObservableProperty extends MutableObservableProperty_shared_1.MutableObservableProperty {
    constructor(basedOn, onWrite) {
        super();
        this.basedOn = basedOn;
        this.onWrite = onWrite;
    }
    //! Declares com.lightningkite.khrysalis.observables.WriteAddedObservableProperty.value
    get value() { return this.basedOn.value; }
    set value(value) {
        this.onWrite(value);
    }
    //! Declares com.lightningkite.khrysalis.observables.WriteAddedObservableProperty.onChange
    get onChange() { return this.basedOn.onChange; }
    update() {
        //Do nothing
    }
}
exports.WriteAddedObservableProperty = WriteAddedObservableProperty;
//! Declares com.lightningkite.khrysalis.observables.withWrite>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any>
function comLightningkiteKhrysalisObservablesObservablePropertyWithWrite(this_, onWrite) {
    return new WriteAddedObservableProperty(this_, onWrite);
}
exports.comLightningkiteKhrysalisObservablesObservablePropertyWithWrite = comLightningkiteKhrysalisObservablesObservablePropertyWithWrite;
//# sourceMappingURL=WriteAddedObservableProperty.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/binding/AutoCompleteTextView.binding.actual.js":
/*!*******************************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/binding/AutoCompleteTextView.binding.actual.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const DisposeCondition_actual_1 = __webpack_require__(/*! ../../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! ../ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
//! Declares com.lightningkite.khrysalis.observables.binding.bind>android.widget.AutoCompleteTextView
function androidWidgetAutoCompleteTextViewBind(this_, options, toString, onItemSelected) {
    const container = this_.parentElement;
    let selectionView = null;
    function removeOptions() {
        if (selectionView) {
            container.removeChild(selectionView);
            selectionView = null;
        }
    }
    let lastCancel = Date.now();
    function removeOptionsCancel() {
        lastCancel = Date.now();
    }
    function removeOptionsTenative() {
        window.setTimeout(() => {
            if (Date.now() - lastCancel > 50) {
                removeOptions();
            }
        }, 100);
    }
    function showOptions(query, options) {
        removeOptions();
        const newSelectionView = document.createElement("div");
        newSelectionView.tabIndex = -1;
        newSelectionView.classList.add("khrysalis-autocomplete-options");
        const matchingOptions = options.filter((x) => toString(x).toLowerCase().indexOf(query.toLowerCase()) != -1);
        for (const option of matchingOptions) {
            const optionView = document.createElement("button");
            optionView.tabIndex = 0;
            optionView.classList.add("khrysalis-autocomplete-option");
            optionView.innerText = toString(option);
            optionView.addEventListener("click", (ev) => {
                ev.stopPropagation();
                onItemSelected(option);
                removeOptions();
            });
            optionView.addEventListener("blur", (ev) => {
                removeOptionsTenative();
            });
            optionView.addEventListener("focus", (ev) => {
                removeOptionsCancel();
            });
            optionView.addEventListener("keydown", (ev) => {
                switch (ev.code) {
                    case "ArrowDown":
                        ev.preventDefault();
                        let child = optionView.nextElementSibling;
                        if (child) {
                            child.focus();
                        }
                        break;
                    case "ArrowUp":
                        ev.preventDefault();
                        let child2 = optionView.previousElementSibling;
                        if (child2) {
                            child2.focus();
                        }
                        else {
                            this_.focus();
                        }
                        break;
                }
            });
            newSelectionView.appendChild(optionView);
        }
        container.appendChild(newSelectionView);
        selectionView = newSelectionView;
    }
    this_.addEventListener("blur", (ev) => {
        removeOptionsTenative();
    });
    this_.addEventListener("focus", (ev) => {
        removeOptionsCancel();
    });
    this_.addEventListener("input", (ev) => {
        showOptions(this_.value, options.value);
    });
    this_.addEventListener("keydown", (ev) => {
        switch (ev.code) {
            case "ArrowDown":
                ev.preventDefault();
                let child = selectionView === null || selectionView === void 0 ? void 0 : selectionView.firstElementChild;
                if (child) {
                    child.focus();
                }
                break;
        }
    });
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(options, undefined, undefined, (x) => {
        if (this_ === document.activeElement) {
            showOptions(this_.value, x);
        }
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
}
exports.androidWidgetAutoCompleteTextViewBind = androidWidgetAutoCompleteTextViewBind;
//# sourceMappingURL=AutoCompleteTextView.binding.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/binding/CompoundButton.binding.actual.js":
/*!*************************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/binding/CompoundButton.binding.actual.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: observables/binding/CompoundButton.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! ../ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! ../../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
//! Declares com.lightningkite.khrysalis.observables.binding.bindSelect>android.widget.CompoundButton
function androidWidgetCompoundButtonBindSelect(this_, value, observable) {
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(observable, undefined, undefined, (it) => {
        const shouldBeChecked = it.equals(value);
        if (!(this_.checked === shouldBeChecked)) {
            this_.checked = shouldBeChecked;
        }
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
    this_.onchange = ((ev) => {
        const isChecked = this_.checked;
        if (isChecked && !(observable.value.equals(value))) {
            observable.value = value;
        }
        else if (!isChecked && observable.value.equals(value)) {
            this_.checked = true;
        }
    });
}
exports.androidWidgetCompoundButtonBindSelect = androidWidgetCompoundButtonBindSelect;
//! Declares com.lightningkite.khrysalis.observables.binding.bindSelectNullable>android.widget.CompoundButton
function androidWidgetCompoundButtonBindSelectNullable(this_, value, observable) {
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(observable, undefined, undefined, (it) => {
        const shouldBeChecked = it.equals(value);
        if (!(this_.checked === shouldBeChecked)) {
            this_.checked = shouldBeChecked;
        }
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
    this_.onchange = ((ev) => {
        const isChecked = this_.checked;
        if (isChecked && !(observable.value.equals(value))) {
            observable.value = value;
        }
        else if (!isChecked && observable.value.equals(value)) {
            observable.value = null;
        }
    });
}
exports.androidWidgetCompoundButtonBindSelectNullable = androidWidgetCompoundButtonBindSelectNullable;
//! Declares com.lightningkite.khrysalis.observables.binding.bindSelectInvert>android.widget.CompoundButton
function androidWidgetCompoundButtonBindSelectInvert(this_, value, observable) {
    let suppress = false;
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(observable, undefined, undefined, (it) => {
        if (!suppress) {
            suppress = true;
            const shouldBeChecked = it.equals(value) || it.equals(null);
            if (!(this_.checked === shouldBeChecked)) {
                this_.checked = shouldBeChecked;
            }
            suppress = false;
        }
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
    this_.onchange = ((ev) => {
        const isChecked = this_.checked;
        if (!suppress) {
            suppress = true;
            if (!isChecked && observable.value.equals(value)) {
                observable.value = null;
                this_.checked = true;
            }
            else if (!(observable.value.equals(value))) {
                observable.value = value;
                this_.checked = true;
            }
            suppress = false;
        }
    });
}
exports.androidWidgetCompoundButtonBindSelectInvert = androidWidgetCompoundButtonBindSelectInvert;
//! Declares com.lightningkite.khrysalis.observables.binding.bind>android.widget.CompoundButton
function androidWidgetCompoundButtonBind(this_, observable) {
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(observable, undefined, undefined, (it) => {
        if (!(it === this_.checked)) {
            this_.checked = it;
        }
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
    this_.onchange = ((ev) => {
        const isChecked = this_.checked;
        if (!(observable.value === isChecked)) {
            observable.value = isChecked;
        }
    });
}
exports.androidWidgetCompoundButtonBind = androidWidgetCompoundButtonBind;
//# sourceMappingURL=CompoundButton.binding.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/binding/DateButton.binding.actual.js":
/*!*********************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/binding/DateButton.binding.actual.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: observables/binding/DateButton.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! ../ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
const Date_actual_1 = __webpack_require__(/*! ../../time/Date.actual */ "../../khrysalis/web/dist/time/Date.actual.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! ../../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
//! Declares com.lightningkite.khrysalis.observables.binding.bind>com.lightningkite.khrysalis.views.android.DateButton
function comLightningkiteKhrysalisViewsAndroidDateButtonBind(this_, date) {
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(date, undefined, undefined, (it) => {
        this_.valueAsDate = it;
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
    this_.onchange = (e) => {
        date.value = this_.valueAsDate;
    };
}
exports.comLightningkiteKhrysalisViewsAndroidDateButtonBind = comLightningkiteKhrysalisViewsAndroidDateButtonBind;
//! Declares com.lightningkite.khrysalis.observables.binding.bind>com.lightningkite.khrysalis.views.android.TimeButton
function comLightningkiteKhrysalisViewsAndroidTimeButtonBind(this_, date, minuteInterval = 1) {
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(date, undefined, undefined, (it) => {
        this_.valueAsDate = it;
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
    this_.onchange = (e) => {
        date.value = this_.valueAsDate;
    };
}
exports.comLightningkiteKhrysalisViewsAndroidTimeButtonBind = comLightningkiteKhrysalisViewsAndroidTimeButtonBind;
//! Declares com.lightningkite.khrysalis.observables.binding.bindDateAlone>com.lightningkite.khrysalis.views.android.DateButton
function comLightningkiteKhrysalisViewsAndroidDateButtonBindDateAlone(this_, date) {
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(date, undefined, undefined, (it) => {
        this_.valueAsDate = Date_actual_1.dateFrom(it, Date_actual_1.getJavaUtilDateTimeAlone(Date.constructor()), undefined);
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
    this_.onchange = (e) => {
        date.value = Date_actual_1.getJavaUtilDateDateAlone(this_.valueAsDate);
    };
}
exports.comLightningkiteKhrysalisViewsAndroidDateButtonBindDateAlone = comLightningkiteKhrysalisViewsAndroidDateButtonBindDateAlone;
//! Declares com.lightningkite.khrysalis.observables.binding.bindTimeAlone>com.lightningkite.khrysalis.views.android.TimeButton
function comLightningkiteKhrysalisViewsAndroidTimeButtonBindTimeAlone(this_, date, minuteInterval = 1) {
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(date, undefined, undefined, (it) => {
        this_.valueAsDate = Date_actual_1.dateFrom(Date_actual_1.getJavaUtilDateDateAlone(Date.constructor()), it, undefined);
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
    this_.onchange = (e) => {
        date.value = Date_actual_1.getJavaUtilDateTimeAlone(this_.valueAsDate);
    };
}
exports.comLightningkiteKhrysalisViewsAndroidTimeButtonBindTimeAlone = comLightningkiteKhrysalisViewsAndroidTimeButtonBindTimeAlone;
//# sourceMappingURL=DateButton.binding.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/binding/EditText.binding.actual.js":
/*!*******************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/binding/EditText.binding.actual.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: observables/binding/EditText.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! ../ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
const Kotlin_1 = __webpack_require__(/*! ../../Kotlin */ "../../khrysalis/web/dist/Kotlin.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! ../../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
//! Declares com.lightningkite.khrysalis.observables.binding.bindString>android.widget.EditText
function androidWidgetEditTextBindString(this_, observable) {
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(observable, undefined, undefined, (value) => {
        if (!(observable.value === this_.value.toString())) {
            this_.value = observable.value;
        }
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
    this_.onchange = (e) => {
        const s = this_.value;
        if (!(observable.value === s)) {
            observable.value = s;
        }
    };
}
exports.androidWidgetEditTextBindString = androidWidgetEditTextBindString;
//! Declares com.lightningkite.khrysalis.observables.binding.bindInteger>android.widget.EditText
function androidWidgetEditTextBindInteger(this_, observable) {
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(observable, undefined, undefined, (value) => {
        var _a, _b;
        const currentValue = Kotlin_1.parseIntOrNull(undefined);
        if (!(value === currentValue)) {
            this_.value = (_b = (_a = Kotlin_1.takeUnless(value, (it) => it === 0)) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : "";
        }
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
    this_.onchange = (e) => {
        var _a;
        const currentValue = (_a = Kotlin_1.parseIntOrNull(this_.value)) !== null && _a !== void 0 ? _a : 0;
        if (observable.value !== currentValue) {
            observable.value = currentValue;
        }
    };
}
exports.androidWidgetEditTextBindInteger = androidWidgetEditTextBindInteger;
//! Declares com.lightningkite.khrysalis.observables.binding.bindDouble>android.widget.EditText
function androidWidgetEditTextBindDouble(this_, observable) {
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(observable, undefined, undefined, (value) => {
        var _a, _b;
        const currentValue = Kotlin_1.parseFloatOrNull(undefined);
        if (!(value === currentValue)) {
            this_.value = (_b = (_a = Kotlin_1.takeUnless(value, (it) => it === 0.0)) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : "";
        }
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
    this_.onchange = (e) => {
        var _a;
        const currentValue = (_a = Kotlin_1.parseFloatOrNull(this_.value)) !== null && _a !== void 0 ? _a : 0;
        if (observable.value !== currentValue) {
            observable.value = currentValue;
        }
    };
}
exports.androidWidgetEditTextBindDouble = androidWidgetEditTextBindDouble;
//# sourceMappingURL=EditText.binding.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/binding/LinearLayout.binding.shared.js":
/*!***********************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/binding/LinearLayout.binding.shared.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: observables/binding/LinearLayout.binding.shared.kt
// Package: com.lightningkite.khrysalis.observables.binding
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! ../ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! ../../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
const StandardObservableProperty_shared_1 = __webpack_require__(/*! ../StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const LinearLayout_actual_1 = __webpack_require__(/*! ../../views/LinearLayout.actual */ "../../khrysalis/web/dist/views/LinearLayout.actual.js");
const Align_shared_1 = __webpack_require__(/*! ../../views/geometry/Align.shared */ "../../khrysalis/web/dist/views/geometry/Align.shared.js");
const Kotlin_1 = __webpack_require__(/*! ../../Kotlin */ "../../khrysalis/web/dist/Kotlin.js");
const iterable_operator_1 = __webpack_require__(/*! iterable-operator */ "../../khrysalis/web/node_modules/iterable-operator/dist/es2018/index.umd.js");
const viewAttached_1 = __webpack_require__(/*! ../../views/viewAttached */ "../../khrysalis/web/dist/views/viewAttached.js");
//! Declares com.lightningkite.khrysalis.observables.binding.LinearLayoutBoundSubview
class LinearLayoutBoundSubview {
    constructor(view, property) {
        this.view = view;
        this.property = property;
    }
}
//! Declares com.lightningkite.khrysalis.observables.binding.bind>android.widget.LinearLayout
function androidWidgetLinearLayoutBind(this_, data, defaultValue, makeView) {
    const existingViews = [];
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(data, undefined, undefined, (value) => {
        //Fix view count
        const excessViews = existingViews.length - value.length;
        if (excessViews > 0) {
            //remove views
            for (const iter of new Kotlin_1.NumberRange(1, excessViews)) {
                const old = existingViews.splice((existingViews.length - 1), 1)[0];
                this_.removeChild(old.view);
                viewAttached_1.triggerAttachmentEvent(old.view);
            }
        }
        else if (existingViews.length < value.length) {
            //add views
            for (const iter of new Kotlin_1.NumberRange(1, (-excessViews))) {
                const prop = new StandardObservableProperty_shared_1.StandardObservableProperty(defaultValue, undefined);
                const view = makeView(prop);
                this_.appendChild(LinearLayout_actual_1.androidWidgetLinearLayoutParams(this_, undefined, undefined, undefined, undefined, undefined, undefined, Align_shared_1.AlignPair.Companion.INSTANCE.centerFill, undefined)(view));
                viewAttached_1.triggerAttachmentEvent(view);
                existingViews.push(new LinearLayoutBoundSubview(view, prop));
            }
        }
        //Update views
        for (const index of iterable_operator_1.range(0, value.length - 1)) {
            existingViews[index].property.value = value[index];
        }
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
}
exports.androidWidgetLinearLayoutBind = androidWidgetLinearLayoutBind;
//# sourceMappingURL=LinearLayout.binding.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/binding/PageIndicatorView.binding.actual.js":
/*!****************************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/binding/PageIndicatorView.binding.actual.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: observables/binding/PageIndicatorView.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! ../ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! ../../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
//! Declares com.lightningkite.khrysalis.observables.binding.bind>com.rd.PageIndicatorView
function comRdPageIndicatorViewBind(this_, count = 0, selected) {
    for (let i = 0; i < count; i++) {
        const e = document.createElement("div");
        e.classList.add("khrysalis-page-indicator");
        this_.appendChild(e);
    }
    let previouslyActive = this_.firstElementChild;
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(selected, undefined, undefined, (page) => {
        if (previouslyActive) {
            previouslyActive.classList.remove("khrysalis-page-indicator-active");
        }
        const e = this_.children.item(page);
        if (e) {
            e.classList.add("khrysalis-page-indicator-active");
        }
        previouslyActive = e;
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
}
exports.comRdPageIndicatorViewBind = comRdPageIndicatorViewBind;
//! Declares com.lightningkite.khrysalis.observables.binding.bind>com.rd.PageIndicatorView
function comRdPageIndicatorViewBindDynamic(this_, count, selected) {
    let previouslyActive = this_.firstElementChild;
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(count, undefined, undefined, (count) => {
        this_.innerHTML = "";
        for (let i = 0; i < count; i++) {
            const e = document.createElement("div");
            e.classList.add("khrysalis-page-indicator");
            if (i === selected.value) {
                e.classList.add("khrysalis-page-indicator-active");
                previouslyActive = e;
            }
            this_.appendChild(e);
        }
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(selected, undefined, undefined, (page) => {
        if (previouslyActive) {
            previouslyActive.classList.remove("khrysalis-page-indicator-active");
        }
        const e = this_.children.item(page);
        if (e) {
            e.classList.add("khrysalis-page-indicator-active");
        }
        previouslyActive = e;
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
}
exports.comRdPageIndicatorViewBindDynamic = comRdPageIndicatorViewBindDynamic;
//# sourceMappingURL=PageIndicatorView.binding.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/binding/RatingBar.binding.actual.js":
/*!********************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/binding/RatingBar.binding.actual.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: observables/binding/RatingBar.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! ../ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! ../../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
//! Declares com.lightningkite.khrysalis.observables.binding.bind>android.widget.RatingBar
function ratingBarBindMutable(this_, stars, observable) {
    for (let i = 0; i < stars; i++) {
        const e = document.createElement("div");
        e.classList.add("khrysalis-rating-bar-star");
        e.onclick = (ev) => {
            ev.stopPropagation();
            observable.value = i + 1;
        };
        this_.appendChild(e);
    }
    androidWidgetRatingBarBind(this_, stars, observable);
}
exports.ratingBarBindMutable = ratingBarBindMutable;
//! Declares com.lightningkite.khrysalis.observables.binding.bind>android.widget.RatingBar
function androidWidgetRatingBarBind(this_, stars, observable) {
    for (let i = 0; i < stars; i++) {
        const e = document.createElement("div");
        e.classList.add("khrysalis-rating-bar-star");
        this_.appendChild(e);
    }
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(observable, undefined, undefined, (rating) => {
        for (let i = 0; i < stars; i++) {
            const e = this_.children.item(i);
            if (i + 1 < rating) {
                e.classList.remove("khrysalis-rating-bar-star-on");
            }
            else {
                e.classList.add("khrysalis-rating-bar-star-on");
            }
        }
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
}
exports.androidWidgetRatingBarBind = androidWidgetRatingBarBind;
//! Declares com.lightningkite.khrysalis.observables.binding.bindFloat>android.widget.RatingBar
function ratingBarBindFloatMutable(this_, stars, observable) {
    ratingBarBindMutable(this_, stars, observable);
}
exports.ratingBarBindFloatMutable = ratingBarBindFloatMutable;
//! Declares com.lightningkite.khrysalis.observables.binding.bindFloat>android.widget.RatingBar
function androidWidgetRatingBarBindFloat(this_, stars, observable) {
    androidWidgetRatingBarBind(this_, stars, observable);
}
exports.androidWidgetRatingBarBindFloat = androidWidgetRatingBarBindFloat;
//# sourceMappingURL=RatingBar.binding.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/binding/RecyclerView.binding.actual.js":
/*!***********************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/binding/RecyclerView.binding.actual.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter 
// File: observables/binding/RecyclerView.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! ../ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! ../../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
const StandardObservableProperty_shared_1 = __webpack_require__(/*! ../StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const LinearLayout_binding_shared_1 = __webpack_require__(/*! ./LinearLayout.binding.shared */ "../../khrysalis/web/dist/observables/binding/LinearLayout.binding.shared.js");
const viewAttached_1 = __webpack_require__(/*! ../../views/viewAttached */ "../../khrysalis/web/dist/views/viewAttached.js");
//! Declares com.lightningkite.khrysalis.observables.binding.whenScrolledToEnd>androidx.recyclerview.widget.RecyclerView
function androidxRecyclerviewWidgetRecyclerViewWhenScrolledToEnd(this_, action) {
    this_.addEventListener("scroll", (ev) => {
        if (this_.scrollTop >= this_.scrollHeight - this_.offsetHeight - 10) {
            action();
        }
    });
}
exports.androidxRecyclerviewWidgetRecyclerViewWhenScrolledToEnd = androidxRecyclerviewWidgetRecyclerViewWhenScrolledToEnd;
//! Declares com.lightningkite.khrysalis.observables.binding.reverseDirection>androidx.recyclerview.widget.RecyclerView
function getAndroidxRecyclerviewWidgetRecyclerViewReverseDirection(this_) {
    return this_.style.flexDirection.endsWith("reverse");
}
exports.getAndroidxRecyclerviewWidgetRecyclerViewReverseDirection = getAndroidxRecyclerviewWidgetRecyclerViewReverseDirection;
function setAndroidxRecyclerviewWidgetRecyclerViewReverseDirection(this_, value) {
    const existing = this_.style.flexDirection;
    if (existing.startsWith("row")) {
        if (value) {
            this_.style.flexDirection = "row-reverse";
        }
        else {
            this_.style.flexDirection = "row";
        }
    }
    else {
        if (value) {
            this_.style.flexDirection = "column-reverse";
        }
        else {
            this_.style.flexDirection = "column";
        }
    }
    return;
}
exports.setAndroidxRecyclerviewWidgetRecyclerViewReverseDirection = setAndroidxRecyclerviewWidgetRecyclerViewReverseDirection;
//! Declares com.lightningkite.khrysalis.observables.binding.bind>androidx.recyclerview.widget.RecyclerView
function androidxRecyclerviewWidgetRecyclerViewBind(this_, data, defaultValue, makeView) {
    LinearLayout_binding_shared_1.androidWidgetLinearLayoutBind(this_, data, defaultValue, makeView);
}
exports.androidxRecyclerviewWidgetRecyclerViewBind = androidxRecyclerviewWidgetRecyclerViewBind;
class RVTypeHandler {
    constructor() {
        this.handlers = [];
    }
    handle(T, defaultValue, action) {
        this.handlers.push({
            type: T,
            defaultValue: defaultValue,
            action: action,
            buffer: []
        });
    }
}
exports.RVTypeHandler = RVTypeHandler;
//! Declares com.lightningkite.khrysalis.observables.binding.bindMulti>androidx.recyclerview.widget.RecyclerView
function recyclerViewBindMultiType(this_, viewDependency, data, typeHandlerSetup) {
    const h = new RVTypeHandler();
    typeHandlerSetup(h);
    androidxRecyclerviewWidgetRecyclerViewBindMulti(this_, data, null, (x) => h.handlers.findIndex((handler) => x instanceof handler.type[0]), (type, prop) => {
        const handler = h.handlers[type];
        if (handler) {
            return handler.action(prop);
        }
        else {
            return document.createElement("div");
        }
    });
}
exports.recyclerViewBindMultiType = recyclerViewBindMultiType;
//! Declares com.lightningkite.khrysalis.observables.binding.bindMulti>androidx.recyclerview.widget.RecyclerView
function androidxRecyclerviewWidgetRecyclerViewBindMulti(this_, data, defaultValue, determineType, makeView) {
    let existingViews = [];
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(data, undefined, undefined, (value) => {
        var _a, _b, _c;
        //Place views
        const unusedViews = existingViews;
        while (this_.firstElementChild) {
            this_.firstElementChild.remove();
        }
        existingViews = [];
        for (const item of value) {
            const type = determineType(item);
            const view = (_b = (_a = unusedViews[type]) === null || _a === void 0 ? void 0 : _a.pop()) !== null && _b !== void 0 ? _b : (() => {
                const obs = new StandardObservableProperty_shared_1.StandardObservableProperty(item);
                return [obs, makeView(type, obs)];
            })();
            view[0].value = item;
            this_.appendChild(view[1]);
            viewAttached_1.triggerAttachmentEvent(view[1]);
            const sublist = (_c = existingViews[type]) !== null && _c !== void 0 ? _c : [];
            sublist.push(view);
            existingViews[type] = sublist;
        }
        for (const parts of unusedViews) {
            for (const part of parts) {
                viewAttached_1.triggerAttachmentEvent(part[1]);
            }
        }
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
}
exports.androidxRecyclerviewWidgetRecyclerViewBindMulti = androidxRecyclerviewWidgetRecyclerViewBindMulti;
//! Declares com.lightningkite.khrysalis.observables.binding.bindRefresh>androidx.recyclerview.widget.RecyclerView
function androidxRecyclerviewWidgetRecyclerViewBindRefresh(this_, loading, refresh) {
    const actualRefreshView = this_.parentElement;
    let actualRefreshButton = null;
    for (let i = 0; i < actualRefreshView.children.length; i++) {
        const view = actualRefreshView.children.item(i);
        if (view.classList.contains("khrysalis-refresh-button")) {
            actualRefreshButton = view;
        }
    }
    if (actualRefreshButton) {
        actualRefreshButton.onclick = (x) => {
            refresh();
        };
        DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(loading, undefined, undefined, (x) => {
            if (x) {
                actualRefreshButton.classList.add("khrysalis-refresh-button-loading");
            }
            else {
                actualRefreshButton.classList.remove("khrysalis-refresh-button-loading");
            }
        }), DisposeCondition_actual_1.getAndroidViewViewRemoved(actualRefreshButton));
    }
}
exports.androidxRecyclerviewWidgetRecyclerViewBindRefresh = androidxRecyclerviewWidgetRecyclerViewBindRefresh;
//# sourceMappingURL=RecyclerView.binding.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/binding/SeekBar.binding.actual.js":
/*!******************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/binding/SeekBar.binding.actual.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: observables/binding/SeekBar.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! ../ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! ../../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
//! Declares com.lightningkite.khrysalis.observables.binding.bind>android.widget.SeekBar
function androidWidgetSeekBarBind(this_, start, endInclusive, observable) {
    this_.min = start.toString();
    this_.max = endInclusive.toString();
    let suppress = false;
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(observable, undefined, undefined, (value) => {
        if (!suppress) {
            suppress = true;
            this_.valueAsNumber = (value);
            suppress = false;
        }
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
    this_.onchange = (e) => {
        if (!suppress) {
            suppress = true;
            observable.value = start;
            suppress = false;
        }
    };
}
exports.androidWidgetSeekBarBind = androidWidgetSeekBarBind;
//# sourceMappingURL=SeekBar.binding.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/binding/Spinner.binding.actual.js":
/*!******************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/binding/Spinner.binding.actual.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: observables/binding/Spinner.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! ../ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! ../../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
const StandardObservableProperty_shared_1 = __webpack_require__(/*! ../StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const viewAttached_1 = __webpack_require__(/*! ../../views/viewAttached */ "../../khrysalis/web/dist/views/viewAttached.js");
//! Declares com.lightningkite.khrysalis.observables.binding.bind>android.widget.Spinner
function spinnerBindAdvanced(this_, options, selected, makeView) {
    const observables = options.value.map((x) => {
        return new StandardObservableProperty_shared_1.StandardObservableProperty(x);
    });
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(options, undefined, undefined, (options) => {
        //correct number of options
        const diff = options.length - this_.options.length;
        if (diff > 0) {
            for (let i = 0; i < diff; i++) {
                const newOpt = document.createElement("option");
                newOpt.value = (options.length - 1 - diff + i).toString();
                const newObs = new StandardObservableProperty_shared_1.StandardObservableProperty(options[options.length - 1 - diff + i]);
                makeView(newObs);
                this_.options.add(newOpt);
                observables.push(newObs);
                viewAttached_1.triggerAttachmentEvent(newOpt);
            }
        }
        else if (diff < 0) {
            for (let i = 0; i < -diff; i++) {
                const opt = this_.options.item(this_.options.length - 1);
                viewAttached_1.triggerAttachmentEvent(opt);
                this_.options.remove(this_.options.length - 1);
                observables.pop();
            }
        }
        for (let i = 0; i < options.length; i++) {
            observables[i].value = options[i];
        }
        this_.selectedIndex = options.indexOf(selected.value);
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(selected, undefined, undefined, (sel) => {
        this_.selectedIndex = options.value.indexOf(sel);
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
}
exports.spinnerBindAdvanced = spinnerBindAdvanced;
//! Declares com.lightningkite.khrysalis.observables.binding.bind>android.widget.Spinner
function spinnerBind(this_, options, selected, toString) {
    const observables = options.value.map((x) => {
        return new StandardObservableProperty_shared_1.StandardObservableProperty(x);
    });
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(options, undefined, undefined, (options) => {
        //correct number of options
        const diff = options.length - this_.options.length;
        if (diff > 0) {
            for (let i = 0; i < diff; i++) {
                const newOpt = document.createElement("option");
                newOpt.value = (options.length - 1 - diff + i).toString();
                const newObs = new StandardObservableProperty_shared_1.StandardObservableProperty(options[options.length - 1 - diff + i]);
                DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(newObs, undefined, undefined, (x) => {
                    newOpt.innerText = toString(x);
                }), DisposeCondition_actual_1.getAndroidViewViewRemoved(newOpt));
                this_.options.add(newOpt);
                observables.push(newObs);
                viewAttached_1.triggerAttachmentEvent(newOpt);
            }
        }
        else if (diff < 0) {
            for (let i = 0; i < -diff; i++) {
                const opt = this_.options.item(this_.options.length - 1);
                viewAttached_1.triggerAttachmentEvent(opt);
                this_.options.remove(this_.options.length - 1);
                observables.pop();
            }
        }
        for (let i = 0; i < options.length; i++) {
            observables[i].value = options[i];
        }
        this_.selectedIndex = options.indexOf(selected.value);
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(selected, undefined, undefined, (sel) => {
        this_.selectedIndex = options.value.indexOf(sel);
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
}
exports.spinnerBind = spinnerBind;
//# sourceMappingURL=Spinner.binding.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/binding/SwapView.binding.actual.js":
/*!*******************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/binding/SwapView.binding.actual.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const DisposeCondition_actual_1 = __webpack_require__(/*! ../../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
const SwapView_1 = __webpack_require__(/*! ../../views/SwapView */ "../../khrysalis/web/dist/views/SwapView.js");
//! Declares com.lightningkite.khrysalis.observables.binding.bindStack>com.lightningkite.khrysalis.views.android.SwapView
function comLightningkiteKhrysalisViewsAndroidSwapViewBindStack(this_, dependency, obs) {
    let previousStackSize = obs.value.length;
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(obs.onChange.subscribe({
        next(stack) {
            var _a;
            const newStackSize = stack.length;
            let animation = "khrysalis-animate-fade";
            if (newStackSize > previousStackSize) {
                animation = "khrysalis-animate-push";
            }
            else if (newStackSize < previousStackSize) {
                animation = "khrysalis-animate-pop";
            }
            const newVG = (_a = stack[stack.length - 1]) !== null && _a !== void 0 ? _a : null;
            const newView = newVG === null || newVG === void 0 ? void 0 : newVG.generate(window);
            SwapView_1.swapViewSwap(this_, newView, animation);
        }
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
}
exports.comLightningkiteKhrysalisViewsAndroidSwapViewBindStack = comLightningkiteKhrysalisViewsAndroidSwapViewBindStack;
//# sourceMappingURL=SwapView.binding.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/binding/TabLayout.binding.actual.js":
/*!********************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/binding/TabLayout.binding.actual.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: observables/binding/TabLayout.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! ../ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! ../../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
//! Declares com.lightningkite.khrysalis.observables.binding.bind>com.google.android.material.tabs.TabLayout
function comGoogleAndroidMaterialTabsTabLayoutBind(this_, tabs, selected, allowReselect = false) {
    var _a;
    const myName = (_a = this.id) !== null && _a !== void 0 ? _a : "tabLayout";
    const selectedIndicator = document.createElement("div");
    selectedIndicator.classList.add("khrysalis-tab-indicator");
    this_.appendChild(selectedIndicator);
    const tabList = document.createElement("div");
    tabList.classList.add("khrysalis-tab-list");
    this_.appendChild(tabList);
    let index = 0;
    for (const tab of tabs) {
        const myIndex = index;
        const tabElement = document.createElement("label");
        tabElement.innerText = tab;
        tabElement.classList.add("khrysalis-tab");
        tabElement.htmlFor = myName + myIndex.toString();
        tabList.appendChild(tabElement);
        const radio = document.createElement("input");
        radio.type = "radio";
        radio.id = myName + myIndex.toString();
        radio.name = myName;
        radio.onchange = (ev) => {
            if (allowReselect || selected.value !== myIndex) {
                selected.value = myIndex;
            }
        };
        tabList.appendChild(radio);
        index++;
    }
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(selected, undefined, undefined, (index) => {
        tabList.children.item(index * 2 + 1).checked = true;
        const tab = tabList.children.item(index * 2);
        selectedIndicator.style.left = tab.offsetLeft.toString() + "px";
        selectedIndicator.style.width = tab.offsetWidth.toString() + "px";
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
}
exports.comGoogleAndroidMaterialTabsTabLayoutBind = comGoogleAndroidMaterialTabsTabLayoutBind;
//# sourceMappingURL=TabLayout.binding.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/binding/TextView.binding.actual.js":
/*!*******************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/binding/TextView.binding.actual.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: observables/binding/TextView.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! ../ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! ../../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
const View_ext_actual_1 = __webpack_require__(/*! ../../views/View.ext.actual */ "../../khrysalis/web/dist/views/View.ext.actual.js");
//! Declares com.lightningkite.khrysalis.observables.binding.bindString>android.widget.TextView
function androidWidgetTextViewBindString(this_, observable) {
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(observable, undefined, undefined, (value) => {
        this_.innerText = value;
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
}
exports.androidWidgetTextViewBindString = androidWidgetTextViewBindString;
//! Declares com.lightningkite.khrysalis.observables.binding.bindStringRes>android.widget.TextView
function androidWidgetTextViewBindStringRes(this_, observable) {
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(observable, undefined, undefined, (value) => {
        View_ext_actual_1.setViewVisibility(this_, value === null ? "gone" : "visible");
        if (value !== null) {
            this_.innerText = value;
        }
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
}
exports.androidWidgetTextViewBindStringRes = androidWidgetTextViewBindStringRes;
//! Declares com.lightningkite.khrysalis.observables.binding.bindText>android.widget.TextView
function androidWidgetTextViewBindText(this_, observable, transform) {
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(observable, undefined, undefined, (value) => {
        this_.innerText = transform(value);
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
}
exports.androidWidgetTextViewBindText = androidWidgetTextViewBindText;
//# sourceMappingURL=TextView.binding.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/binding/View.binding.actual.js":
/*!***************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/binding/View.binding.actual.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: observables/binding/View.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
// FQImport: com.lightningkite.khrysalis.observables.binding.bindVisible.<anonymous>.value TS value
// FQImport: com.lightningkite.khrysalis.rx.removed>android.view.View TS getAndroidViewViewRemoved
// FQImport: com.lightningkite.khrysalis.observables.binding.bindExists.observable TS observable
// FQImport: com.lightningkite.khrysalis.observables.binding.bindExists.<anonymous>.value TS value
// FQImport: com.lightningkite.khrysalis.rx.until>io.reactivex.disposables.Disposable TS ioReactivexDisposablesDisposableUntil
// FQImport: com.lightningkite.khrysalis.observables.subscribeBy>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any> TS comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty TS ObservableProperty
// FQImport: com.lightningkite.khrysalis.observables.binding.bindVisible.observable TS observable
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! ../ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! ../../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
const View_ext_actual_1 = __webpack_require__(/*! ../../views/View.ext.actual */ "../../khrysalis/web/dist/views/View.ext.actual.js");
//! Declares com.lightningkite.khrysalis.observables.binding.bindVisible>android.view.View
function androidViewViewBindVisible(this_, observable) {
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(observable, undefined, undefined, (value) => {
        View_ext_actual_1.setViewVisibility(this_, value ? "visible" : "invisible");
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
}
exports.androidViewViewBindVisible = androidViewViewBindVisible;
//! Declares com.lightningkite.khrysalis.observables.binding.bindExists>android.view.View
function androidViewViewBindExists(this_, observable) {
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(observable, undefined, undefined, (value) => {
        View_ext_actual_1.setViewVisibility(this_, value ? "visible" : "gone");
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
}
exports.androidViewViewBindExists = androidViewViewBindExists;
//# sourceMappingURL=View.binding.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/binding/ViewFlipper.binding.actual.js":
/*!**********************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/binding/ViewFlipper.binding.actual.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: observables/binding/ViewFlipper.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! ../ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! ../../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
//! Declares com.lightningkite.khrysalis.observables.binding.bindLoading>android.widget.ViewFlipper
function androidWidgetViewFlipperBindLoading(this_, loading, color = null) {
    var _a;
    const mainChild = this_.firstElementChild;
    const loadingChild = (_a = this_.children.item(1)) !== null && _a !== void 0 ? _a : (() => {
        const newElement = document.createElement("progress");
        newElement.classList.add("khrysalis-flipper-progress");
        this_.appendChild(newElement);
        return newElement;
    })();
    const animation = "khrysalis-animate-fade";
    let currentView = mainChild;
    let hiddenView = loadingChild;
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(loading, undefined, undefined, (e) => {
        //animate out
        const animationOut = `${animation}-out`;
        let animOutHandler;
        animOutHandler = (ev) => {
            if (ev.animationName === animationOut) {
                ev.target.removeEventListener("animationEnd", animOutHandler);
                ev.target.style.display = "hidden";
            }
        };
        currentView.addEventListener("animationend", animOutHandler);
        currentView.style.animation = `${animationOut} 0.25s`;
        //animate in
        const animationIn = `${animation}-in`;
        let animInHandler;
        animInHandler = (ev) => {
            if (ev.animationName === animationIn) {
                ev.target.removeEventListener("animationEnd", animInHandler);
                ev.target.style.display = "hidden";
            }
        };
        hiddenView.addEventListener("animationend", animInHandler);
        hiddenView.style.animation = `${animationIn} 0.25s`;
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
}
exports.androidWidgetViewFlipperBindLoading = androidWidgetViewFlipperBindLoading;
//# sourceMappingURL=ViewFlipper.binding.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/observables/binding/ViewPager.binding.actual.js":
/*!********************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/observables/binding/ViewPager.binding.actual.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: observables/binding/ViewPager.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! ../ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! ../../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
const StandardObservableProperty_shared_1 = __webpack_require__(/*! ../StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const View_ext_actual_1 = __webpack_require__(/*! ../../views/View.ext.actual */ "../../khrysalis/web/dist/views/View.ext.actual.js");
const SwapView_1 = __webpack_require__(/*! ../../views/SwapView */ "../../khrysalis/web/dist/views/SwapView.js");
const CombineObservableProperty_shared_1 = __webpack_require__(/*! ../CombineObservableProperty.shared */ "../../khrysalis/web/dist/observables/CombineObservableProperty.shared.js");
/*
We need:
- A main view that swaps
- A left button
- A right button
Such should be generated by the XML.
 */
//! Declares com.lightningkite.khrysalis.observables.binding.bind>androidx.viewpager.widget.ViewPager
function androidxViewpagerWidgetViewPagerBindStatic(this_, items, showIndex = new StandardObservableProperty_shared_1.StandardObservableProperty(0, undefined), makeView) {
    const content = View_ext_actual_1.findView(this_, (e) => e.classList.contains("khrysalis-pager-content"));
    const left = View_ext_actual_1.findView(this_, (e) => e.classList.contains("khrysalis-pager-left"));
    const right = View_ext_actual_1.findView(this_, (e) => e.classList.contains("khrysalis-pager-right"));
    if (!content || !left || !right)
        return;
    let pastIndex = showIndex.value;
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(showIndex, undefined, undefined, (it) => {
        if (it < 0 || it >= items.length)
            return;
        const newView = makeView(items[it]);
        let animation = "khrysalis-animate-fade";
        if (it > pastIndex) {
            animation = "khrysalis-animate-push";
        }
        else if (it < pastIndex) {
            animation = "khrysalis-animate-pop";
        }
        SwapView_1.swapViewSwap(content, newView, animation);
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
    left.onclick = (ev) => {
        ev.preventDefault();
        if (showIndex.value > 0) {
            showIndex.value--;
        }
    };
    right.onclick = (ev) => {
        ev.preventDefault();
        if (showIndex.value < items.length - 1) {
            showIndex.value++;
        }
    };
}
exports.androidxViewpagerWidgetViewPagerBindStatic = androidxViewpagerWidgetViewPagerBindStatic;
//! Declares com.lightningkite.khrysalis.observables.binding.bind>androidx.viewpager.widget.ViewPager
function androidxViewpagerWidgetViewPagerBind(this_, items, _default, showIndex = new StandardObservableProperty_shared_1.StandardObservableProperty(0, undefined), makeView) {
    const content = View_ext_actual_1.findView(this_, (e) => e.classList.contains("khrysalis-pager-content"));
    const left = View_ext_actual_1.findView(this_, (e) => e.classList.contains("khrysalis-pager-left"));
    const right = View_ext_actual_1.findView(this_, (e) => e.classList.contains("khrysalis-pager-right"));
    if (!content || !left || !right)
        return;
    let pastIndex = showIndex.value;
    const combined = CombineObservableProperty_shared_1.comLightningkiteKhrysalisObservablesObservablePropertyCombine(items, showIndex, (a, b) => [a, b]);
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(combined, undefined, undefined, (pair) => {
        const items = pair[0];
        const it = pair[1];
        if (it < 0 || it >= items.length)
            return;
        const newView = makeView(items[it]);
        let animation = "khrysalis-animate-fade";
        if (it > pastIndex) {
            animation = "khrysalis-animate-push";
        }
        else if (it < pastIndex) {
            animation = "khrysalis-animate-pop";
        }
        SwapView_1.swapViewSwap(content, newView, animation);
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
    left.onclick = (ev) => {
        ev.preventDefault();
        if (showIndex.value > 0) {
            showIndex.value--;
        }
    };
    right.onclick = (ev) => {
        ev.preventDefault();
        if (showIndex.value < items.value.length - 1) {
            showIndex.value++;
        }
    };
}
exports.androidxViewpagerWidgetViewPagerBind = androidxViewpagerWidgetViewPagerBind;
//# sourceMappingURL=ViewPager.binding.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js":
/*!**************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/rx/DisposeCondition.actual.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: rx/DisposeCondition.actual.kt
// Package: com.lightningkite.khrysalis.rx
const DisposeCondition_shared_1 = __webpack_require__(/*! ./DisposeCondition.shared */ "../../khrysalis/web/dist/rx/DisposeCondition.shared.js");
const viewAttached_1 = __webpack_require__(/*! ../views/viewAttached */ "../../khrysalis/web/dist/views/viewAttached.js");
//! Declares com.lightningkite.khrysalis.rx.removed
function getAndroidViewViewRemoved(this_Removed) {
    return new DisposeCondition_shared_1.DisposeCondition((a) => {
        viewAttached_1.addAttachmentEvent(this_Removed, (_) => {
            a.unsubscribe();
        });
    });
}
exports.getAndroidViewViewRemoved = getAndroidViewViewRemoved;
//! Declares com.lightningkite.khrysalis.rx.DisposableLambda
class DisposableLambda {
    constructor(lambda) {
        this.closed = false;
        this.lambda = lambda;
    }
    unsubscribe() {
        if (this.closed) {
            return;
        }
        this.closed = true;
        this.lambda();
    }
}
exports.DisposableLambda = DisposableLambda;
//! Declares com.lightningkite.khrysalis.rx.forever
function ioReactivexDisposablesDisposableForever(this_Forever) {
    return this_Forever;
}
exports.ioReactivexDisposablesDisposableForever = ioReactivexDisposablesDisposableForever;
//! Declares com.lightningkite.khrysalis.rx.until
function ioReactivexDisposablesDisposableUntil(this_Until, condition) {
    condition.call(this_Until);
    return this_Until;
}
exports.ioReactivexDisposablesDisposableUntil = ioReactivexDisposablesDisposableUntil;
//# sourceMappingURL=DisposeCondition.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/rx/DisposeCondition.shared.js":
/*!**************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/rx/DisposeCondition.shared.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: rx/DisposeCondition.shared.kt
// Package: com.lightningkite.khrysalis.rx
// FQImport: com.lightningkite.khrysalis.rx.DisposeCondition TS DisposeCondition
// FQImport: com.lightningkite.khrysalis.rx.andAllDisposeConditions TS andAllDisposeConditions
// FQImport: com.lightningkite.khrysalis.rx.andAllDisposeConditions.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.rx.DisposableLambda TS DisposableLambda
// FQImport: com.lightningkite.khrysalis.rx.or.other TS other
// FQImport: com.lightningkite.khrysalis.rx.DisposeCondition.call TS call
// FQImport: com.lightningkite.khrysalis.rx.andAllDisposeConditions.<anonymous>.disposalsLeft TS disposalsLeft
// FQImport: com.lightningkite.khrysalis.rx.andAllDisposeConditions.list TS list
// FQImport: com.lightningkite.khrysalis.rx.or.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.rx.and.other TS other
// FQImport: com.lightningkite.khrysalis.rx.andAllDisposeConditions.<anonymous>.item TS item
const DisposeCondition_actual_1 = __webpack_require__(/*! ./DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
//! Declares com.lightningkite.khrysalis.rx.DisposeCondition
class DisposeCondition {
    constructor(call) {
        this.call = call;
    }
}
exports.DisposeCondition = DisposeCondition;
//! Declares com.lightningkite.khrysalis.rx.and>com.lightningkite.khrysalis.rx.DisposeCondition
function comLightningkiteKhrysalisRxDisposeConditionAnd(this_, other) { return andAllDisposeConditions([this_, other]); }
exports.comLightningkiteKhrysalisRxDisposeConditionAnd = comLightningkiteKhrysalisRxDisposeConditionAnd;
//! Declares com.lightningkite.khrysalis.rx.andAllDisposeConditions
function andAllDisposeConditions(list) {
    return new DisposeCondition((it) => {
        let disposalsLeft = list.length;
        for (const item of list) {
            item.call(new DisposeCondition_actual_1.DisposableLambda(() => {
                disposalsLeft = disposalsLeft - 1;
                if (disposalsLeft === 0)
                    it.unsubscribe();
            }));
        }
    });
}
exports.andAllDisposeConditions = andAllDisposeConditions;
//! Declares com.lightningkite.khrysalis.rx.or>com.lightningkite.khrysalis.rx.DisposeCondition
function comLightningkiteKhrysalisRxDisposeConditionOr(this_, other) {
    return new DisposeCondition((it) => {
        this_.call(it);
        ;
        other.call(it);
    });
}
exports.comLightningkiteKhrysalisRxDisposeConditionOr = comLightningkiteKhrysalisRxDisposeConditionOr;
//# sourceMappingURL=DisposeCondition.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/time/ClockPartSize.shared.js":
/*!*************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/time/ClockPartSize.shared.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: time/ClockPartSize.shared.kt
// Package: com.lightningkite.khrysalis.time
Object.defineProperty(exports, "__esModule", { value: true });
//! Declares com.lightningkite.khrysalis.time.ClockPartSize
class ClockPartSize {
    constructor(name) {
        this.name = name;
    }
    static values() { return ClockPartSize._values; }
    static valueOf(name) { return ClockPartSize[name]; }
    toString() { return this.name; }
}
exports.ClockPartSize = ClockPartSize;
ClockPartSize.None = new ClockPartSize("None");
ClockPartSize.Short = new ClockPartSize("Short");
ClockPartSize.Medium = new ClockPartSize("Medium");
ClockPartSize.Long = new ClockPartSize("Long");
ClockPartSize.Full = new ClockPartSize("Full");
ClockPartSize._values = [ClockPartSize.None, ClockPartSize.Short, ClockPartSize.Medium, ClockPartSize.Long, ClockPartSize.Full];
//# sourceMappingURL=ClockPartSize.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/time/Date.actual.js":
/*!****************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/time/Date.actual.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const TimeAlone_actual_1 = __webpack_require__(/*! ./TimeAlone.actual */ "../../khrysalis/web/dist/time/TimeAlone.actual.js");
const DateAlone_actual_1 = __webpack_require__(/*! ./DateAlone.actual */ "../../khrysalis/web/dist/time/DateAlone.actual.js");
const ClockPartSize_shared_1 = __webpack_require__(/*! ./ClockPartSize.shared */ "../../khrysalis/web/dist/time/ClockPartSize.shared.js");
//! Declares com.lightningkite.khrysalis.time.plus
function javaUtilDatePlus(this_, interval) {
    let newDate = new Date();
    newDate.setTime(this_.getTime() + interval.milliseconds);
    return newDate;
}
exports.javaUtilDatePlus = javaUtilDatePlus;
//! Declares com.lightningkite.khrysalis.time.minus
function javaUtilDateMinus(this_, interval) {
    let newDate = new Date();
    newDate.setTime(this_.getTime() - interval.milliseconds);
    return newDate;
}
exports.javaUtilDateMinus = javaUtilDateMinus;
function copyDateMod(on, action, ...params) {
    const to = new Date(on);
    action.call(to, ...params);
    return to;
}
exports.copyDateMod = copyDateMod;
function dateMod(on, action, ...params) {
    action.call(on, ...params);
    return on;
}
exports.dateMod = dateMod;
function copyDateModRelative(on, getter, action, num) {
    const to = new Date(on);
    action.call(to, getter.call(to) + num);
    return to;
}
exports.copyDateModRelative = copyDateModRelative;
function dateModRelative(on, getter, action, num) {
    action.call(on, getter.call(on) + num);
    return on;
}
exports.dateModRelative = dateModRelative;
let tempDate = new Date();
function copyDateAloneMod(on, action, ...params) {
    javaUtilDateSet(tempDate, on);
    action.call(tempDate, ...params);
    return getJavaUtilDateDateAlone(tempDate);
}
exports.copyDateAloneMod = copyDateAloneMod;
function dateAloneMod(on, action, ...params) {
    javaUtilDateSet(tempDate, on);
    action.call(tempDate, ...params);
    comLightningkiteKhrysalisTimeDateAloneSet(on, tempDate);
    return on;
}
exports.dateAloneMod = dateAloneMod;
function copyDateAloneModRelative(on, getter, action, num) {
    javaUtilDateSet(tempDate, on);
    action.call(tempDate, getter.call(tempDate) + num);
    return getJavaUtilDateDateAlone(tempDate);
}
exports.copyDateAloneModRelative = copyDateAloneModRelative;
function dateAloneModRelative(on, getter, action, num) {
    javaUtilDateSet(tempDate, on);
    action.call(tempDate, getter.call(on) + num);
    comLightningkiteKhrysalisTimeDateAloneSet(on, tempDate);
    return on;
}
exports.dateAloneModRelative = dateAloneModRelative;
//! Declares com.lightningkite.khrysalis.time.set
function javaUtilDateSet(this_, ...things) {
    for (const item of things) {
        if (item instanceof DateAlone_actual_1.DateAlone) {
            this_.setFullYear(item.year);
            this_.setMonth(item.month - 1);
            this_.setDate(item.day);
        }
        else if (item instanceof TimeAlone_actual_1.TimeAlone) {
            this_.setHours(item.hour);
            this_.setMinutes(item.minute);
            this_.setSeconds(item.second);
        }
        else if (item instanceof Date) {
            this_.setTime(item.getTime());
        }
    }
    return this_;
}
exports.javaUtilDateSet = javaUtilDateSet;
//! Declares com.lightningkite.khrysalis.time.set
function comLightningkiteKhrysalisTimeDateAloneSet(this_, date) {
    this_.year = date.getFullYear();
    this_.month = date.getMonth() + 1;
    this_.day = date.getDate();
    return this_;
}
exports.comLightningkiteKhrysalisTimeDateAloneSet = comLightningkiteKhrysalisTimeDateAloneSet;
//! Declares com.lightningkite.khrysalis.time.set
function comLightningkiteKhrysalisTimeTimeAloneSet(this_, date) {
    this_.hour = date.getHours();
    this_.minute = date.getMinutes();
    this_.second = date.getSeconds();
    return this_;
}
exports.comLightningkiteKhrysalisTimeTimeAloneSet = comLightningkiteKhrysalisTimeTimeAloneSet;
//! Declares com.lightningkite.khrysalis.time.dateAlone
function getJavaUtilDateDateAlone(this_) {
    return new DateAlone_actual_1.DateAlone(this_.getFullYear(), this_.getMonth() + 1, this_.getDate());
}
exports.getJavaUtilDateDateAlone = getJavaUtilDateDateAlone;
//! Declares com.lightningkite.khrysalis.time.timeAlone
function getJavaUtilDateTimeAlone(this_) {
    return new TimeAlone_actual_1.TimeAlone(this_.getHours(), this_.getMinutes(), this_.getSeconds());
}
exports.getJavaUtilDateTimeAlone = getJavaUtilDateTimeAlone;
//! Declares com.lightningkite.khrysalis.time.dateFrom
function dateFrom(dateAlone, timeAlone, existing = Date.constructor()) {
    return javaUtilDateSet(existing, dateAlone, timeAlone);
}
exports.dateFrom = dateFrom;
//! Declares com.lightningkite.khrysalis.time.dateFromIso
function dateFromIso(iso8601) {
    return new Date(iso8601);
}
exports.dateFromIso = dateFromIso;
//! Declares com.lightningkite.khrysalis.time.format>java.util.Date
function javaUtilDateFormat(this_, dateStyle, timeStyle) {
    let dateFormat = {};
    switch (dateStyle) {
        case ClockPartSize_shared_1.ClockPartSize.None:
            break;
        case ClockPartSize_shared_1.ClockPartSize.Short:
            dateFormat.year = "numeric";
            dateFormat.month = "numeric";
            dateFormat.day = "numeric";
            break;
        case ClockPartSize_shared_1.ClockPartSize.Medium:
            dateFormat.year = "numeric";
            dateFormat.month = "short";
            dateFormat.day = "numeric";
            break;
        case ClockPartSize_shared_1.ClockPartSize.Long:
            dateFormat.year = "numeric";
            dateFormat.month = "long";
            dateFormat.day = "numeric";
            break;
        case ClockPartSize_shared_1.ClockPartSize.Full:
            dateFormat.year = "numeric";
            dateFormat.month = "long";
            dateFormat.day = "numeric";
            dateFormat.weekday = "long";
            dateFormat.era = "short";
            break;
    }
    switch (timeStyle) {
        case ClockPartSize_shared_1.ClockPartSize.None:
            break;
        case ClockPartSize_shared_1.ClockPartSize.Short:
            dateFormat.hour = "numeric";
            dateFormat.minute = "numeric";
            break;
        case ClockPartSize_shared_1.ClockPartSize.Medium:
            dateFormat.hour = "numeric";
            dateFormat.minute = "numeric";
            dateFormat.second = "numeric";
            break;
        case ClockPartSize_shared_1.ClockPartSize.Long:
            dateFormat.hour = "numeric";
            dateFormat.minute = "numeric";
            dateFormat.second = "numeric";
            break;
        case ClockPartSize_shared_1.ClockPartSize.Full:
            dateFormat.hour = "numeric";
            dateFormat.minute = "numeric";
            dateFormat.second = "numeric";
            break;
    }
    return this_.toLocaleDateString(undefined, dateFormat);
}
exports.javaUtilDateFormat = javaUtilDateFormat;
//# sourceMappingURL=Date.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/time/DateAlone.actual.js":
/*!*********************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/time/DateAlone.actual.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var _a;
Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: time/DateAlone.actual.kt
// Package: com.lightningkite.khrysalis.time
const Date_actual_1 = __webpack_require__(/*! ./Date.actual */ "../../khrysalis/web/dist/time/Date.actual.js");
const ClockPartSize_shared_1 = __webpack_require__(/*! ./ClockPartSize.shared */ "../../khrysalis/web/dist/time/ClockPartSize.shared.js");
const Kotlin_1 = __webpack_require__(/*! ../Kotlin */ "../../khrysalis/web/dist/Kotlin.js");
const TimeAlone_actual_1 = __webpack_require__(/*! ./TimeAlone.actual */ "../../khrysalis/web/dist/time/TimeAlone.actual.js");
let usableDate = new Date();
//! Declares com.lightningkite.khrysalis.time.DateAlone
class DateAlone {
    constructor(year, month, day) {
        this.year = year;
        this.month = month;
        this.day = day;
    }
    hashCode() {
        let hash = 17;
        hash = 31 * hash + this.year;
        hash = 31 * hash + this.month;
        hash = 31 * hash + this.day;
        return hash;
    }
    equals(other) { return other instanceof DateAlone && this.year === other.year && this.month === other.month && this.day === other.day; }
    toString() { return `DateAlone(year = ${this.year}, month = ${this.month}, day = ${this.day})`; }
    copy(year = this.year, month = this.month, day = this.day) { return new DateAlone(year, month, day); }
    //! Declares com.lightningkite.khrysalis.time.DateAlone.monthInEra
    get monthInEra() { return this.year * 12 + this.month; }
    //! Declares com.lightningkite.khrysalis.time.DateAlone.comparable
    get comparable() { return this.year * 12 * 31 + this.month * 31 + this.day; }
    //! Declares com.lightningkite.khrysalis.time.DateAlone.dayOfWeek
    get dayOfWeek() {
        usableDate.setFullYear(this.year, this.month - 1, this.day);
        return usableDate.getDay() + 1;
    }
}
exports.DateAlone = DateAlone;
DateAlone.Companion = (_a = class Companion {
        constructor() {
            this.farPast = new DateAlone(-99999, 1, 1);
            this.farFuture = new DateAlone(99999, 12, 31);
            this.farPast = new DateAlone(-99999, 1, 1);
            this.farFuture = new DateAlone(99999, 12, 31);
        }
        now() { return Date_actual_1.getJavaUtilDateDateAlone(Date.constructor()); }
        iso(string) {
            const parts = string.split('-');
            const year = Kotlin_1.parseIntOrNull(parts[0]);
            if (year === null)
                return null;
            const month = Kotlin_1.parseIntOrNull(parts[1]);
            if (month === null)
                return null;
            let day = Kotlin_1.parseIntOrNull(parts[2]);
            if (day === null)
                day = 0;
            return new DateAlone(year, month, day);
        }
        fromMonthInEra(monthInEra) {
            return new DateAlone((monthInEra - 1) / 12, (monthInEra - 1) % 12 + 1, 1);
        }
    },
    _a.INSTANCE = new _a(),
    _a);
//! Declares com.lightningkite.khrysalis.time.setDayOfWeek
function comLightningkiteKhrysalisTimeDateAloneSetDayOfWeek(this_, value) {
    usableDate.setFullYear(this_.year, this_.month, this_.day);
    this_.year = usableDate.getFullYear();
    this_.month = usableDate.getMonth();
    this_.day = usableDate.getDate();
    return this;
}
exports.comLightningkiteKhrysalisTimeDateAloneSetDayOfWeek = comLightningkiteKhrysalisTimeDateAloneSetDayOfWeek;
//! Declares com.lightningkite.khrysalis.time.setAddDayOfWeek
function comLightningkiteKhrysalisTimeDateAloneSetAddDayOfWeek(this_, value) {
    usableDate.setFullYear(this_.year, this_.month, this_.day + value);
    this_.year = usableDate.getFullYear();
    this_.month = usableDate.getMonth();
    this_.day = usableDate.getDate();
    return this;
}
exports.comLightningkiteKhrysalisTimeDateAloneSetAddDayOfWeek = comLightningkiteKhrysalisTimeDateAloneSetAddDayOfWeek;
//! Declares com.lightningkite.khrysalis.time.dayOfWeek
function comLightningkiteKhrysalisTimeDateAloneDayOfWeek(this_, value) {
    return comLightningkiteKhrysalisTimeDateAloneSetDayOfWeek(this_.copy(), value);
}
exports.comLightningkiteKhrysalisTimeDateAloneDayOfWeek = comLightningkiteKhrysalisTimeDateAloneDayOfWeek;
//! Declares com.lightningkite.khrysalis.time.addDayOfWeek
function comLightningkiteKhrysalisTimeDateAloneAddDayOfWeek(this_, value) {
    return comLightningkiteKhrysalisTimeDateAloneSetAddDayOfWeek(this_.copy(), value);
}
exports.comLightningkiteKhrysalisTimeDateAloneAddDayOfWeek = comLightningkiteKhrysalisTimeDateAloneAddDayOfWeek;
//! Declares com.lightningkite.khrysalis.time.iso8601
function comLightningkiteKhrysalisTimeDateAloneIso8601(this_) {
    return `${this.year.toString().padStart(4, "0")}-${this.month.toString().padStart(2, "0")}-${this.day.toString().padStart(2, "0")}`;
}
exports.comLightningkiteKhrysalisTimeDateAloneIso8601 = comLightningkiteKhrysalisTimeDateAloneIso8601;
//! Declares com.lightningkite.khrysalis.time.formatYearless
function comLightningkiteKhrysalisTimeDateAloneFormatYearless(this_, clockPartSize) {
    let dateFormat = {};
    switch (clockPartSize) {
        case ClockPartSize_shared_1.ClockPartSize.None:
            break;
        case ClockPartSize_shared_1.ClockPartSize.Short:
            dateFormat.month = "numeric";
            dateFormat.day = "numeric";
            break;
        case ClockPartSize_shared_1.ClockPartSize.Medium:
            dateFormat.month = "short";
            dateFormat.day = "numeric";
            break;
        case ClockPartSize_shared_1.ClockPartSize.Long:
            dateFormat.month = "long";
            dateFormat.day = "numeric";
            break;
        case ClockPartSize_shared_1.ClockPartSize.Full:
            dateFormat.month = "long";
            dateFormat.day = "numeric";
            dateFormat.weekday = "long";
            dateFormat.era = "short";
            break;
    }
    return Date_actual_1.dateFrom(this_, TimeAlone_actual_1.TimeAlone.Companion.INSTANCE.noon, usableDate).toLocaleString(undefined, dateFormat);
}
exports.comLightningkiteKhrysalisTimeDateAloneFormatYearless = comLightningkiteKhrysalisTimeDateAloneFormatYearless;
//# sourceMappingURL=DateAlone.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/time/DateAlone.shared.js":
/*!*********************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/time/DateAlone.shared.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: time/DateAlone.shared.kt
// Package: com.lightningkite.khrysalis.time
// FQImport: com.lightningkite.khrysalis.time.ClockPartSize.None TS None
// FQImport: com.lightningkite.khrysalis.time.DateAlone TS DateAlone
// FQImport: com.lightningkite.khrysalis.time.DateAlone.month TS month
// FQImport: com.lightningkite.khrysalis.time.format>java.util.Date TS javaUtilDateFormat
// FQImport: com.lightningkite.khrysalis.time.TimeAlone TS TimeAlone
// FQImport: com.lightningkite.khrysalis.time.DateAlone.day TS day
// FQImport: com.lightningkite.khrysalis.time.ClockPartSize TS ClockPartSize
// FQImport: com.lightningkite.khrysalis.time.dateFrom TS dateFrom
// FQImport: com.lightningkite.khrysalis.time.DateAlone.year TS year
// FQImport: com.lightningkite.khrysalis.time.TimeAlone.Companion.noon TS noon
// FQImport: com.lightningkite.khrysalis.time.set.other TS other
// FQImport: com.lightningkite.khrysalis.time.format.clockPartSize TS clockPartSize
const TimeAlone_actual_1 = __webpack_require__(/*! ./TimeAlone.actual */ "../../khrysalis/web/dist/time/TimeAlone.actual.js");
const Date_actual_1 = __webpack_require__(/*! ./Date.actual */ "../../khrysalis/web/dist/time/Date.actual.js");
const ClockPartSize_shared_1 = __webpack_require__(/*! ./ClockPartSize.shared */ "../../khrysalis/web/dist/time/ClockPartSize.shared.js");
//! Declares com.lightningkite.khrysalis.time.set>com.lightningkite.khrysalis.time.DateAlone
function comLightningkiteKhrysalisTimeDateAloneSet(this_, other) {
    this_.year = other.year;
    this_.month = other.month;
    this_.day = other.day;
    return this_;
}
exports.comLightningkiteKhrysalisTimeDateAloneSet = comLightningkiteKhrysalisTimeDateAloneSet;
//! Declares com.lightningkite.khrysalis.time.format>com.lightningkite.khrysalis.time.DateAlone
function comLightningkiteKhrysalisTimeDateAloneFormat(this_, clockPartSize) { return Date_actual_1.javaUtilDateFormat(Date_actual_1.dateFrom(this_, TimeAlone_actual_1.TimeAlone.Companion.INSTANCE.noon, undefined), clockPartSize, ClockPartSize_shared_1.ClockPartSize.None); }
exports.comLightningkiteKhrysalisTimeDateAloneFormat = comLightningkiteKhrysalisTimeDateAloneFormat;
//# sourceMappingURL=DateAlone.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/time/TimeAlone.actual.js":
/*!*********************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/time/TimeAlone.actual.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var _a;
Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: time/TimeAlone.actual.kt
// Package: com.lightningkite.khrysalis.time
const TimeInterval_actual_1 = __webpack_require__(/*! ./TimeInterval.actual */ "../../khrysalis/web/dist/time/TimeInterval.actual.js");
const Date_actual_1 = __webpack_require__(/*! ./Date.actual */ "../../khrysalis/web/dist/time/Date.actual.js");
const Kotlin_1 = __webpack_require__(/*! ../Kotlin */ "../../khrysalis/web/dist/Kotlin.js");
//! Declares com.lightningkite.khrysalis.time.TimeAlone
class TimeAlone {
    constructor(hour, minute, second) {
        this.hour = hour;
        this.minute = minute;
        this.second = second;
    }
    hashCode() {
        let hash = 17;
        hash = 31 * hash + this.hour;
        hash = 31 * hash + this.minute;
        hash = 31 * hash + this.second;
        return hash;
    }
    equals(other) { return other instanceof TimeAlone && this.hour === other.hour && this.minute === other.minute && this.second === other.second; }
    toString() { return `TimeAlone(hour = ${this.hour}, minute = ${this.minute}, second = ${this.second})`; }
    copy(hour = this.hour, minute = this.minute, second = this.second) { return new TimeAlone(hour, minute, second); }
    //! Declares com.lightningkite.khrysalis.time.TimeAlone.comparable
    get comparable() { return this.hour * 60 * 60 + this.minute * 60 + this.second; }
    //! Declares com.lightningkite.khrysalis.time.TimeAlone.secondsInDay
    get secondsInDay() { return this.hour * 60 * 60 + this.minute * 60 + this.second; }
    set secondsInDay(value) {
        this.hour = value / 60 / 60;
        this.minute = value / 60 % 60;
        this.second = value % 60;
    }
    //! Declares com.lightningkite.khrysalis.time.TimeAlone.hoursInDay
    get hoursInDay() { return this.hour + this.minute / 60 + this.second / 3600 + 0.5 / 3600; }
    set hoursInDay(value) {
        this.hour = Math.floor(value);
        this.minute = Math.floor((value * 60)) % 60;
        this.second = Math.floor((value * 3600)) % 60;
    }
}
exports.TimeAlone = TimeAlone;
TimeAlone.Companion = (_a = class Companion {
        constructor() {
            this.min = new TimeAlone(0, 0, 0);
            this.midnight = TimeAlone.Companion.INSTANCE.min;
            this.noon = new TimeAlone(12, 0, 0);
            this.max = new TimeAlone(23, 59, 59);
            this.min = new TimeAlone(0, 0, 0);
            this.midnight = TimeAlone.Companion.INSTANCE.min;
            this.noon = new TimeAlone(12, 0, 0);
            this.max = new TimeAlone(23, 59, 59);
        }
        now() { return Date_actual_1.getJavaUtilDateTimeAlone(Date.constructor()); }
        iso(string) {
            const parts = string.split(':');
            const hour = Kotlin_1.parseIntOrNull(parts[0]);
            if (hour === null)
                return null;
            const minute = Kotlin_1.parseIntOrNull(parts[1]);
            if (minute === null)
                return null;
            let second = Kotlin_1.parseIntOrNull(parts[2]);
            if (second === null)
                second = 0;
            return new TimeAlone(hour, minute, second);
        }
    },
    _a.INSTANCE = new _a(),
    _a);
//! Declares com.lightningkite.khrysalis.time.iso8601
function comLightningkiteKhrysalisTimeTimeAloneIso8601(this_) {
    return `${this.hour.toString().padStart(2, "0")}:${this.minute.toString().padStart(2, "0")}:${this.second.toString().padStart(2, "0")}`;
}
exports.comLightningkiteKhrysalisTimeTimeAloneIso8601 = comLightningkiteKhrysalisTimeTimeAloneIso8601;
//! Declares com.lightningkite.khrysalis.time.minus
function comLightningkiteKhrysalisTimeTimeAloneMinus(this_, rhs) {
    let offset = 0;
    if (rhs instanceof TimeAlone) {
        offset = (rhs.hour * 60 * 60 + rhs.minute * 60 + rhs.second);
    }
    else if (rhs instanceof TimeInterval_actual_1.TimeInterval) {
        offset = rhs.milliseconds / 1000;
    }
    const result = (this_.hour * 60 * 60 + this_.minute * 60 + this_.second) - offset;
    return (() => {
        if (result < 0) {
            return new TimeAlone(0, 0, 0);
        }
        else {
            return new TimeAlone(Math.floor(result / 60 / 60), Math.floor(result / 60 % 60), Math.floor(result % 60));
        }
    })();
}
exports.comLightningkiteKhrysalisTimeTimeAloneMinus = comLightningkiteKhrysalisTimeTimeAloneMinus;
//! Declares com.lightningkite.khrysalis.time.plus
function comLightningkiteKhrysalisTimeTimeAlonePlus(this_, rhs) {
    let offset = 0;
    if (rhs instanceof TimeAlone) {
        offset = (rhs.hour * 60 * 60 + rhs.minute * 60 + rhs.second);
    }
    else if (rhs instanceof TimeInterval_actual_1.TimeInterval) {
        offset = rhs.milliseconds / 1000;
    }
    const result = (this_.hour * 60 * 60 + this_.minute * 60 + this_.second) + offset;
    return new TimeAlone(Math.floor(result / 60 / 60), Math.floor(result / 60 % 60), Math.floor(result % 60));
}
exports.comLightningkiteKhrysalisTimeTimeAlonePlus = comLightningkiteKhrysalisTimeTimeAlonePlus;
//# sourceMappingURL=TimeAlone.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/time/TimeInterval.actual.js":
/*!************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/time/TimeInterval.actual.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Generated by Khrysalis TypeScript converter
// File: time/TimeInterval.actual.kt
// Package: com.lightningkite.khrysalis.time
Object.defineProperty(exports, "__esModule", { value: true });
//! Declares com.lightningkite.khrysalis.time.TimeInterval
class TimeInterval {
    constructor(milliseconds) {
        this.milliseconds = milliseconds;
    }
    //! Declares com.lightningkite.khrysalis.time.TimeInterval.seconds
    get seconds() { return this.milliseconds / 1000.0; }
}
exports.TimeInterval = TimeInterval;
//! Declares com.lightningkite.khrysalis.time.milliseconds
function kotlinIntMilliseconds(this_) { return new TimeInterval(this_); }
exports.kotlinIntMilliseconds = kotlinIntMilliseconds;
//! Declares com.lightningkite.khrysalis.time.seconds
function kotlinIntSeconds(this_) { return new TimeInterval(this_ * 1000); }
exports.kotlinIntSeconds = kotlinIntSeconds;
//! Declares com.lightningkite.khrysalis.time.minutes
function kotlinIntMinutes(this_) { return new TimeInterval(this_ * 60 * 1000); }
exports.kotlinIntMinutes = kotlinIntMinutes;
//! Declares com.lightningkite.khrysalis.time.hours
function kotlinIntHours(this_) { return new TimeInterval(this_ * 60 * 60 * 1000); }
exports.kotlinIntHours = kotlinIntHours;
//! Declares com.lightningkite.khrysalis.time.days
function kotlinIntDays(this_) { return new TimeInterval(this_ * 24 * 60 * 60 * 1000); }
exports.kotlinIntDays = kotlinIntDays;
//# sourceMappingURL=TimeInterval.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/time/TimeNames.actual.js":
/*!*********************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/time/TimeNames.actual.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Generated by Khrysalis TypeScript converter
// File: time/TimeNames.actual.kt
// Package: com.lightningkite.khrysalis.time
Object.defineProperty(exports, "__esModule", { value: true });
//! Declares com.lightningkite.khrysalis.time.TimeNames
class TimeNames {
    constructor() {
        this.shortMonthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Nov", "Dec"];
        this.monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "November", "December"];
        this.shortWeekdayNames = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
        this.weekdayNames = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
    }
    shortMonthName(oneIndexedPosition) { return this.shortMonthNames[oneIndexedPosition - 1]; }
    monthName(oneIndexedPosition) { return this.monthNames[oneIndexedPosition - 1]; }
    shortWeekdayName(oneIndexedPosition) { return this.shortWeekdayNames[oneIndexedPosition - 1]; }
    weekdayName(oneIndexedPosition) { return this.weekdayNames[oneIndexedPosition - 1]; }
}
exports.TimeNames = TimeNames;
TimeNames.INSTANCE = new TimeNames();
//# sourceMappingURL=TimeNames.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/Colors.actual.js":
/*!*******************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/Colors.actual.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Generated by Khrysalis TypeScript converter
// File: views/Colors.actual.kt
// Package: com.lightningkite.khrysalis.views
Object.defineProperty(exports, "__esModule", { value: true });
function numberToColor(this_) {
    const alpha = this_ & 0xFF000000 >>> 24;
    const withoutAlpha = this_ & 0x00FFFFFF;
    return `#${withoutAlpha.toString(16).padStart(6, "0")}${alpha.toString(16).padStart(2, "0")}`;
}
exports.numberToColor = numberToColor;
function applyAlphaToColor(this_, desiredAlpha) {
    const withoutAlpha = this_.slice(0, 6);
    return `#${withoutAlpha}${desiredAlpha.toString(16).padStart(2, "0")}`;
}
exports.applyAlphaToColor = applyAlphaToColor;
//# sourceMappingURL=Colors.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/CustomView.actual.js":
/*!***********************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/CustomView.actual.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Generated by Khrysalis TypeScript converter
// File: views/CustomView.actual.kt
// Package: com.lightningkite.khrysalis.views
Object.defineProperty(exports, "__esModule", { value: true });
const DisplayMetrics_actual_1 = __webpack_require__(/*! ./DisplayMetrics.actual */ "../../khrysalis/web/dist/views/DisplayMetrics.actual.js");
const customViewDelegateSymbol = Symbol("customViewDelegateSymbol");
function customViewSetDelegate(view, delegate) {
    delegate.customView = view;
    view.ontouchstart = (e) => {
        const b = view.getBoundingClientRect();
        const on = e.changedTouches;
        for (let i = 0; i < on.length; i++) {
            const t = on.item(i);
            delegate.onTouchDown(t.identifier, t.pageX - b.x, t.pageY - b.y, view.width, view.height);
        }
    };
    view.ontouchmove = (e) => {
        const b = view.getBoundingClientRect();
        const on = e.changedTouches;
        for (let i = 0; i < on.length; i++) {
            const t = on.item(i);
            delegate.onTouchMove(t.identifier, t.pageX - b.x, t.pageY - b.y, view.width, view.height);
        }
    };
    view.ontouchcancel = (e) => {
        const b = view.getBoundingClientRect();
        const on = e.changedTouches;
        for (let i = 0; i < on.length; i++) {
            const t = on.item(i);
            delegate.onTouchCancelled(t.identifier, t.pageX - b.x, t.pageY - b.y, view.width, view.height);
        }
    };
    view.ontouchend = (e) => {
        const b = view.getBoundingClientRect();
        const on = e.changedTouches;
        for (let i = 0; i < on.length; i++) {
            const t = on.item(i);
            delegate.onTouchUp(t.identifier, t.pageX - b.x, t.pageY - b.y, view.width, view.height);
        }
    };
    //TODO: Measure?
    delegate.draw(view.getContext("2d"), view.width, view.height, DisplayMetrics_actual_1.DisplayMetrics.INSTANCE);
    view[customViewDelegateSymbol] = delegate;
}
exports.customViewSetDelegate = customViewSetDelegate;
function customViewInvalidate(view) {
    var _a;
    (_a = view[customViewDelegateSymbol]) === null || _a === void 0 ? void 0 : _a.draw(view.getContext("2d"), view.width, view.height, DisplayMetrics_actual_1.DisplayMetrics.INSTANCE);
}
exports.customViewInvalidate = customViewInvalidate;
//# sourceMappingURL=CustomView.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/CustomViewDelegate.shared.js":
/*!*******************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/CustomViewDelegate.shared.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const DisposeCondition_shared_1 = __webpack_require__(/*! ../rx/DisposeCondition.shared */ "../../khrysalis/web/dist/rx/DisposeCondition.shared.js");
const CustomView_actual_1 = __webpack_require__(/*! ./CustomView.actual */ "../../khrysalis/web/dist/views/CustomView.actual.js");
//! Declares com.lightningkite.khrysalis.views.CustomViewDelegate
class CustomViewDelegate {
    constructor() {
        this.customView = null;
        this.toDispose = [];
        this.removed = new DisposeCondition_shared_1.DisposeCondition((it) => {
            this.toDispose.push(it);
        });
    }
    onTouchDown(id, x, y, width, height) { return false; }
    onTouchMove(id, x, y, width, height) { return false; }
    onTouchCancelled(id, x, y, width, height) { return false; }
    onTouchUp(id, x, y, width, height) { return false; }
    sizeThatFitsWidth(width, height) { return width; }
    sizeThatFitsHeight(width, height) { return height; }
    invalidate() {
        const temp133 = this.customView;
        if (temp133 !== null)
            CustomView_actual_1.customViewInvalidate(temp133);
    }
    postInvalidate() {
        const temp134 = this.customView;
        if (temp134 !== null)
            CustomView_actual_1.customViewInvalidate(temp134);
    }
    dispose() {
        for (const item of this.toDispose) {
            item.unsubscribe();
        }
    }
}
exports.CustomViewDelegate = CustomViewDelegate;
//# sourceMappingURL=CustomViewDelegate.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/DisplayMetrics.actual.js":
/*!***************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/DisplayMetrics.actual.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
//! Declares android.util.DisplayMetrics
class DisplayMetrics {
    /**
     * The absolute width of the available display size in pixels.
     */
    get widthPixels() {
        return window.innerWidth;
    }
    /**
     * The absolute height of the available display size in pixels.
     */
    get heightPixels() {
        return window.innerHeight;
    }
    /**
     * The logical density of the display.  This is a scaling factor for the
     * Density Independent Pixel unit, where one DIP is one pixel on an
     * approximately 160 dpi screen (for example a 240x320, 1.5"x2" screen),
     * providing the baseline of the system's display. Thus on a 160dpi screen
     * this density value will be 1; on a 120 dpi screen it would be .75; etc.
     *
     * <p>This value does not exactly follow the real screen size (as given by
     * {@link #xdpi} and {@link #ydpi}, but rather is used to scale the size of
     * the overall UI in steps based on gross changes in the display dpi.  For
     * example, a 240x320 screen will have a density of 1 even if its width is
     * 1.8", 1.3", etc. However, if the screen resolution is increased to
     * 320x480 but the screen size remained 1.5"x2" then the density would be
     * increased (probably to 1.5).
     *
     */
    get density() {
        return 0.6;
    }
    /**
     * A scaling factor for fonts displayed on the display.  This is the same
     * as {@link #density}, except that it may be adjusted in smaller
     * increments at runtime based on a user preference for the font size.
     */
    get scaledDensity() {
        return 1;
    }
    /**
     * The exact physical pixels per inch of the screen in the X dimension.
     */
    get xdpi() {
        return 96;
    }
    /**
     * The exact physical pixels per inch of the screen in the Y dimension.
     */
    get ydpi() {
        return 96;
    }
}
exports.DisplayMetrics = DisplayMetrics;
DisplayMetrics.INSTANCE = new DisplayMetrics();
//# sourceMappingURL=DisplayMetrics.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/EmptyView.actual.js":
/*!**********************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/EmptyView.actual.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: views/EmptyView.actual.kt
// Package: com.lightningkite.khrysalis.views
Object.defineProperty(exports, "__esModule", { value: true });
//! Declares com.lightningkite.khrysalis.views.newEmptyView
function newEmptyView(dependency) { return document.createElement('div'); }
exports.newEmptyView = newEmptyView;
//# sourceMappingURL=EmptyView.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/EntryPoint.shared.js":
/*!***********************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/EntryPoint.shared.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var EntryPointDefaults;
(function (EntryPointDefaults) {
    function handleDeepLink(this_, schema, host, path, params) {
        console.log(`Empty handler; ${schema}://${host}/${path}/${params}`);
    }
    EntryPointDefaults.handleDeepLink = handleDeepLink;
    function onBackPressed(this_) { return false; }
    EntryPointDefaults.onBackPressed = onBackPressed;
    function getMainStack(this_) { return null; }
    EntryPointDefaults.getMainStack = getMainStack;
})(EntryPointDefaults = exports.EntryPointDefaults || (exports.EntryPointDefaults = {}));
//# sourceMappingURL=EntryPoint.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/Form.shared.js":
/*!*****************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/Form.shared.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: views/Form.shared.kt
// Package: com.lightningkite.khrysalis.views
// FQImport: com.lightningkite.khrysalis.views.UntypedFormField.validation TS validation
// FQImport: com.lightningkite.khrysalis.views.Form.fields TS fields
// FQImport: com.lightningkite.khrysalis.views.Form.field.field TS field
// FQImport: com.lightningkite.khrysalis.views.notNull.T TS T
// FQImport: com.lightningkite.khrysalis.views.Form.Companion.xMustMatchY TS xMustMatchY
// FQImport: com.lightningkite.khrysalis.views.Form.fieldFromProperty.field TS field
// FQImport: com.lightningkite.khrysalis.views.Form.field TS field
// FQImport: com.lightningkite.khrysalis.views.Form.Companion.xIsRequired TS xIsRequired
// FQImport: com.lightningkite.khrysalis.views.ViewStringRaw TS ViewStringRaw
// FQImport: com.lightningkite.khrysalis.views.matches.T TS T
// FQImport: com.lightningkite.khrysalis.views.Form.runOrDialog.action TS action
// FQImport: com.lightningkite.khrysalis.views.FormValidationError TS FormValidationError
// FQImport: com.lightningkite.khrysalis.views.FormField.observable TS observable
// FQImport: com.lightningkite.khrysalis.views.Form.check TS check
// FQImport: com.lightningkite.khrysalis.views.Form.checkField TS checkField
// FQImport: com.lightningkite.khrysalis.views.Form.checkField.result TS result
// FQImport: com.lightningkite.khrysalis.views.Form.field.<anonymous>.untypedField TS untypedField
// FQImport: com.lightningkite.khrysalis.views.Form.fieldFromProperty.name TS name
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty TS StandardObservableProperty
// FQImport: com.lightningkite.khrysalis.views.Form.runOrDialog.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty TS MutableObservableProperty
// FQImport: com.lightningkite.khrysalis.views.Form TS Form
// FQImport: com.lightningkite.khrysalis.views.Form.fieldFromProperty.<anonymous>.untypedField TS untypedField
// FQImport: com.lightningkite.khrysalis.views.FormField.T TS T
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty.value TS value
// FQImport: com.lightningkite.khrysalis.views.Form.field.obs TS obs
// FQImport: com.lightningkite.khrysalis.views.Form.checkField.field TS field
// FQImport: com.lightningkite.khrysalis.views.UntypedFormField TS UntypedFormField
// FQImport: com.lightningkite.khrysalis.views.ViewStringResource TS ViewStringResource
// FQImport: com.lightningkite.khrysalis.views.Form.check.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.views.FormValidationError.string TS string
// FQImport: com.lightningkite.khrysalis.views.FormField TS FormField
// FQImport: com.lightningkite.khrysalis.views.FormField.<set-value>.value TS value
// FQImport: com.lightningkite.khrysalis.views.Form.field.defaultValue TS defaultValue
// FQImport: com.lightningkite.khrysalis.views.Form.fieldFromProperty.T TS T
// FQImport: com.lightningkite.khrysalis.views.Form.field.name TS name
// FQImport: com.lightningkite.khrysalis.views.Form.runOrDialog.errors TS errors
// FQImport: com.lightningkite.khrysalis.views.UntypedFormField.error TS error
// FQImport: com.lightningkite.khrysalis.views.Form.field.T TS T
// FQImport: com.lightningkite.khrysalis.views.showDialog TS showDialogAlert
// FQImport: com.lightningkite.khrysalis.views.Form.fieldFromProperty.validation TS validation
// FQImport: com.lightningkite.khrysalis.views.ViewStringTemplate TS ViewStringTemplate
// FQImport: kotlin.text.isBlank>kotlin.CharSequence TS kotlinCharSequenceIsBlank
// FQImport: com.lightningkite.khrysalis.views.Form.check.<anonymous>.result TS result
// FQImport: com.lightningkite.khrysalis.views.ViewString TS ViewString
// FQImport: com.lightningkite.khrysalis.views.Form.fieldFromProperty.property TS property
// FQImport: com.lightningkite.khrysalis.views.FormField.name TS name
// FQImport: com.lightningkite.khrysalis.views.matches.other TS other
// FQImport: com.lightningkite.khrysalis.views.Form.fieldFromProperty TS fieldFromProperty
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty.value TS value
// FQImport: com.lightningkite.khrysalis.views.unless.condition TS condition
// FQImport: com.lightningkite.khrysalis.views.Form.field.validation TS validation
// FQImport: com.lightningkite.khrysalis.views.joinToViewString>kotlin.collections.List<com.lightningkite.khrysalis.views.ViewString> TS kotlinCollectionsListJoinToViewString
const Strings_shared_1 = __webpack_require__(/*! ./Strings.shared */ "../../khrysalis/web/dist/views/Strings.shared.js");
const iterable_operator_1 = __webpack_require__(/*! iterable-operator */ "../../khrysalis/web/node_modules/iterable-operator/dist/es2018/index.umd.js");
const showDialog_shared_1 = __webpack_require__(/*! ./showDialog.shared */ "../../khrysalis/web/dist/views/showDialog.shared.js");
const kotlin_text_1 = __webpack_require__(/*! ../kotlin/kotlin.text */ "../../khrysalis/web/dist/kotlin/kotlin.text.js");
const StandardObservableProperty_shared_1 = __webpack_require__(/*! ../observables/StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const KotlinCollections_1 = __webpack_require__(/*! ../KotlinCollections */ "../../khrysalis/web/dist/KotlinCollections.js");
//! Declares com.lightningkite.khrysalis.views.FormValidationError
class FormValidationError {
    constructor(field, _string) {
        this.field = field;
        this._string = _string;
    }
}
exports.FormValidationError = FormValidationError;
//! Declares com.lightningkite.khrysalis.views.FormField
class FormField {
    constructor(name, observable, validation) {
        this.name = name;
        this.observable = observable;
        this.validation = validation;
        this.error = new StandardObservableProperty_shared_1.StandardObservableProperty(null, undefined);
    }
    //! Declares com.lightningkite.khrysalis.views.FormField.value
    get value() { return this.observable.value; }
    set value(value) {
        this.observable.value = value;
    }
    //! Declares com.lightningkite.khrysalis.views.FormField.untypedObservable
    get untypedObservable() { return this.observable; }
}
exports.FormField = FormField;
FormField.implementsInterfaceComLightningkiteKhrysalisViewsUntypedFormField = true;
//! Declares com.lightningkite.khrysalis.views.Form
class Form {
    constructor() {
        this.fields = [];
    }
    field(name, defaultValue, validation) {
        const obs = new StandardObservableProperty_shared_1.StandardObservableProperty(defaultValue, undefined);
        const field = new FormField(name, obs, (untypedField) => validation(untypedField));
        this.fields.push(field);
        return field;
    }
    fieldRes(name, defaultValue, validation) { return this.field(new Strings_shared_1.ViewStringResource(name), defaultValue, validation); }
    fieldFromProperty(name, property, validation) {
        const field = new FormField(name, property, (untypedField) => validation(untypedField));
        this.fields.push(field);
        return field;
    }
    fieldFromPropertyRes(name, property, validation) { return this.fieldFromProperty(new Strings_shared_1.ViewStringResource(name), property, validation); }
    check() {
        return iterable_operator_1.toArray(KotlinCollections_1.iterableFilterNotNull(iterable_operator_1.map(this.fields, (it) => {
            const result = this.checkField(it);
            return (() => {
                if (!(result.equals(null))) {
                    return new FormValidationError(it, result);
                }
                else {
                    return null;
                }
            })();
        })));
    }
    runOrDialog(action) {
        const errors = this.check();
        if (errors.length !== 0) {
            showDialog_shared_1.showDialogAlert(Strings_shared_1.kotlinCollectionsListJoinToViewString(errors.map((it) => it._string), undefined));
        }
        else {
            action();
        }
    }
    checkField(field) {
        const result = field.validation(field);
        field.error.value = result;
        return result;
    }
}
exports.Form = Form;
(function (Form) {
    //! Declares com.lightningkite.khrysalis.views.Form.Companion
    class Companion {
        constructor() {
            this.xIsRequired = new Strings_shared_1.ViewStringRaw(`%1\$s is required.`);
            this.xMustMatchY = new Strings_shared_1.ViewStringRaw(`%1\$s must match %2\$s.`);
        }
    }
    Companion.INSTANCE = new Companion();
    Form.Companion = Companion;
})(Form = exports.Form || (exports.Form = {}));
//! Declares com.lightningkite.khrysalis.views.required>com.lightningkite.khrysalis.views.FormField<kotlin.String>
function comLightningkiteKhrysalisViewsFormFieldRequired(this_) {
    if (kotlin_text_1.kotlinCharSequenceIsBlank(this_.observable.value)) {
        return new Strings_shared_1.ViewStringTemplate(Form.Companion.INSTANCE.xIsRequired, [this_.name]);
    }
    else {
        return null;
    }
}
exports.comLightningkiteKhrysalisViewsFormFieldRequired = comLightningkiteKhrysalisViewsFormFieldRequired;
//! Declares com.lightningkite.khrysalis.views.notNull>com.lightningkite.khrysalis.views.FormField<kotlin.Any>
function comLightningkiteKhrysalisViewsFormFieldNotNull(this_) {
    if (this_.observable.value.equals(null)) {
        return new Strings_shared_1.ViewStringTemplate(Form.Companion.INSTANCE.xIsRequired, [this_.name]);
    }
    else {
        return null;
    }
}
exports.comLightningkiteKhrysalisViewsFormFieldNotNull = comLightningkiteKhrysalisViewsFormFieldNotNull;
//! Declares com.lightningkite.khrysalis.views.notFalse>com.lightningkite.khrysalis.views.FormField<kotlin.Boolean>
function comLightningkiteKhrysalisViewsFormFieldNotFalse(this_) {
    if (!this_.observable.value) {
        return new Strings_shared_1.ViewStringTemplate(Form.Companion.INSTANCE.xIsRequired, [this_.name]);
    }
    else {
        return null;
    }
}
exports.comLightningkiteKhrysalisViewsFormFieldNotFalse = comLightningkiteKhrysalisViewsFormFieldNotFalse;
//! Declares com.lightningkite.khrysalis.views.unless>com.lightningkite.khrysalis.views.ViewString
function comLightningkiteKhrysalisViewsViewStringUnless(this_, condition) {
    if (condition) {
        return null;
    }
    else {
        return this_;
    }
}
exports.comLightningkiteKhrysalisViewsViewStringUnless = comLightningkiteKhrysalisViewsViewStringUnless;
//! Declares com.lightningkite.khrysalis.views.matches>com.lightningkite.khrysalis.views.FormField<kotlin.Any>
function comLightningkiteKhrysalisViewsFormFieldMatches(this_, other) {
    if (!(this_.observable.value.equals(other.observable.value))) {
        return new Strings_shared_1.ViewStringTemplate(Form.Companion.INSTANCE.xMustMatchY, [this_.name, other.name]);
    }
    else {
        return null;
    }
}
exports.comLightningkiteKhrysalisViewsFormFieldMatches = comLightningkiteKhrysalisViewsFormFieldMatches;
//object test {
//    val form = Form()
//
//    val username = Field(ViewStringRaw("Username"), "") { it.required() ?: it.isEmail() ?: it.matches(otherField) }
//    val password = Field(ViewStringRaw("Password"), "") { it.required() }
//    val verifyPassword = Field(ViewStringRaw("Verify Password"), "") { it.required() ?: it.matches(password) }
//}
//# sourceMappingURL=Form.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/ImageView.actual.js":
/*!**********************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/ImageView.actual.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: views/ImageView.actual.kt
// Package: com.lightningkite.khrysalis.views
const Image_shared_1 = __webpack_require__(/*! ../Image.shared */ "../../khrysalis/web/dist/Image.shared.js");
const delay_actual_1 = __webpack_require__(/*! ../delay.actual */ "../../khrysalis/web/dist/delay.actual.js");
//! Declares com.lightningkite.khrysalis.observables.binding.loadImage>android.widget.ImageView
//! Declares com.lightningkite.khrysalis.views.loadImage>android.widget.ImageView
let canvasElement = new HTMLCanvasElement();
function androidWidgetImageViewLoadImage(this_, image) {
    delay_actual_1.post(() => {
        if (image instanceof Image_shared_1.ImageRaw) {
            const url = URL.createObjectURL(new Blob([image.raw]));
            this_.src = url;
        }
        else if (image instanceof Image_shared_1.ImageReference) {
            const reader = new FileReader();
            reader.onload = (e) => {
                this_.src = e.target.result;
            };
            reader.readAsDataURL(image.uri);
        }
        else if (image instanceof Image_shared_1.ImageImageBitmap) {
            canvasElement.width = image.bitmap.width;
            canvasElement.height = image.bitmap.height;
            const ctx = canvasElement.getContext("2d");
            ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);
            ctx.drawImage(image.bitmap, 0, 0);
            canvasElement.toBlob((blob) => {
                const url = URL.createObjectURL(blob);
                this_.src = url;
            });
        }
        else if (image instanceof Image_shared_1.ImageRemoteUrl) {
            this_.src = image.url;
        }
    });
}
exports.androidWidgetImageViewLoadImage = androidWidgetImageViewLoadImage;
//# sourceMappingURL=ImageView.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/LinearLayout.actual.js":
/*!*************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/LinearLayout.actual.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: views/LinearLayout.actual.kt
// Package: com.lightningkite.khrysalis.views
const Align_shared_1 = __webpack_require__(/*! ./geometry/Align.shared */ "../../khrysalis/web/dist/views/geometry/Align.shared.js");
//! Declares com.lightningkite.khrysalis.views.params>android.widget.LinearLayout
function androidWidgetLinearLayoutParams(this_, sizeX = 0, sizeY = 0, marginStart = 0, marginEnd = 0, marginTop = 0, marginBottom = 0, gravity = Align_shared_1.AlignPair.Companion.INSTANCE.center, weight = 0) {
    return (v) => {
        if (sizeX != 0) {
            v.style.width = `${sizeX}px`;
        }
        if (sizeY != 0) {
            v.style.height = `${sizeY}px`;
        }
        if (marginStart != 0) {
            v.style.marginLeft = `${marginStart}px`;
        }
        if (marginEnd != 0) {
            v.style.marginRight = `${marginEnd}px`;
        }
        if (marginTop != 0) {
            v.style.marginTop = `${marginTop}px`;
        }
        if (marginBottom != 0) {
            v.style.marginBottom = `${marginBottom}px`;
        }
        let alignSelf = Align_shared_1.Align.center;
        switch (this_.style.flexDirection) {
            case "row":
                alignSelf = gravity.vertical;
                break;
            case "column":
                alignSelf = gravity.horizontal;
                break;
        }
        switch (alignSelf) {
            case Align_shared_1.Align.start:
                v.style.alignSelf = "flex-start";
                break;
            case Align_shared_1.Align.end:
                v.style.alignSelf = "flex-end";
                break;
            case Align_shared_1.Align.center:
                v.style.alignSelf = "center";
                break;
            case Align_shared_1.Align.fill:
                v.style.alignSelf = "stretch";
                break;
        }
        v.style.flexShrink = weight.toString();
        v.style.flexGrow = weight.toString();
        return v;
    };
}
exports.androidWidgetLinearLayoutParams = androidWidgetLinearLayoutParams;
//# sourceMappingURL=LinearLayout.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/MonthCVD.shared.js":
/*!*********************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/MonthCVD.shared.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: views/MonthCVD.shared.kt
// Package: com.lightningkite.khrysalis.views
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawMonth.day TS day
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.removed TS removed
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.measure.width TS width
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.labelPaint TS labelPaint
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dragStartY TS dragStartY
// FQImport: android.graphics.Paint.textSize TS textSize
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchDown.id TS id
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.lastOffsetTime TS lastOffsetTime
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.label TS label
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.label.inner TS inner
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchDown.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackgroundStart.outer TS outer
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.calcMonthB TS calcMonthB
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.label.paint TS paint
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackgroundEnd.paint TS paint
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayPaint TS dayPaint
// FQImport: com.lightningkite.khrysalis.rx.until>io.reactivex.disposables.Disposable TS ioReactivexDisposablesDisposableUntil
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackgroundMid.canvas TS canvas
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackgroundStart.canvas TS canvas
// FQImport: com.lightningkite.khrysalis.views.MonthCVD._currentOffset TS _currentOffset
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.draw.displayMetrics TS displayMetrics
// FQImport: com.lightningkite.khrysalis.time.DateAlone.day TS day
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayAtPixel.existing TS existing
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.lastOffset TS lastOffset
// FQImport: android.graphics.RectF.width TS width
// FQImport: android.graphics.RectF.inset TS inset
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.label.dayOfWeek TS dayOfWeek
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.postInvalidate TS postInvalidate
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.draw.canvas TS canvas
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawDay TS drawDay
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.measure TS measure
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty TS StandardObservableProperty
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayAt.row TS row
// FQImport: com.lightningkite.khrysalis.time.dateAlone>java.util.Date TS getJavaUtilDateDateAlone
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayCellWidth TS dayCellWidth
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawDay.canvas TS canvas
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchMove.height TS height
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayAtPixel.row TS row
// FQImport: android.graphics.Paint.isAntiAlias TS isAntiAlias
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchMove.y TS y
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.label.text TS text
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawDay.showingMonth TS showingMonth
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawDay.outer TS outer
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackgroundStart.paint TS paint
// FQImport: android.graphics.RectF.centerX TS centerX
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackgroundEnd.outer TS outer
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawDate TS drawDate
// FQImport: android.graphics.Paint.style TS style
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawMonth.width TS width
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayAt TS dayAt
// FQImport: android.graphics.RectF.right TS right
// FQImport: com.lightningkite.khrysalis.views.CustomViewDelegate TS CustomViewDelegate
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchUp.x TS x
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayCellHeight TS dayCellHeight
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.<init>.<anonymous>.timePassed TS timePassed
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayAtPixel.columnDrag TS columnDrag
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayAtPixel.columnRaw TS columnRaw
// FQImport: android.graphics.RectF TS RectF
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.currentOffset TS currentOffset
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.calcMonth TS calcMonth
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchUp.weighted TS weighted
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.measure.height TS height
// FQImport: android.graphics.RectF.height TS height
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayAtPixel TS dayAtPixel
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackgroundMid.paint TS paint
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackgroundEnd.inner TS inner
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawMonth.month TS month
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.<set-currentOffset>.value TS value
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.rectForReuse TS rectForReuse
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.internalPadding TS internalPadding
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchMove.width TS width
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTap TS onTap
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.draw.width TS width
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.customView TS customView
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchDown TS onTouchDownDate
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.draggingId TS draggingId
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchUp.id TS id
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchDown.y TS y
// FQImport: com.lightningkite.khrysalis.views.draw.drawTextCentered>android.graphics.Canvas TS androidGraphicsCanvasDrawTextCentered
// FQImport: android.graphics.Paint.Style.FILL TS FILL
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dragEnabled TS dragEnabled
// FQImport: android.util.DisplayMetrics.scaledDensity TS scaledDensity
// FQImport: android.util.DisplayMetrics.density TS density
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayCellMarginDp TS dayCellMarginDp
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawDay.day TS day
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackgroundMid.outer TS outer
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.<init>.<anonymous>.min TS min
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.currentMonthObs TS currentMonthObs
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawMonth TS drawMonth
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.DRAGGING_NONE TS DRAGGING_NONE
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.sizeThatFitsHeight.width TS width
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawMonth.displayMetrics TS displayMetrics
// FQImport: com.lightningkite.khrysalis.time.DateAlone.month TS month
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.internalPaddingDp TS internalPaddingDp
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackground.inner TS inner
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawMonth.col TS col
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchMove.id TS id
// FQImport: android.graphics.RectF.set TS set
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.<init>.<anonymous>.newOffset TS newOffset
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackgroundEnd.canvas TS canvas
// FQImport: android.graphics.Paint.color TS color
// FQImport: com.lightningkite.khrysalis.observables.subscribeBy>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any> TS comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.labelFontSp TS labelFontSp
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackgroundMid.inner TS inner
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayAtPixel.column TS column
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawLabel TS drawLabel
// FQImport: kotlin.Int.toString TS toString
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackground.paint TS paint
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.day.paint TS paint
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.day.canvas TS canvas
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.currentMonth TS currentMonth
// FQImport: android.graphics.RectF.centerY TS centerY
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchMove.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.time.DateAlone TS DateAlone
// FQImport: android.util.DisplayMetrics TS DisplayMetrics
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchMove TS onTouchMoveDate
// FQImport: com.lightningkite.khrysalis.rx.forever>io.reactivex.disposables.Disposable TS ioReactivexDisposablesDisposableForever
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchDown.day TS day
// FQImport: com.lightningkite.khrysalis.time.DateAlone.year TS year
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchDown.width TS width
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackgroundStart.inner TS inner
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dragStartX TS dragStartX
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayAtPixel.y TS y
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawMonth.xOffset TS xOffset
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.isTap TS isTap
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing TS CalendarDrawing
// FQImport: android.graphics.RectF.left TS left
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayLabelHeight TS dayLabelHeight
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawMonth.canvas TS canvas
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty TS MutableObservableProperty
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.label.canvas TS canvas
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawMonth.row TS row
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackground.canvas TS canvas
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty.value TS value
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayAt.existing TS existing
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchDown.x TS x
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayAt.column TS column
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayAt.month TS month
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchUp.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayCellMargin TS dayCellMargin
// FQImport: com.lightningkite.khrysalis.time.TimeNames TS TimeNames
// FQImport: com.lightningkite.khrysalis.floorDiv>kotlin.Int TS kotlinIntFloorDiv
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.draw.height TS height
// FQImport: android.graphics.RectF.top TS top
// FQImport: com.lightningkite.khrysalis.time.set>com.lightningkite.khrysalis.time.DateAlone TS comLightningkiteKhrysalisTimeDateAloneSet
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.day.originalColor TS originalColor
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawLabel.dayOfWeek TS dayOfWeek
// FQImport: android.graphics.Paint.Style TS Style
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawLabel.canvas TS canvas
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.measure.displayMetrics TS displayMetrics
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchDown.height TS height
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.day.date TS date
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayAtPixel.x TS x
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchUp TS onTouchUpDate
// FQImport: android.graphics.RectF.bottom TS bottom
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.rectForReuseB TS rectForReuseB
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.day.month TS month
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayAtPixel.columnRawBeforeDrag TS columnRawBeforeDrag
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty.update TS update
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayAtPixel.monthOffset TS monthOffset
// FQImport: com.lightningkite.khrysalis.floorMod>kotlin.Int TS kotlinIntFloorMod
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchUp.y TS y
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.dayFontSp TS dayFontSp
// FQImport: com.lightningkite.khrysalis.time.TimeNames.shortWeekdayName TS shortWeekdayName
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.day.myPaint TS myPaint
// FQImport: com.lightningkite.khrysalis.animationFrame TS getAnimationFrame
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.onTouchMove.x TS x
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.day.inner TS inner
// FQImport: android.graphics.Paint TS Paint
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.day TS day
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.drawLabel.inner TS inner
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.<set-currentMonth>.value TS value
const Date_actual_1 = __webpack_require__(/*! ../time/Date.actual */ "../../khrysalis/web/dist/time/Date.actual.js");
const delay_actual_1 = __webpack_require__(/*! ../delay.actual */ "../../khrysalis/web/dist/delay.actual.js");
const Math_shared_1 = __webpack_require__(/*! ../Math.shared */ "../../khrysalis/web/dist/Math.shared.js");
const TimeNames_actual_1 = __webpack_require__(/*! ../time/TimeNames.actual */ "../../khrysalis/web/dist/time/TimeNames.actual.js");
const Paint_actual_1 = __webpack_require__(/*! ./draw/Paint.actual */ "../../khrysalis/web/dist/views/draw/Paint.actual.js");
const DateAlone_shared_1 = __webpack_require__(/*! ../time/DateAlone.shared */ "../../khrysalis/web/dist/time/DateAlone.shared.js");
const Canvas_actual_1 = __webpack_require__(/*! ./draw/Canvas.actual */ "../../khrysalis/web/dist/views/draw/Canvas.actual.js");
const Date_actual_2 = __webpack_require__(/*! ../time/Date.actual */ "../../khrysalis/web/dist/time/Date.actual.js");
const Kotlin_1 = __webpack_require__(/*! ../Kotlin */ "../../khrysalis/web/dist/Kotlin.js");
const DateAlone_actual_1 = __webpack_require__(/*! ../time/DateAlone.actual */ "../../khrysalis/web/dist/time/DateAlone.actual.js");
const CustomViewDelegate_shared_1 = __webpack_require__(/*! ./CustomViewDelegate.shared */ "../../khrysalis/web/dist/views/CustomViewDelegate.shared.js");
const Colors_actual_1 = __webpack_require__(/*! ./Colors.actual */ "../../khrysalis/web/dist/views/Colors.actual.js");
const CustomView_actual_1 = __webpack_require__(/*! ./CustomView.actual */ "../../khrysalis/web/dist/views/CustomView.actual.js");
const StandardObservableProperty_shared_1 = __webpack_require__(/*! ../observables/StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! ../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
const RectF_actual_1 = __webpack_require__(/*! ./geometry/RectF.actual */ "../../khrysalis/web/dist/views/geometry/RectF.actual.js");
const Path_actual_1 = __webpack_require__(/*! ./draw/Path.actual */ "../../khrysalis/web/dist/views/draw/Path.actual.js");
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! ../observables/ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
//! Declares com.lightningkite.khrysalis.views.MonthCVD
class MonthCVD extends CustomViewDelegate_shared_1.CustomViewDelegate {
    constructor() {
        super();
        this.currentMonthObs = new StandardObservableProperty_shared_1.StandardObservableProperty(Date_actual_1.dateAloneMod(Date_actual_2.getJavaUtilDateDateAlone(Date.constructor()), Date.prototype.setDate, 1), undefined);
        this.dragEnabled = true;
        DisposeCondition_actual_1.ioReactivexDisposablesDisposableForever(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(this.currentMonthObs, undefined, undefined, (value) => {
            this === null || this === void 0 ? void 0 : this.postInvalidate();
        }));
        this.labelFontSp = 12;
        this.dayFontSp = 16;
        this.internalPaddingDp = 8;
        this.dayCellMarginDp = 8;
        this.internalPadding = 0;
        this.dayLabelHeight = 0;
        this.dayCellHeight = 0;
        this.dayCellWidth = 0;
        this.dayCellMargin = 0;
        this._currentOffset = 0;
        this.dragStartX = 0;
        this.lastOffset = 0;
        this.lastOffsetTime = 0;
        this.DRAGGING_NONE = -1;
        this.draggingId = this.DRAGGING_NONE;
        this.labelPaint = Paint_actual_1.Paint.constructor();
        this.dayPaint = Paint_actual_1.Paint.constructor();
        this.labelPaint.isAntiAlias = true;
        this.labelPaint.style = Paint_actual_1.Paint.Style.FILL;
        this.labelPaint.color = Colors_actual_1.numberToColor(0xFF808080);
        this.dayPaint.isAntiAlias = true;
        this.dayPaint.style = Paint_actual_1.Paint.Style.FILL;
        this.dayPaint.color = Colors_actual_1.numberToColor(0xFF202020);
        DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(delay_actual_1.getAnimationFrame().subscribe((timePassed) => {
            if (this.draggingId === this.DRAGGING_NONE && !(this.currentOffset === 0)) {
                let newOffset = this.currentOffset * Math.max(0, (1 - 8 * timePassed));
                const min = 0.001;
                if (newOffset > min) {
                    newOffset = newOffset - min;
                }
                else if (newOffset < -min) {
                    newOffset = newOffset + min;
                }
                else {
                    newOffset = 0;
                }
                this.currentOffset = newOffset;
            }
        }, undefined, undefined), this.removed);
        this.calcMonth = new DateAlone_actual_1.DateAlone(1, 1, 1);
        this.calcMonthB = new DateAlone_actual_1.DateAlone(0, 0, 0);
        this.drawDate = new DateAlone_actual_1.DateAlone(1, 1, 1);
        this.rectForReuse = RectF_actual_1.RectF.constructor();
        this.rectForReuseB = RectF_actual_1.RectF.constructor();
        this.isTap = false;
        this.dragStartY = 0;
    }
    generateAccessibilityView() { return null; }
    //! Declares com.lightningkite.khrysalis.views.MonthCVD.currentMonth
    get currentMonth() { return this.currentMonthObs.value; }
    set currentMonth(value) {
        this.currentMonthObs.value = value;
    }
    //! Declares com.lightningkite.khrysalis.views.MonthCVD.currentOffset
    get currentOffset() {
        return this._currentOffset;
    }
    set currentOffset(value) {
        this._currentOffset = value;
        const temp149 = this.customView;
        if (temp149 !== null)
            CustomView_actual_1.customViewInvalidate(temp149);
    }
    animateNextMonth() {
        Date_actual_1.dateAloneModRelative(this.currentMonthObs.value, Date.prototype.getMonth, Date.prototype.setMonth, 1);
        this.currentMonthObs.update();
        this.currentOffset = 1;
    }
    animatePreviousMonth() {
        Date_actual_1.dateAloneModRelative(this.currentMonthObs.value, Date.prototype.getMonth, Date.prototype.setMonth, -1);
        this.currentMonthObs.update();
        this.currentOffset = -1;
    }
    dayAtPixel(x, y, existing = null) {
        if (y < this.dayLabelHeight)
            return null;
        //        val columnRaw = (x / dayCellWidth - (dayCellWidth + currentOffset) * 7).toInt()
        const columnRawBeforeDrag = x / this.dayCellWidth;
        const columnDrag = this.currentOffset * 7;
        const columnRaw = Math.floor((columnDrag + columnRawBeforeDrag));
        const column = Math_shared_1.kotlinIntFloorMod(columnRaw, 7);
        const monthOffset = Math_shared_1.kotlinIntFloorDiv(columnRaw, 7);
        const row = Math.floor(((y - this.dayLabelHeight) / this.dayCellHeight));
        if (row < 0 || row > 5)
            return null;
        if (column < 0 || column > 6)
            return null;
        return this.dayAt(Date_actual_1.dateAloneModRelative(DateAlone_shared_1.comLightningkiteKhrysalisTimeDateAloneSet(this.calcMonth, this.currentMonth), Date.prototype.getMonth, Date.prototype.setMonth, monthOffset), row, column, existing !== null && existing !== void 0 ? existing : new DateAlone_actual_1.DateAlone(0, 0, 0));
    }
    dayAt(month, row, column, existing = new DateAlone_actual_1.DateAlone(0, 0, 0)) {
        return Date_actual_1.dateAloneModRelative(Date_actual_1.dateAloneMod(Date_actual_1.dateAloneMod(DateAlone_shared_1.comLightningkiteKhrysalisTimeDateAloneSet(existing, month), Date.prototype.setDate, 1), function (newDay) {
            this;
            const diff = newDay - this.getDay();
            this.setDate(this.getDate() + diff);
        }, 1), Date.prototype.getDate, Date.prototype.setDate, row * 7 + column);
    }
    measure(width, height, displayMetrics) {
        this.internalPadding = displayMetrics.density * this.internalPaddingDp;
        this.dayCellMargin = displayMetrics.density * this.dayCellMarginDp;
        this.labelPaint.textSize = this.labelFontSp * displayMetrics.scaledDensity;
        this.dayPaint.textSize = this.dayFontSp * displayMetrics.scaledDensity;
        this.dayLabelHeight = this.labelPaint.textSize * 1.5 + this.internalPadding * 2;
        this.dayCellWidth = width / 7;
        this.dayCellHeight = (height - this.dayLabelHeight) / 6;
    }
    draw(canvas, width, height, displayMetrics) {
        this.measure(width, height, displayMetrics);
        if (this.currentOffset > 0) {
            //draw past month and current month
            this.drawMonth(canvas, (this.currentOffset - 1) * width, width, Date_actual_1.dateAloneModRelative(DateAlone_shared_1.comLightningkiteKhrysalisTimeDateAloneSet(this.calcMonthB, this.currentMonth), Date.prototype.getMonth, Date.prototype.setMonth, -1), displayMetrics);
            this.drawMonth(canvas, this.currentOffset * width, width, this.currentMonth, displayMetrics);
        }
        else if (this.currentOffset < 0) {
            //draw future month and current month
            this.drawMonth(canvas, (this.currentOffset + 1) * width, width, Date_actual_1.dateAloneModRelative(DateAlone_shared_1.comLightningkiteKhrysalisTimeDateAloneSet(this.calcMonthB, this.currentMonth), Date.prototype.getMonth, Date.prototype.setMonth, 1), displayMetrics);
            this.drawMonth(canvas, this.currentOffset * width, width, this.currentMonth, displayMetrics);
        }
        else {
            //Nice, it's exactly zero.  We can just draw one.
            this.drawMonth(canvas, this.currentOffset * width, width, this.currentMonth, displayMetrics);
        }
    }
    drawMonth(canvas, xOffset, width, month, displayMetrics) {
        for (const day of new Kotlin_1.NumberRange(1, 7)) {
            const col = day - 1;
            this.rectForReuse.set(xOffset + col * this.dayCellWidth - 0.01, -0.01, xOffset + (col + 1) * this.dayCellWidth + 0.01, this.dayLabelHeight + 0.01);
            this.rectForReuseB.set(this.rectForReuse);
            this.rectForReuse.inset(this.internalPadding, this.internalPadding);
            this.drawLabel(canvas, day, displayMetrics, this.rectForReuse, this.rectForReuseB);
        }
        for (const row of new Kotlin_1.NumberRange(0, 5)) {
            for (const col of new Kotlin_1.NumberRange(0, 6)) {
                const day = this.dayAt(month, row, col, this.drawDate);
                this.rectForReuse.set(xOffset + col * this.dayCellWidth - 0.01, this.dayLabelHeight + row * this.dayCellHeight - 0.01, xOffset + (col + 1) * this.dayCellWidth + 0.01, this.dayLabelHeight + (row + 1) * this.dayCellHeight + 0.01);
                if (this.rectForReuse.left > width) {
                    continue;
                }
                if (this.rectForReuse.right < 0) {
                    continue;
                }
                this.rectForReuseB.set(this.rectForReuse);
                this.rectForReuse.inset(this.dayCellMargin, this.dayCellMargin);
                this.drawDay(canvas, month, day, displayMetrics, this.rectForReuseB, this.rectForReuse);
            }
        }
    }
    drawLabel(canvas, dayOfWeek, displayMetrics, outer, inner) {
        CalendarDrawing.INSTANCE.label(canvas, dayOfWeek, inner, this.labelPaint);
    }
    drawDay(canvas, showingMonth, day, displayMetrics, outer, inner) {
        CalendarDrawing.INSTANCE.day(canvas, showingMonth, day, outer, this.dayPaint);
    }
    onTap(day) { }
    onTouchDownDate(day) { return false; }
    onTouchDown(id, x, y, width, height) {
        const day = this.dayAtPixel(x, y, undefined);
        const temp204 = day;
        if (temp204 !== null)
            ((it) => (() => {
                if (this.onTouchDownDate(it)) {
                    return true;
                }
            })())(temp204);
        this.dragStartX = x / width;
        this.dragStartY = y / height;
        this.draggingId = id;
        this.lastOffsetTime = Date.now();
        this.isTap = true;
        return true;
    }
    onTouchMoveDate(day) { return false; }
    onTouchMove(id, x, y, width, height) {
        if (this.draggingId === id) {
            this.lastOffset = this.currentOffset;
            this.lastOffsetTime = Date.now();
            if (this.dragEnabled) {
                this.currentOffset = (x / width) - this.dragStartX;
                if (Math.abs((x / width - this.dragStartX)) > 0.05 || Math.abs((y / height - this.dragStartY)) > 0.05) {
                    this.isTap = false;
                }
            }
        }
        else {
            const temp213 = this.dayAtPixel(x, y, undefined);
            if (temp213 !== null)
                ((it) => {
                    return this.onTouchMoveDate(it);
                })(temp213);
        }
        return true;
    }
    onTouchUpDate(day) { return false; }
    onTouchUp(id, x, y, width, height) {
        if (this.draggingId === id) {
            if (this.isTap) {
                const temp215 = this.dayAtPixel(x, y, undefined);
                if (temp215 !== null)
                    ((it) => this.onTap(it))(temp215);
            }
            else if (this.dragEnabled) {
                const weighted = this.currentOffset + (this.currentOffset - this.lastOffset) * 200 / (Date.now() - this.lastOffsetTime);
                if (weighted > 0.5) {
                    //shift right one
                    Date_actual_1.dateAloneModRelative(this.currentMonthObs.value, Date.prototype.getMonth, Date.prototype.setMonth, -1);
                    this.currentMonthObs.update();
                    this.currentOffset = this.currentOffset - 1;
                }
                else if (weighted < -0.5) {
                    //shift left one
                    Date_actual_1.dateAloneModRelative(this.currentMonthObs.value, Date.prototype.getMonth, Date.prototype.setMonth, 1);
                    this.currentMonthObs.update();
                    this.currentOffset = this.currentOffset + 1;
                }
            }
            this.draggingId = this.DRAGGING_NONE;
        }
        else {
            const temp227 = this.dayAtPixel(x, y, undefined);
            if (temp227 !== null)
                ((it) => {
                    return this.onTouchUpDate(it);
                })(temp227);
        }
        return true;
    }
    sizeThatFitsWidth(width, height) {
        return this.dayLabelHeight * 28;
    }
    sizeThatFitsHeight(width, height) {
        return width * 6 / 7 + this.dayLabelHeight;
    }
}
exports.MonthCVD = MonthCVD;
//! Declares com.lightningkite.khrysalis.views.CalendarDrawing
class CalendarDrawing {
    constructor() {
    }
    day(canvas, month, date, inner, paint) {
        if (date.month === month.month && date.year === month.year) {
            Canvas_actual_1.androidGraphicsCanvasDrawTextCentered(canvas, date.day.toString(), inner.centerX(), inner.centerY(), paint);
        }
        else {
            const originalColor = paint.color;
            let myPaint = paint;
            myPaint.color = Colors_actual_1.applyAlphaToColor(paint.color, 64);
            Canvas_actual_1.androidGraphicsCanvasDrawTextCentered(canvas, date.day.toString(), inner.centerX(), inner.centerY(), myPaint);
            myPaint.color = originalColor;
        }
    }
    label(canvas, dayOfWeek, inner, paint) {
        const text = TimeNames_actual_1.TimeNames.INSTANCE.shortWeekdayName(dayOfWeek);
        Canvas_actual_1.androidGraphicsCanvasDrawTextCentered(canvas, text, inner.centerX(), inner.centerY(), paint);
    }
    dayBackground(canvas, inner, paint) {
        canvas.arc(inner.centerX(), inner.centerY(), Math.min(inner.width() / 2, inner.height() / 2), 0, Math.PI * 2);
        paint.complete(canvas);
    }
    dayBackgroundStart(canvas, inner, outer, paint) {
        canvas.arc(inner.centerX(), inner.centerY(), Math.min(inner.width() / 2, inner.height() / 2), 0, Math.PI * 2);
        paint.complete(canvas);
        canvas.clip(Path_actual_1.pathFromLTRB(outer.centerX(), inner.top, outer.right, inner.bottom));
        paint.complete(canvas);
    }
    dayBackgroundMid(canvas, inner, outer, paint) {
        canvas.clip(Path_actual_1.pathFromLTRB(outer.left, inner.top, outer.right, inner.bottom));
        paint.complete(canvas);
    }
    dayBackgroundEnd(canvas, inner, outer, paint) {
        canvas.arc(inner.centerX(), inner.centerY(), Math.min(inner.width() / 2, inner.height() / 2), 0, Math.PI * 2);
        paint.complete(canvas);
        canvas.clip(Path_actual_1.pathFromLTRB(outer.left, inner.top, outer.centerX(), inner.bottom));
        paint.complete(canvas);
    }
}
exports.CalendarDrawing = CalendarDrawing;
CalendarDrawing.INSTANCE = new CalendarDrawing();
//# sourceMappingURL=MonthCVD.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/SelectDateMonthCVD.shared.js":
/*!*******************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/SelectDateMonthCVD.shared.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const MonthCVD_shared_1 = __webpack_require__(/*! ./MonthCVD.shared */ "../../khrysalis/web/dist/views/MonthCVD.shared.js");
const Date_actual_1 = __webpack_require__(/*! ../time/Date.actual */ "../../khrysalis/web/dist/time/Date.actual.js");
const StandardObservableProperty_shared_1 = __webpack_require__(/*! ../observables/StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const Paint_actual_1 = __webpack_require__(/*! ./draw/Paint.actual */ "../../khrysalis/web/dist/views/draw/Paint.actual.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! ../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
//! Declares com.lightningkite.khrysalis.views.SelectDateMonthCVD
class SelectDateMonthCVD extends MonthCVD_shared_1.MonthCVD {
    constructor() {
        super();
        this.selected = new StandardObservableProperty_shared_1.StandardObservableProperty(null, undefined);
        const temp269 = this.selected.value;
        if (temp269 !== null)
            ((it) => this.currentMonthObs.value = Date_actual_1.copyDateAloneMod(it, Date.prototype.setDate, 1))(temp269);
        DisposeCondition_actual_1.ioReactivexDisposablesDisposableForever(this.selected.onChange.subscribe((value) => {
            this === null || this === void 0 ? void 0 : this.invalidate();
        }, undefined, undefined));
        this.selectedDayPaint = Paint_actual_1.Paint.constructor();
        this.selectedPaint = Paint_actual_1.Paint.constructor();
    }
    generateAccessibilityView() { return null; }
    drawDay(canvas, showingMonth, day, displayMetrics, outer, inner) {
        if (day.equals(this.selected.value)) {
            MonthCVD_shared_1.CalendarDrawing.INSTANCE.dayBackground(canvas, inner, this.selectedPaint);
            MonthCVD_shared_1.CalendarDrawing.INSTANCE.day(canvas, showingMonth, day, inner, this.selectedDayPaint);
        }
        else {
            MonthCVD_shared_1.CalendarDrawing.INSTANCE.day(canvas, showingMonth, day, inner, this.dayPaint);
        }
    }
    measure(width, height, displayMetrics) {
        super.measure(width, height, displayMetrics);
        this.selectedDayPaint.textSize = this.dayPaint.textSize;
    }
    onTap(day) {
        this.selected.value = day;
    }
}
exports.SelectDateMonthCVD = SelectDateMonthCVD;
//# sourceMappingURL=SelectDateMonthCVD.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/SelectDateRangeMonthCVD.shared.js":
/*!************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/SelectDateRangeMonthCVD.shared.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: views/SelectDateRangeMonthCVD.shared.kt
// Package: com.lightningkite.khrysalis.views
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.currentMonthObs TS currentMonthObs
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackgroundEnd TS dayBackgroundEnd
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty.value TS value
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.drawDay.day TS day
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackgroundStart TS dayBackgroundStart
// FQImport: android.graphics.Paint.textSize TS textSize
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.dayPaint TS dayPaint
// FQImport: com.lightningkite.khrysalis.observables.subscribeBy>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any> TS comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.start TS start
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.measure.width TS width
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.measure.displayMetrics TS displayMetrics
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.invalidate TS invalidate
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.draggingStart TS draggingStart
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.drawDay.outer TS outer
// FQImport: com.lightningkite.khrysalis.views.MonthCVD TS MonthCVD
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.selectedPaint TS selectedPaint
// FQImport: android.graphics.RectF TS RectF
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.measure.height TS height
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.drawDay.canvas TS canvas
// FQImport: com.lightningkite.khrysalis.time.DateAlone TS DateAlone
// FQImport: android.util.DisplayMetrics TS DisplayMetrics
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.<init>.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.onTouchDown.day TS day
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.onTouchDown.endInclusiveValue TS endInclusiveValue
// FQImport: com.lightningkite.khrysalis.rx.forever>io.reactivex.disposables.Disposable TS ioReactivexDisposablesDisposableForever
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.endInclusive TS endInclusive
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.onTouchMove.day TS day
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty.onChange TS onChange
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.selectedDayPaint TS selectedDayPaint
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.onTouchDown.startValue TS startValue
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.onTouchUp.day TS day
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.onTouchMove.obs TS obs
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackground TS dayBackground
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.onTouchMove.endInclusiveValue TS endInclusiveValue
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.onTouchMove TS onTouchMoveDate
// FQImport: com.lightningkite.khrysalis.views.MonthCVD.measure TS measure
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.onTap.day TS day
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing TS CalendarDrawing
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty TS StandardObservableProperty
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.dayBackgroundMid TS dayBackgroundMid
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.startedDraggingOn TS startedDraggingOn
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.onTouchMove.startValue TS startValue
// FQImport: android.graphics.Paint TS Paint
// FQImport: com.lightningkite.khrysalis.time.DateAlone.comparable TS comparable
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.drawDay.showingMonth TS showingMonth
// FQImport: com.lightningkite.khrysalis.views.CalendarDrawing.day TS day
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty TS MutableObservableProperty
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.drawDay.inner TS inner
const DateAlone_actual_1 = __webpack_require__(/*! ../time/DateAlone.actual */ "../../khrysalis/web/dist/time/DateAlone.actual.js");
const MonthCVD_shared_1 = __webpack_require__(/*! ./MonthCVD.shared */ "../../khrysalis/web/dist/views/MonthCVD.shared.js");
const Date_actual_1 = __webpack_require__(/*! ../time/Date.actual */ "../../khrysalis/web/dist/time/Date.actual.js");
const StandardObservableProperty_shared_1 = __webpack_require__(/*! ../observables/StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! ../observables/ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
const Paint_actual_1 = __webpack_require__(/*! ./draw/Paint.actual */ "../../khrysalis/web/dist/views/draw/Paint.actual.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! ../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
//! Declares com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD
class SelectDateRangeMonthCVD extends MonthCVD_shared_1.MonthCVD {
    constructor() {
        super();
        this.draggingStart = true;
        this.start = new StandardObservableProperty_shared_1.StandardObservableProperty(null, undefined);
        this.endInclusive = new StandardObservableProperty_shared_1.StandardObservableProperty(null, undefined);
        const temp273 = this.start.value;
        if (temp273 !== null)
            ((it) => this.currentMonthObs.value = Date_actual_1.copyDateAloneMod(it, Date.prototype.setDate, 1))(temp273);
        DisposeCondition_actual_1.ioReactivexDisposablesDisposableForever(this.start.onChange.subscribe((value) => {
            this === null || this === void 0 ? void 0 : this.invalidate();
        }, undefined, undefined));
        DisposeCondition_actual_1.ioReactivexDisposablesDisposableForever(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(this.endInclusive, undefined, undefined, (value) => {
            this === null || this === void 0 ? void 0 : this.invalidate();
        }));
        this.selectedDayPaint = Paint_actual_1.Paint.constructor();
        this.selectedPaint = Paint_actual_1.Paint.constructor();
        this.drawDay_dateAlone = new DateAlone_actual_1.DateAlone(0, 0, 0);
        this.startedDraggingOn = null;
    }
    generateAccessibilityView() { return null; }
    measure(width, height, displayMetrics) {
        super.measure(width, height, displayMetrics);
        this.selectedDayPaint.textSize = this.dayPaint.textSize;
    }
    drawDay(canvas, showingMonth, day, displayMetrics, outer, inner) {
        var _a, _b, _c, _d;
        if (day.equals(this.start.value) && (day.equals(this.endInclusive.value) || this.endInclusive.value.equals(null))) {
            MonthCVD_shared_1.CalendarDrawing.INSTANCE.dayBackground(canvas, inner, this.selectedPaint);
            MonthCVD_shared_1.CalendarDrawing.INSTANCE.day(canvas, showingMonth, day, inner, this.selectedDayPaint);
        }
        else if (day.equals(this.start.value)) {
            MonthCVD_shared_1.CalendarDrawing.INSTANCE.dayBackgroundStart(canvas, inner, outer, this.selectedPaint);
            MonthCVD_shared_1.CalendarDrawing.INSTANCE.day(canvas, showingMonth, day, inner, this.selectedDayPaint);
        }
        else if (day.equals(this.endInclusive.value)) {
            MonthCVD_shared_1.CalendarDrawing.INSTANCE.dayBackgroundEnd(canvas, inner, outer, this.selectedPaint);
            MonthCVD_shared_1.CalendarDrawing.INSTANCE.day(canvas, showingMonth, day, inner, this.selectedDayPaint);
        }
        else if (day.comparable > ((_b = (_a = this.start.value) === null || _a === void 0 ? void 0 : _a.comparable) !== null && _b !== void 0 ? _b : 2147483647) && day.comparable < ((_d = (_c = this.endInclusive.value) === null || _c === void 0 ? void 0 : _c.comparable) !== null && _d !== void 0 ? _d : -2147483648)) {
            MonthCVD_shared_1.CalendarDrawing.INSTANCE.dayBackgroundMid(canvas, inner, outer, this.selectedPaint);
            MonthCVD_shared_1.CalendarDrawing.INSTANCE.day(canvas, showingMonth, day, inner, this.selectedDayPaint);
        }
        else {
            MonthCVD_shared_1.CalendarDrawing.INSTANCE.day(canvas, showingMonth, day, inner, this.dayPaint);
        }
    }
    onTap(day) {
        if (!(this.start.value.equals(null)) && this.start.value.equals(this.endInclusive.value) && day.comparable > this.start.value.comparable) {
            this.endInclusive.value = day;
        }
        else {
            this.start.value = day;
            this.endInclusive.value = day;
        }
    }
    onTouchDownDate(day) {
        if (!(day.equals(this.start.value)) && !(day.equals(this.endInclusive.value))) {
            return false;
        }
        this.startedDraggingOn = day;
        //If on start/end - drag
        //If after, extend
        //If before, extend
        //If middle, collapse all
        const startValue = this.start.value;
        const endInclusiveValue = this.endInclusive.value;
        if (startValue.equals(null) || endInclusiveValue.equals(null)) {
            this.start.value = day;
            this.endInclusive.value = day;
            this.draggingStart = false;
        }
        else if (day.equals(endInclusiveValue)) {
            this.draggingStart = false;
        }
        else if (day.equals(startValue)) {
            this.draggingStart = true;
        }
        else if (day.comparable > endInclusiveValue.comparable && startValue.equals(endInclusiveValue)) {
            this.endInclusive.value = day;
            this.draggingStart = false;
        }
        else {
            this.start.value = day;
            this.endInclusive.value = day;
            this.draggingStart = false;
        }
        return true;
    }
    onTouchMoveDate(day) {
        const startValue = this.start.value;
        const endInclusiveValue = this.endInclusive.value;
        if (startValue.equals(null) || endInclusiveValue.equals(null)) {
        }
        else if (this.draggingStart && day.comparable > endInclusiveValue.comparable) {
            this.start.value = this.endInclusive.value;
            this.endInclusive.value = day;
            this.draggingStart = false;
            return true;
        }
        else if (!this.draggingStart && day.comparable < startValue.comparable) {
            this.endInclusive.value = this.start.value;
            this.start.value = day;
            this.draggingStart = true;
            return true;
        }
        const obs = this.draggingStart ? this.start : this.endInclusive;
        obs.value = day;
        return true;
    }
    onTouchUpDate(day) {
        this.onTouchMoveDate(day);
        return true;
    }
}
exports.SelectDateRangeMonthCVD = SelectDateRangeMonthCVD;
//# sourceMappingURL=SelectDateRangeMonthCVD.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/SelectMultipleDatesMonthCVD.shared.js":
/*!****************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/SelectMultipleDatesMonthCVD.shared.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const MonthCVD_shared_1 = __webpack_require__(/*! ./MonthCVD.shared */ "../../khrysalis/web/dist/views/MonthCVD.shared.js");
const iterable_operator_1 = __webpack_require__(/*! iterable-operator */ "../../khrysalis/web/node_modules/iterable-operator/dist/es2018/index.umd.js");
const Paint_actual_1 = __webpack_require__(/*! ./draw/Paint.actual */ "../../khrysalis/web/dist/views/draw/Paint.actual.js");
const DateAlone_shared_1 = __webpack_require__(/*! ../time/DateAlone.shared */ "../../khrysalis/web/dist/time/DateAlone.shared.js");
const DateAlone_actual_1 = __webpack_require__(/*! ../time/DateAlone.actual */ "../../khrysalis/web/dist/time/DateAlone.actual.js");
const Date_actual_1 = __webpack_require__(/*! ../time/Date.actual */ "../../khrysalis/web/dist/time/Date.actual.js");
const StandardObservableProperty_shared_1 = __webpack_require__(/*! ../observables/StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! ../rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
//! Declares com.lightningkite.khrysalis.views.SelectMultipleDatesMonthCVD
class SelectMultipleDatesMonthCVD extends MonthCVD_shared_1.MonthCVD {
    constructor() {
        var _a;
        super();
        this.dates = new StandardObservableProperty_shared_1.StandardObservableProperty(new Set([]), undefined);
        this.selectedDayPaint = Paint_actual_1.Paint.constructor();
        this.selectedPaint = Paint_actual_1.Paint.constructor();
        const temp289 = ((_a = iterable_operator_1.first(this.dates.value)) !== null && _a !== void 0 ? _a : null);
        if (temp289 !== null)
            ((it) => this.currentMonthObs.value = Date_actual_1.copyDateAloneMod(it, Date.prototype.setDate, 1))(temp289);
        DisposeCondition_actual_1.ioReactivexDisposablesDisposableForever(this.dates.onChange.subscribe((value) => {
            this === null || this === void 0 ? void 0 : this.invalidate();
        }, undefined, undefined));
        this.drawDay_dateAlone = new DateAlone_actual_1.DateAlone(0, 0, 0);
        this.adding = false;
    }
    generateAccessibilityView() { return null; }
    measure(width, height, displayMetrics) {
        super.measure(width, height, displayMetrics);
        this.selectedDayPaint.textSize = this.dayPaint.textSize;
    }
    drawDay(canvas, showingMonth, day, displayMetrics, outer, inner) {
        if (this.dates.value.has(day)) {
            const leftDate = Date_actual_1.dateAloneModRelative(DateAlone_shared_1.comLightningkiteKhrysalisTimeDateAloneSet(this.drawDay_dateAlone, day), Date.prototype.getDate, Date.prototype.setDate, -1);
            const left = this.dates.value.has(leftDate);
            const rightDate = Date_actual_1.dateAloneModRelative(DateAlone_shared_1.comLightningkiteKhrysalisTimeDateAloneSet(this.drawDay_dateAlone, day), Date.prototype.getDate, Date.prototype.setDate, 1);
            const right = this.dates.value.has(rightDate);
            if (!left && !right) {
                MonthCVD_shared_1.CalendarDrawing.INSTANCE.dayBackground(canvas, inner, this.selectedPaint);
            }
            else if (!left && right) {
                MonthCVD_shared_1.CalendarDrawing.INSTANCE.dayBackgroundStart(canvas, inner, outer, this.selectedPaint);
            }
            else if (left && !right) {
                MonthCVD_shared_1.CalendarDrawing.INSTANCE.dayBackgroundEnd(canvas, inner, outer, this.selectedPaint);
            }
            else if (left && right) {
                MonthCVD_shared_1.CalendarDrawing.INSTANCE.dayBackgroundMid(canvas, inner, outer, this.selectedPaint);
            }
            else {
                MonthCVD_shared_1.CalendarDrawing.INSTANCE.dayBackground(canvas, inner, this.selectedPaint);
            }
            MonthCVD_shared_1.CalendarDrawing.INSTANCE.day(canvas, showingMonth, day, inner, this.selectedDayPaint);
        }
        else {
            MonthCVD_shared_1.CalendarDrawing.INSTANCE.day(canvas, showingMonth, day, inner, this.dayPaint);
        }
    }
    onTap(day) {
        this.adding = (!iterable_operator_1.some(this.dates.value, (it) => day.equals(it)));
        this.onTouchMoveDate(day);
    }
    onTouchDownDate(day) {
        this.adding = (!iterable_operator_1.some(this.dates.value, (it) => day.equals(it)));
        this.onTouchMoveDate(day);
        return true;
    }
    onTouchMoveDate(day) {
        if (this.adding) {
            if ((!iterable_operator_1.some(this.dates.value, (it) => day.equals(it)))) {
                this.dates.value = new Set([...this.dates.value, day]);
            }
        }
        else {
            this.dates.value = iterable_operator_1.toSet(iterable_operator_1.toArray(iterable_operator_1.filter(this.dates.value, (it) => !(it.equals(day)))));
        }
        return true;
    }
    onTouchUpDate(day) {
        return true;
    }
}
exports.SelectMultipleDatesMonthCVD = SelectMultipleDatesMonthCVD;
//# sourceMappingURL=SelectMultipleDatesMonthCVD.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/Strings.shared.js":
/*!********************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/Strings.shared.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: views/Strings.shared.kt
// Package: com.lightningkite.khrysalis.views
// FQImport: com.lightningkite.khrysalis.views.ViewStringList.parts TS parts
// FQImport: com.lightningkite.khrysalis.views.ViewStringTemplate.get.dependency TS dependency
// FQImport: com.lightningkite.khrysalis.views.ViewStringComplex.get.dependency TS dependency
// FQImport: com.lightningkite.khrysalis.views.ViewString.get TS get
// FQImport: com.lightningkite.khrysalis.views.ViewStringResource TS ViewStringResource
// FQImport: kotlin.Int.toString TS toString
// FQImport: com.lightningkite.khrysalis.views.ViewStringList.get.dependency TS dependency
// FQImport: com.lightningkite.khrysalis.views.ViewStringTemplate.get.fixedArguments TS fixedArguments
// FQImport: com.lightningkite.khrysalis.views.ViewStringRaw TS ViewStringRaw
// FQImport: com.lightningkite.khrysalis.views.ViewStringList.separator TS separator
// FQImport: com.lightningkite.khrysalis.views.toDebugString>com.lightningkite.khrysalis.views.ViewString TS comLightningkiteKhrysalisViewsViewStringToDebugString
// FQImport: com.lightningkite.khrysalis.views.toDebugString.thing TS thing
// FQImport: com.lightningkite.khrysalis.views.ViewStringResource.resource TS resource
// FQImport: com.lightningkite.khrysalis.views.ViewStringTemplate.get.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.views.ViewStringComplex TS ViewStringComplex
// FQImport: com.lightningkite.khrysalis.views.joinToViewString.separator TS separator
// FQImport: com.lightningkite.khrysalis.views.ViewStringTemplate.arguments TS arguments
// FQImport: com.lightningkite.khrysalis.views.ViewStringList.get.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.views.ViewStringRaw.string TS string
// FQImport: com.lightningkite.khrysalis.views.ViewStringList TS ViewStringList
// FQImport: com.lightningkite.khrysalis.views.ViewStringTemplate.template TS template
// FQImport: com.lightningkite.khrysalis.views.ViewStringTemplate TS ViewStringTemplate
// FQImport: com.lightningkite.khrysalis.views.toDebugString.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.views.ViewString TS ViewString
// FQImport: com.lightningkite.khrysalis.views.ViewStringTemplate.get.templateResolved TS templateResolved
// FQImport: com.lightningkite.khrysalis.views.ViewStringComplex.getter TS getter
const sprintf_1 = __webpack_require__(/*! sprintf */ "../../khrysalis/web/node_modules/sprintf/lib/sprintf.js");
const Kotlin_1 = __webpack_require__(/*! ../Kotlin */ "../../khrysalis/web/dist/Kotlin.js");
//! Declares com.lightningkite.khrysalis.views.ViewStringRaw
class ViewStringRaw {
    constructor(_string) {
        this._string = _string;
    }
    get(dependency) { return this._string; }
}
exports.ViewStringRaw = ViewStringRaw;
ViewStringRaw.implementsInterfaceComLightningkiteKhrysalisViewsViewString = true;
//! Declares com.lightningkite.khrysalis.views.ViewStringResource
class ViewStringResource {
    constructor(resource) {
        this.resource = resource;
    }
    get(dependency) { return this.resource; }
}
exports.ViewStringResource = ViewStringResource;
ViewStringResource.implementsInterfaceComLightningkiteKhrysalisViewsViewString = true;
//! Declares com.lightningkite.khrysalis.views.ViewStringTemplate
class ViewStringTemplate {
    constructor(template, _arguments) {
        this.template = template;
        this._arguments = _arguments;
    }
    get(dependency) {
        const templateResolved = this.template.get(dependency);
        const fixedArguments = this._arguments.map((it) => { var _a, _b; return (_b = (_a = (Kotlin_1.tryCastInterface(it, "ComLightningkiteKhrysalisViewsViewString"))) === null || _a === void 0 ? void 0 : _a.get(dependency)) !== null && _b !== void 0 ? _b : it; });
        return sprintf_1.vsprintf(templateResolved, fixedArguments);
    }
}
exports.ViewStringTemplate = ViewStringTemplate;
ViewStringTemplate.implementsInterfaceComLightningkiteKhrysalisViewsViewString = true;
//! Declares com.lightningkite.khrysalis.views.ViewStringComplex
class ViewStringComplex {
    constructor(getter) {
        this.getter = getter;
    }
    get(dependency) { return this.getter(dependency); }
}
exports.ViewStringComplex = ViewStringComplex;
ViewStringComplex.implementsInterfaceComLightningkiteKhrysalisViewsViewString = true;
//! Declares com.lightningkite.khrysalis.views.ViewStringList
class ViewStringList {
    constructor(parts, separator = `\n`) {
        this.parts = parts;
        this.separator = separator;
    }
    get(dependency) {
        return this.parts.map((it) => it.get(dependency)).join(this.separator);
    }
}
exports.ViewStringList = ViewStringList;
ViewStringList.implementsInterfaceComLightningkiteKhrysalisViewsViewString = true;
//! Declares com.lightningkite.khrysalis.views.joinToViewString>kotlin.collections.List<com.lightningkite.khrysalis.views.ViewString>
function kotlinCollectionsListJoinToViewString(this_, separator = `\n`) {
    if (this_.length === 1) {
        return this_[0];
    }
    return new ViewStringList(this_, separator);
}
exports.kotlinCollectionsListJoinToViewString = kotlinCollectionsListJoinToViewString;
//! Declares com.lightningkite.khrysalis.views.toDebugString>com.lightningkite.khrysalis.views.ViewString
function comLightningkiteKhrysalisViewsViewStringToDebugString(this_) {
    const thing = this_;
    if (thing instanceof ViewStringRaw) {
        return thing._string;
    }
    else if (thing instanceof ViewStringResource) {
        return thing.resource.toString();
    }
    else if (thing instanceof ViewStringTemplate) {
        return comLightningkiteKhrysalisViewsViewStringToDebugString(thing.template) + "(" + thing._arguments.map((it) => (() => { if (Kotlin_1.checkIsInterface(it, "ComLightningkiteKhrysalisViewsViewString"))
            return comLightningkiteKhrysalisViewsViewStringToDebugString(it);
        else
            return `${it}`; })()).join(", ") + ")";
    }
    else if (thing instanceof ViewStringList) {
        return thing.parts.map((it) => comLightningkiteKhrysalisViewsViewStringToDebugString(it)).join(thing.separator);
    }
    else if (thing instanceof ViewStringComplex) {
        return `<Complex string ${thing}>`;
    }
    else {
        return "Unknown";
    }
}
exports.comLightningkiteKhrysalisViewsViewStringToDebugString = comLightningkiteKhrysalisViewsViewStringToDebugString;
//# sourceMappingURL=Strings.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/SwapView.js":
/*!**************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/SwapView.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const viewAttached_1 = __webpack_require__(/*! ./viewAttached */ "../../khrysalis/web/dist/views/viewAttached.js");
const previousViewSymbol = Symbol("previousView");
function swapViewSwap(view, to, animation) {
    view.style.visibility = "visible";
    const current = view[previousViewSymbol];
    if (current) {
        //animate out
        const animationOut = `${animation}-out`;
        let animOutHandler;
        animOutHandler = (ev) => {
            if (ev.animationName === animationOut) {
                current.removeEventListener("animationend", animOutHandler);
                view.removeChild(current);
                viewAttached_1.triggerAttachmentEvent(current);
            }
        };
        current.addEventListener("animationend", animOutHandler);
        current.style.animation = `${animationOut} 0.25s`;
        //animate in
        if (to) {
            to.style.animation = `${animation}-in 0.25s`;
            view.appendChild(to);
            viewAttached_1.triggerAttachmentEvent(to);
        }
        else {
            view.style.visibility = "hidden"; //TODO: Smooth fade would look nicer
        }
    }
    else if (to) {
        view.appendChild(to);
        viewAttached_1.triggerAttachmentEvent(to);
    }
    view[previousViewSymbol] = to;
}
exports.swapViewSwap = swapViewSwap;
//# sourceMappingURL=SwapView.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/View.ext.actual.js":
/*!*********************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/View.ext.actual.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Generated by Khrysalis TypeScript converter
// File: views/View.ext.actual.kt
// Package: com.lightningkite.khrysalis.views
Object.defineProperty(exports, "__esModule", { value: true });
//! Declares com.lightningkite.khrysalis.views.onClick>android.view.View
function androidViewViewOnClick(this_, disabledMilliseconds = 500, action) {
    let lastActivated = Date.now();
    this_.addEventListener("onclick", (_ev) => {
        _ev.stopPropagation();
        const it = _ev.target;
        if (Date.now() - lastActivated > disabledMilliseconds) {
            action();
            lastActivated = Date.now();
        }
    });
}
exports.androidViewViewOnClick = androidViewViewOnClick;
//! Declares com.lightningkite.khrysalis.views.onLongClick>android.view.View
function androidViewViewOnLongClick(this_, action) {
    this_.addEventListener("oncontextmenu", (_ev) => {
        _ev.stopPropagation();
        const it = _ev.target;
        action();
    });
}
exports.androidViewViewOnLongClick = androidViewViewOnLongClick;
function getViewVisibility(this_) {
    if (this_.hidden)
        return "gone";
    if (this_.style.visibility === "hidden")
        return "invisible";
    return "visible";
}
exports.getViewVisibility = getViewVisibility;
function setViewVisibility(this_, value) {
    switch (value) {
        case "gone":
            this_.hidden = true;
            this_.style.visibility = "visible";
            break;
        case "visible":
            this_.hidden = false;
            this_.style.visibility = "visible";
            break;
        case "invisible":
            this_.hidden = false;
            this_.style.visibility = "hidden";
            break;
    }
}
exports.setViewVisibility = setViewVisibility;
function findView(view, predicate) {
    for (let i = 0; i < view.children.length; i++) {
        const child = view.children.item(i);
        if (child instanceof HTMLElement && predicate(child)) {
            return child;
        }
    }
    return null;
}
exports.findView = findView;
//# sourceMappingURL=View.ext.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/ViewDependency.actual.js":
/*!***************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/ViewDependency.actual.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const uuid_1 = __webpack_require__(/*! uuid */ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/index.js");
//! Declares com.lightningkite.khrysalis.views.share>com.lightningkite.khrysalis.android.ActivityAccess
function comLightningkiteKhrysalisAndroidActivityAccessShare(this_, shareTitle, message = null, url = null, image = null) {
    const escapedTitle = encodeURIComponent(shareTitle);
    const escapedUrl = url ? encodeURIComponent(url) : null;
    const escapedMessage = message ? encodeURIComponent(message) : null;
    const tempDiv = document.createElement("div");
    tempDiv.innerHTML = `<div class="resp-sharing-dialog-back">
  <dialog class="resp-sharing-dialog-front">
    <!-- Sharingbutton Facebook -->
    <a class="resp-sharing-button__link" href="https://facebook.com/sharer/sharer.php?u=${escapedUrl}" target="_blank" rel="noopener" aria-label="Share on Facebook">
      <div class="resp-sharing-button resp-sharing-button--facebook resp-sharing-button--large">
        <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solid">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M18.77 7.46H14.5v-1.9c0-.9.6-1.1 1-1.1h3V.5h-4.33C10.24.5 9.5 3.44 9.5 5.32v2.15h-3v4h3v12h5v-12h3.85l.42-4z" /></svg>
        </div>Share on Facebook
      </div>
    </a>

    <!-- Sharingbutton Twitter -->
    <a class="resp-sharing-button__link" href="https://twitter.com/intent/tweet/?text=${escapedMessage}&amp;url=${escapedUrl}" target="_blank" rel="noopener" aria-label="Share on Twitter">
      <div class="resp-sharing-button resp-sharing-button--twitter resp-sharing-button--large">
        <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solid">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M23.44 4.83c-.8.37-1.5.38-2.22.02.93-.56.98-.96 1.32-2.02-.88.52-1.86.9-2.9 1.1-.82-.88-2-1.43-3.3-1.43-2.5 0-4.55 2.04-4.55 4.54 0 .36.03.7.1 1.04-3.77-.2-7.12-2-9.36-4.75-.4.67-.6 1.45-.6 2.3 0 1.56.8 2.95 2 3.77-.74-.03-1.44-.23-2.05-.57v.06c0 2.2 1.56 4.03 3.64 4.44-.67.2-1.37.2-2.06.08.58 1.8 2.26 3.12 4.25 3.16C5.78 18.1 3.37 18.74 1 18.46c2 1.3 4.4 2.04 6.97 2.04 8.35 0 12.92-6.92 12.92-12.93 0-.2 0-.4-.02-.6.9-.63 1.96-1.22 2.56-2.14z" /></svg>
        </div>Share on Twitter
      </div>
    </a>

    <!-- Sharingbutton Tumblr -->
    <a class="resp-sharing-button__link" href="https://www.tumblr.com/widgets/share/tool?posttype=link&amp;title=${escapedMessage}&amp;caption=${escapedMessage}&amp;content=${escapedUrl}&amp;canonicalUrl=${escapedUrl}&amp;shareSource=tumblr_share_button" target="_blank" rel="noopener" aria-label="Share on Tumblr">
      <div class="resp-sharing-button resp-sharing-button--tumblr resp-sharing-button--large">
        <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solid">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M13.5.5v5h5v4h-5V15c0 5 3.5 4.4 6 2.8v4.4c-6.7 3.2-12 0-12-4.2V9.5h-3V6.7c1-.3 2.2-.7 3-1.3.5-.5 1-1.2 1.4-2 .3-.7.6-1.7.7-3h3.8z" /></svg>
        </div>Share on Tumblr
      </div>
    </a>

    <!-- Sharingbutton E-Mail -->
    <a class="resp-sharing-button__link" href="mailto:?subject=${escapedMessage}&amp;body=${escapedUrl}" target="_self" rel="noopener" aria-label="Share by E-Mail">
      <div class="resp-sharing-button resp-sharing-button--email resp-sharing-button--large">
        <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solid">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M22 4H2C.9 4 0 4.9 0 6v12c0 1.1.9 2 2 2h20c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM7.25 14.43l-3.5 2c-.08.05-.17.07-.25.07-.17 0-.34-.1-.43-.25-.14-.24-.06-.55.18-.68l3.5-2c.24-.14.55-.06.68.18.14.24.06.55-.18.68zm4.75.07c-.1 0-.2-.03-.27-.08l-8.5-5.5c-.23-.15-.3-.46-.15-.7.15-.22.46-.3.7-.14L12 13.4l8.23-5.32c.23-.15.54-.08.7.15.14.23.07.54-.16.7l-8.5 5.5c-.08.04-.17.07-.27.07zm8.93 1.75c-.1.16-.26.25-.43.25-.08 0-.17-.02-.25-.07l-3.5-2c-.24-.13-.32-.44-.18-.68s.44-.32.68-.18l3.5 2c.24.13.32.44.18.68z" /></svg></div>Share by E-Mail
      </div>
    </a>

    <!-- Sharingbutton Pinterest -->
    <a class="resp-sharing-button__link" href="https://pinterest.com/pin/create/button/?url=${escapedUrl}&amp;media=${escapedUrl}&amp;description=${escapedMessage}" target="_blank" rel="noopener" aria-label="Share on Pinterest">
      <div class="resp-sharing-button resp-sharing-button--pinterest resp-sharing-button--large">
        <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solid">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M12.14.5C5.86.5 2.7 5 2.7 8.75c0 2.27.86 4.3 2.7 5.05.3.12.57 0 .66-.33l.27-1.06c.1-.32.06-.44-.2-.73-.52-.62-.86-1.44-.86-2.6 0-3.33 2.5-6.32 6.5-6.32 3.55 0 5.5 2.17 5.5 5.07 0 3.8-1.7 7.02-4.2 7.02-1.37 0-2.4-1.14-2.07-2.54.4-1.68 1.16-3.48 1.16-4.7 0-1.07-.58-1.98-1.78-1.98-1.4 0-2.55 1.47-2.55 3.42 0 1.25.43 2.1.43 2.1l-1.7 7.2c-.5 2.13-.08 4.75-.04 5 .02.17.22.2.3.1.14-.18 1.82-2.26 2.4-4.33.16-.58.93-3.63.93-3.63.45.88 1.8 1.65 3.22 1.65 4.25 0 7.13-3.87 7.13-9.05C20.5 4.15 17.18.5 12.14.5z" /></svg>
        </div>Share on Pinterest
      </div>
    </a>

    <!-- Sharingbutton LinkedIn -->
    <a class="resp-sharing-button__link" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=${escapedUrl}&amp;title=${escapedTitle}&amp;summary=${escapedMessage}&amp;source=${escapedUrl}" target="_blank" rel="noopener" aria-label="Share on LinkedIn">
      <div class="resp-sharing-button resp-sharing-button--linkedin resp-sharing-button--large">
        <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solid">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M6.5 21.5h-5v-13h5v13zM4 6.5C2.5 6.5 1.5 5.3 1.5 4s1-2.4 2.5-2.4c1.6 0 2.5 1 2.6 2.5 0 1.4-1 2.5-2.6 2.5zm11.5 6c-1 0-2 1-2 2v7h-5v-13h5V10s1.6-1.5 4-1.5c3 0 5 2.2 5 6.3v6.7h-5v-7c0-1-1-2-2-2z" /></svg>
        </div>Share on LinkedIn
      </div>
    </a>

    <!-- Sharingbutton Reddit -->
    <a class="resp-sharing-button__link" href="https://reddit.com/submit/?url=${escapedUrl}&amp;resubmit=true&amp;title=${escapedMessage}" target="_blank" rel="noopener" aria-label="Share on Reddit">
      <div class="resp-sharing-button resp-sharing-button--reddit resp-sharing-button--large">
        <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solid">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M24 11.5c0-1.65-1.35-3-3-3-.96 0-1.86.48-2.42 1.24-1.64-1-3.75-1.64-6.07-1.72.08-1.1.4-3.05 1.52-3.7.72-.4 1.73-.24 3 .5C17.2 6.3 18.46 7.5 20 7.5c1.65 0 3-1.35 3-3s-1.35-3-3-3c-1.38 0-2.54.94-2.88 2.22-1.43-.72-2.64-.8-3.6-.25-1.64.94-1.95 3.47-2 4.55-2.33.08-4.45.7-6.1 1.72C4.86 8.98 3.96 8.5 3 8.5c-1.65 0-3 1.35-3 3 0 1.32.84 2.44 2.05 2.84-.03.22-.05.44-.05.66 0 3.86 4.5 7 10 7s10-3.14 10-7c0-.22-.02-.44-.05-.66 1.2-.4 2.05-1.54 2.05-2.84zM2.3 13.37C1.5 13.07 1 12.35 1 11.5c0-1.1.9-2 2-2 .64 0 1.22.32 1.6.82-1.1.85-1.92 1.9-2.3 3.05zm3.7.13c0-1.1.9-2 2-2s2 .9 2 2-.9 2-2 2-2-.9-2-2zm9.8 4.8c-1.08.63-2.42.96-3.8.96-1.4 0-2.74-.34-3.8-.95-.24-.13-.32-.44-.2-.68.15-.24.46-.32.7-.18 1.83 1.06 4.76 1.06 6.6 0 .23-.13.53-.05.67.2.14.23.06.54-.18.67zm.2-2.8c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm5.7-2.13c-.38-1.16-1.2-2.2-2.3-3.05.38-.5.97-.82 1.6-.82 1.1 0 2 .9 2 2 0 .84-.53 1.57-1.3 1.87z" /></svg>
        </div>Share on Reddit
      </div>
    </a>

    <!-- Sharingbutton XING -->
    <a class="resp-sharing-button__link" href="https://www.xing.com/app/user?op=share;url=${escapedUrl};title=${escapedMessage}" target="_blank" rel="noopener" aria-label="Share on XING">
      <div class="resp-sharing-button resp-sharing-button--xing resp-sharing-button--large">
        <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solid">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M10.2 9.7l-3-5.4C7.2 4 7 4 6.8 4h-5c-.3 0-.4 0-.5.2v.5L4 10 .4 16v.5c0 .2.2.3.4.3h5c.3 0 .4 0 .5-.2l4-6.6v-.5zM24 .2l-.5-.2H18s-.2 0-.3.3l-8 14v.4l5.2 9c0 .2 0 .3.3.3h5.4s.3 0 .4-.2c.2-.2.2-.4 0-.5l-5-8.8L24 .7V.2z" /></svg>
        </div>Share on XING
      </div>
    </a>

    <!-- Sharingbutton WhatsApp -->
    <a class="resp-sharing-button__link" href="whatsapp://send?text=${escapedMessage}%20${escapedUrl}" target="_blank" rel="noopener" aria-label="Share on WhatsApp">
      <div class="resp-sharing-button resp-sharing-button--whatsapp resp-sharing-button--large">
        <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solid">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M20.1 3.9C17.9 1.7 15 .5 12 .5 5.8.5.7 5.6.7 11.9c0 2 .5 3.9 1.5 5.6L.6 23.4l6-1.6c1.6.9 3.5 1.3 5.4 1.3 6.3 0 11.4-5.1 11.4-11.4-.1-2.8-1.2-5.7-3.3-7.8zM12 21.4c-1.7 0-3.3-.5-4.8-1.3l-.4-.2-3.5 1 1-3.4L4 17c-1-1.5-1.4-3.2-1.4-5.1 0-5.2 4.2-9.4 9.4-9.4 2.5 0 4.9 1 6.7 2.8 1.8 1.8 2.8 4.2 2.8 6.7-.1 5.2-4.3 9.4-9.5 9.4zm5.1-7.1c-.3-.1-1.7-.9-1.9-1-.3-.1-.5-.1-.7.1-.2.3-.8 1-.9 1.1-.2.2-.3.2-.6.1s-1.2-.5-2.3-1.4c-.9-.8-1.4-1.7-1.6-2-.2-.3 0-.5.1-.6s.3-.3.4-.5c.2-.1.3-.3.4-.5.1-.2 0-.4 0-.5C10 9 9.3 7.6 9 7c-.1-.4-.4-.3-.5-.3h-.6s-.4.1-.7.3c-.3.3-1 1-1 2.4s1 2.8 1.1 3c.1.2 2 3.1 4.9 4.3.7.3 1.2.5 1.6.6.7.2 1.3.2 1.8.1.6-.1 1.7-.7 1.9-1.3.2-.7.2-1.2.2-1.3-.1-.3-.3-.4-.6-.5z" /></svg>
        </div>Share on WhatsApp
      </div>
    </a>

    <!-- Sharingbutton Hacker News -->
    <a class="resp-sharing-button__link" href="https://news.ycombinator.com/submitlink?u=${escapedUrl}&amp;t=${escapedMessage}" target="_blank" rel="noopener" aria-label="Share on Hacker News">
      <div class="resp-sharing-button resp-sharing-button--hackernews resp-sharing-button--large">
        <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solid">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 140 140">
            <path fill-rule="evenodd" d="M60.94 82.314L17 0h20.08l25.85 52.093c.397.927.86 1.888 1.39 2.883.53.994.995 2.02 1.393 3.08.265.4.463.764.596 1.095.13.334.262.63.395.898.662 1.325 1.26 2.618 1.79 3.877.53 1.26.993 2.42 1.39 3.48 1.06-2.254 2.22-4.673 3.48-7.258 1.26-2.585 2.552-5.27 3.877-8.052L103.49 0h18.69L77.84 83.308v53.087h-16.9v-54.08z"></path>
          </svg>
        </div>Share on Hacker News
      </div>
    </a>

    <!-- Sharingbutton VK -->
    <a class="resp-sharing-button__link" href="http://vk.com/share.php?title=${escapedMessage}&amp;url=${escapedUrl}" target="_blank" rel="noopener" aria-label="Share on VK">
      <div class="resp-sharing-button resp-sharing-button--vk resp-sharing-button--large">
        <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solid">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M21.547 7h-3.29a.743.743 0 0 0-.655.392s-1.312 2.416-1.734 3.23C14.734 12.813 14 12.126 14 11.11V7.603A1.104 1.104 0 0 0 12.896 6.5h-2.474a1.982 1.982 0 0 0-1.75.813s1.255-.204 1.255 1.49c0 .42.022 1.626.04 2.64a.73.73 0 0 1-1.272.503 21.54 21.54 0 0 1-2.498-4.543.693.693 0 0 0-.63-.403h-2.99a.508.508 0 0 0-.48.685C3.005 10.175 6.918 18 11.38 18h1.878a.742.742 0 0 0 .742-.742v-1.135a.73.73 0 0 1 1.23-.53l2.247 2.112a1.09 1.09 0 0 0 .746.295h2.953c1.424 0 1.424-.988.647-1.753-.546-.538-2.518-2.617-2.518-2.617a1.02 1.02 0 0 1-.078-1.323c.637-.84 1.68-2.212 2.122-2.8.603-.804 1.697-2.507.197-2.507z" /></svg>
        </div>Share on VK
      </div>
    </a>

    <!-- Sharingbutton Telegram -->
    <a class="resp-sharing-button__link" href="https://telegram.me/share/url?text=${escapedMessage}&amp;url=${escapedUrl}" target="_blank" rel="noopener" aria-label="Share on Telegram">
      <div class="resp-sharing-button resp-sharing-button--telegram resp-sharing-button--large">
        <div aria-hidden="true" class="resp-sharing-button__icon resp-sharing-button__icon--solid">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M.707 8.475C.275 8.64 0 9.508 0 9.508s.284.867.718 1.03l5.09 1.897 1.986 6.38a1.102 1.102 0 0 0 1.75.527l2.96-2.41a.405.405 0 0 1 .494-.013l5.34 3.87a1.1 1.1 0 0 0 1.046.135 1.1 1.1 0 0 0 .682-.803l3.91-18.795A1.102 1.102 0 0 0 22.5.075L.706 8.475z" /></svg>
        </div>Share on Telegram
      </div>
    </a>


  </dialog>
</div>
`;
    const topLevel = tempDiv.firstChild;
    topLevel.onclick = (e) => {
        document.body.removeChild(topLevel);
    };
    document.body.appendChild(tempDiv.firstChild);
}
exports.comLightningkiteKhrysalisAndroidActivityAccessShare = comLightningkiteKhrysalisAndroidActivityAccessShare;
//! Declares com.lightningkite.khrysalis.views.openMap>com.lightningkite.khrysalis.android.ActivityAccess
function comLightningkiteKhrysalisAndroidActivityAccessOpenMap(this_, coordinate, label = null, zoom = null) {
    let url = label ?
        `https://www.google.com/maps/search/?api=1&query=${coordinate.latitude},${coordinate.longitude}` //TODO: Use label when it is supported
        :
            `https://www.google.com/maps/search/?api=1&query=${coordinate.latitude},${coordinate.longitude}`;
    window.open(url, "_blank");
}
exports.comLightningkiteKhrysalisAndroidActivityAccessOpenMap = comLightningkiteKhrysalisAndroidActivityAccessOpenMap;
//! Declares com.lightningkite.khrysalis.views.openEvent>com.lightningkite.khrysalis.android.ActivityAccess
function comLightningkiteKhrysalisAndroidActivityAccessOpenEvent(this_, title, description, location, start, end) {
    let calText = "BEGIN:VCALENDAR\nVERSION:2.0\nCALSCALE:GREGORIAN\nPRODID:adamgibbons/ics\nMETHOD:PUBLISH\nBEGIN:VEVENT\n";
    calText += "UID:" + uuid_1.v4() + "\n";
    calText += "SUMMARY:" + title + "\n";
    calText += "DTSTART:" + start.toISOString().replace(":", "").replace("-", "") + "\n";
    calText += "DTSTAMP:" + start.toISOString().replace(":", "").replace("-", "") + "\n";
    calText += "DTEND:" + end.toISOString().replace(":", "").replace("-", "") + "\n";
    calText += "DESCRIPTION:" + description + "\n";
    calText += "LOCATION:" + location + "\n";
    calText += "END:VEVENT\nEND:VCALENDAR";
    const a = document.createElement("a");
    a.href = "data:text/plain;charset=utf-8," + encodeURIComponent(calText);
    a.download = "event.ics";
    a.click();
}
exports.comLightningkiteKhrysalisAndroidActivityAccessOpenEvent = comLightningkiteKhrysalisAndroidActivityAccessOpenEvent;
//! Declares com.lightningkite.khrysalis.views.requestImagesGallery>com.lightningkite.khrysalis.android.ActivityAccess
function comLightningkiteKhrysalisAndroidActivityAccessRequestImagesGallery(this_, callback) {
    const f = document.createElement("input");
    f.type = "file";
    f.multiple = true;
    f.accept = "image/*";
    f.onchange = (e) => {
        const files = [];
        const fList = f.files;
        if (fList) {
            for (let i = 0; i < fList.length; i++) {
                files.push(fList.item(i));
            }
        }
        callback(files);
    };
}
exports.comLightningkiteKhrysalisAndroidActivityAccessRequestImagesGallery = comLightningkiteKhrysalisAndroidActivityAccessRequestImagesGallery;
//! Declares com.lightningkite.khrysalis.views.requestImageGallery>com.lightningkite.khrysalis.android.ActivityAccess
function comLightningkiteKhrysalisAndroidActivityAccessRequestImageGallery(this_, callback) {
    const f = document.createElement("input");
    f.type = "file";
    f.accept = "image/*";
    f.onchange = (e) => {
        const file = f.files[0];
        if (file) {
            callback(file);
        }
    };
}
exports.comLightningkiteKhrysalisAndroidActivityAccessRequestImageGallery = comLightningkiteKhrysalisAndroidActivityAccessRequestImageGallery;
//! Declares com.lightningkite.khrysalis.views.requestImageCamera>com.lightningkite.khrysalis.android.ActivityAccess
function comLightningkiteKhrysalisAndroidActivityAccessRequestImageCamera(this_, front = false, callback) {
    const f = document.createElement("input");
    f.type = "file";
    f.accept = "image/*";
    f.capture = front ? "user" : "environment";
    f.onchange = (e) => {
        const file = f.files[0];
        if (file) {
            callback(file);
        }
    };
}
exports.comLightningkiteKhrysalisAndroidActivityAccessRequestImageCamera = comLightningkiteKhrysalisAndroidActivityAccessRequestImageCamera;
//# sourceMappingURL=ViewDependency.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/ViewGenerator.shared.js":
/*!**************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/ViewGenerator.shared.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: views/ViewGenerator.shared.kt
// Package: com.lightningkite.khrysalis.views
// FQImport: com.lightningkite.khrysalis.views.newEmptyView TS newEmptyView
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator.Default.generate.dependency TS dependency
const EmptyView_actual_1 = __webpack_require__(/*! ./EmptyView.actual */ "../../khrysalis/web/dist/views/EmptyView.actual.js");
//! Declares com.lightningkite.khrysalis.views.ViewGenerator
class ViewGenerator {
    constructor() {
    }
}
exports.ViewGenerator = ViewGenerator;
(function (ViewGenerator) {
    //! Declares com.lightningkite.khrysalis.views.ViewGenerator.Default
    class Default extends ViewGenerator {
        constructor() {
            super();
        }
        //! Declares com.lightningkite.khrysalis.views.ViewGenerator.Default.title
        get title() { return "Empty"; }
        generate(dependency) { return EmptyView_actual_1.newEmptyView(dependency); }
    }
    ViewGenerator.Default = Default;
})(ViewGenerator = exports.ViewGenerator || (exports.ViewGenerator = {}));
//# sourceMappingURL=ViewGenerator.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/draw/Canvas.actual.js":
/*!************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/draw/Canvas.actual.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const Align_shared_1 = __webpack_require__(/*! ../geometry/Align.shared */ "../../khrysalis/web/dist/views/geometry/Align.shared.js");
//! Declares com.lightningkite.khrysalis.views.draw.drawTextCentered>android.graphics.Canvas
function androidGraphicsCanvasDrawTextCentered(this_, text, centerX, centerY, paint) {
    this_.textBaseline = "middle";
    this_.textAlign = "center";
    paint.text(this_, text, centerX, centerY);
}
exports.androidGraphicsCanvasDrawTextCentered = androidGraphicsCanvasDrawTextCentered;
//! Declares com.lightningkite.khrysalis.views.draw.drawText>android.graphics.Canvas
function androidGraphicsCanvasDrawText(this_, text, x, y, gravity, paint) {
    switch (gravity.vertical) {
        case Align_shared_1.Align.start:
            this_.textBaseline = "top";
            break;
        case Align_shared_1.Align.center:
        case Align_shared_1.Align.fill:
            this_.textBaseline = "middle";
            break;
        case Align_shared_1.Align.end:
            this_.textBaseline = "bottom";
            break;
    }
    this_.textAlign = "center";
    paint.text(this_, text, x, y);
}
exports.androidGraphicsCanvasDrawText = androidGraphicsCanvasDrawText;
function androidGraphicsCanvasDrawBitmap(this_, bitmap, left, top, right, bottom) {
    this_.drawImage(bitmap, left, top, right - left, bottom - top);
}
exports.androidGraphicsCanvasDrawBitmap = androidGraphicsCanvasDrawBitmap;
/*

CUSTOM DRAWING

- Custom view w/ touch interaction
- Calendar view custom callback - perhaps override on both sides, and it'd be OK?

MonthView - Can take custom renderer and touch handler
CalendarView - Can take MonthView generator, show specific months

*/
//# sourceMappingURL=Canvas.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/draw/LinearGradient.actual.js":
/*!********************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/draw/LinearGradient.actual.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Generated by Khrysalis TypeScript converter
// File: views/draw/LinearGradient.actual.kt
// Package: com.lightningkite.khrysalis.views.draw
Object.defineProperty(exports, "__esModule", { value: true });
//! Declares com.lightningkite.khrysalis.views.draw.newLinearGradient
function newLinearGradient(x0, y0, x1, y1, colors, positions, tile) {
    return (ctx) => {
        let g = ctx.createLinearGradient(x0, y0, x1, y1);
        for (let i = 0; i < colors.length; i++) {
            g.addColorStop(positions[i], colors[i]);
        }
        return g;
    };
}
exports.newLinearGradient = newLinearGradient;
//! Declares android.graphics.Shader
var Shader;
(function (Shader) {
    let TileMode;
    (function (TileMode) {
        TileMode[TileMode["REPEAT"] = 0] = "REPEAT";
    })(TileMode = Shader.TileMode || (Shader.TileMode = {}));
})(Shader = exports.Shader || (exports.Shader = {}));
//# sourceMappingURL=LinearGradient.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/draw/Paint.actual.js":
/*!***********************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/draw/Paint.actual.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Generated by Khrysalis TypeScript converter
// File: views/draw/Paint.actual.kt
// Package: com.lightningkite.khrysalis.views.draw
Object.defineProperty(exports, "__esModule", { value: true });
class Paint {
    constructor() {
        this.color = "#000000";
        this.strokeWidth = 1.0;
        this.alpha = 1.0;
        this.style = Paint.Style.FILL;
        this.textSize = 12.0;
        this.shader = null;
        this.isAntiAlias = false;
        this.isFakeBoldText = false;
    }
    apply(context) {
        if (this.shader) {
            const gradient = this.shader(context);
            context.fillStyle = gradient;
            context.strokeStyle = gradient;
        }
        else {
            context.fillStyle = this.color;
            context.strokeStyle = this.color;
        }
        context.lineWidth = this.strokeWidth;
        context.globalAlpha = this.alpha;
        context.imageSmoothingEnabled = this.isAntiAlias;
    }
    complete(context) {
        this.apply(context);
        switch (this.style) {
            case Paint.Style.FILL:
                context.fill();
                break;
            case Paint.Style.STROKE:
                context.stroke();
                break;
            case Paint.Style.FILL_AND_STROKE:
                context.fill();
                context.stroke();
                break;
        }
    }
    render(context, path) {
        this.apply(context);
        switch (this.style) {
            case Paint.Style.FILL:
                context.fill(path);
                break;
            case Paint.Style.STROKE:
                context.stroke(path);
                break;
            case Paint.Style.FILL_AND_STROKE:
                context.fill(path);
                context.stroke(path);
                break;
        }
    }
    text(context, text, x, y, maxWidth) {
        this.apply(context);
        switch (this.style) {
            case Paint.Style.FILL:
                context.fillText(text, x, y, maxWidth);
                break;
            case Paint.Style.STROKE:
                context.strokeText(text, x, y, maxWidth);
                break;
            case Paint.Style.FILL_AND_STROKE:
                context.fillText(text, x, y, maxWidth);
                context.strokeText(text, x, y, maxWidth);
                break;
        }
    }
}
exports.Paint = Paint;
(function (Paint) {
    let Style;
    (function (Style) {
        Style[Style["FILL"] = 0] = "FILL";
        Style[Style["STROKE"] = 1] = "STROKE";
        Style[Style["FILL_AND_STROKE"] = 2] = "FILL_AND_STROKE";
    })(Style = Paint.Style || (Paint.Style = {}));
})(Paint = exports.Paint || (exports.Paint = {}));
//! Declares com.lightningkite.khrysalis.views.draw.textHeight
function getAndroidGraphicsPaintTextHeight(this_) { return 0; /*TODO*/ }
exports.getAndroidGraphicsPaintTextHeight = getAndroidGraphicsPaintTextHeight;
//# sourceMappingURL=Paint.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/draw/Path.actual.js":
/*!**********************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/draw/Path.actual.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Generated by Khrysalis TypeScript converter
// File: views/draw/Path.actual.kt
// Package: com.lightningkite.khrysalis.views.draw
Object.defineProperty(exports, "__esModule", { value: true });
function pathFromLTRB(left, top, right, bottom) {
    const p = new Path2D();
    p.rect(left, top, right - left, bottom - top);
    return p;
}
exports.pathFromLTRB = pathFromLTRB;
function pathFromRectF(rect) {
    return pathFromLTRB(rect.left, rect.top, rect.right, rect.bottom);
}
exports.pathFromRectF = pathFromRectF;
function pathOvalFromLTRB(left, top, right, bottom) {
    const p = new Path2D();
    p.ellipse(left, top, (right - left) / 2, (bottom - top) / 2, 0, 0, Math.PI * 2);
    return p;
}
exports.pathOvalFromLTRB = pathOvalFromLTRB;
function pathOvalFromRectF(rect) {
    return pathOvalFromLTRB(rect.left, rect.top, rect.right, rect.bottom);
}
exports.pathOvalFromRectF = pathOvalFromRectF;
function pathRoundedFromLTRB(left, top, right, bottom, rx, ry) {
    const p = new Path2D();
    p.rect(left, top, right - left, bottom - top); //TODO: Rounded rect
    return p;
}
exports.pathRoundedFromLTRB = pathRoundedFromLTRB;
function pathRoundedFromRectF(rect, rx, ry) {
    return pathRoundedFromLTRB(rect.left, rect.top, rect.right, rect.bottom, rx, ry);
}
exports.pathRoundedFromRectF = pathRoundedFromRectF;
//# sourceMappingURL=Path.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/geometry/Align.shared.js":
/*!***************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/geometry/Align.shared.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: views/geometry/Align.shared.kt
// Package: com.lightningkite.khrysalis.views.geometry
// FQImport: com.lightningkite.khrysalis.views.geometry.Align.fill TS fill
// FQImport: com.lightningkite.khrysalis.views.geometry.AlignPair TS AlignPair
// FQImport: com.lightningkite.khrysalis.views.geometry.Align.center TS center
// FQImport: com.lightningkite.khrysalis.views.geometry.Align.end TS end
// FQImport: com.lightningkite.khrysalis.views.geometry.Align.start TS start
// FQImport: com.lightningkite.khrysalis.views.geometry.Align TS Align
Object.defineProperty(exports, "__esModule", { value: true });
//! Declares com.lightningkite.khrysalis.views.geometry.Align
class Align {
    constructor(name) {
        this.name = name;
    }
    static values() { return Align._values; }
    static valueOf(name) { return Align[name]; }
    toString() { return this.name; }
}
exports.Align = Align;
Align.start = new Align("start");
Align.center = new Align("center");
Align.end = new Align("end");
Align.fill = new Align("fill");
Align._values = [Align.start, Align.center, Align.end, Align.fill];
//! Declares com.lightningkite.khrysalis.views.geometry.AlignPair
class AlignPair {
    constructor(horizontal, vertical) {
        this.horizontal = horizontal;
        this.vertical = vertical;
    }
    hashCode() {
        var _a, _b, _c, _d;
        let hash = 17;
        hash = (_b = 31 * hash + ((_a = this.horizontal) === null || _a === void 0 ? void 0 : _a.hashCode())) !== null && _b !== void 0 ? _b : 0;
        hash = (_d = 31 * hash + ((_c = this.vertical) === null || _c === void 0 ? void 0 : _c.hashCode())) !== null && _d !== void 0 ? _d : 0;
        return hash;
    }
    equals(other) { var _a, _b, _c, _d; return other instanceof AlignPair && ((_b = (_a = this.horizontal) === null || _a === void 0 ? void 0 : _a.equals(other.horizontal)) !== null && _b !== void 0 ? _b : other.horizontal === null) && ((_d = (_c = this.vertical) === null || _c === void 0 ? void 0 : _c.equals(other.vertical)) !== null && _d !== void 0 ? _d : other.vertical === null); }
    toString() { return `AlignPair(horizontal = ${this.horizontal}, vertical = ${this.vertical})`; }
    copy(horizontal = this.horizontal, vertical = this.vertical) { return new AlignPair(horizontal, vertical); }
}
exports.AlignPair = AlignPair;
(function (AlignPair) {
    //! Declares com.lightningkite.khrysalis.views.geometry.AlignPair.Companion
    class Companion {
        constructor() {
            this.center = new AlignPair(Align.center, Align.center);
            this.fill = new AlignPair(Align.fill, Align.fill);
            this.topLeft = new AlignPair(Align.start, Align.start);
            this.topCenter = new AlignPair(Align.center, Align.start);
            this.topFill = new AlignPair(Align.fill, Align.start);
            this.topRight = new AlignPair(Align.end, Align.start);
            this.centerLeft = new AlignPair(Align.start, Align.center);
            this.centerCenter = new AlignPair(Align.center, Align.center);
            this.centerFill = new AlignPair(Align.fill, Align.center);
            this.centerRight = new AlignPair(Align.end, Align.center);
            this.fillLeft = new AlignPair(Align.start, Align.fill);
            this.fillCenter = new AlignPair(Align.center, Align.fill);
            this.fillFill = new AlignPair(Align.fill, Align.fill);
            this.fillRight = new AlignPair(Align.end, Align.fill);
            this.bottomLeft = new AlignPair(Align.start, Align.end);
            this.bottomCenter = new AlignPair(Align.center, Align.end);
            this.bottomFill = new AlignPair(Align.fill, Align.end);
            this.bottomRight = new AlignPair(Align.end, Align.end);
        }
    }
    Companion.INSTANCE = new Companion();
    AlignPair.Companion = Companion;
})(AlignPair = exports.AlignPair || (exports.AlignPair = {}));
//# sourceMappingURL=Align.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/geometry/RectF.actual.js":
/*!***************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/geometry/RectF.actual.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Generated by Khrysalis TypeScript converter
// File: views/geometry/RectF.actual.kt
// Package: com.lightningkite.khrysalis.views.geometry
Object.defineProperty(exports, "__esModule", { value: true });
/* SHARED DECLARATIONS
class RectF {
    var right: Float
    var bottom: Float
    var top: Float
    var left: Float
    fun set(left: Float, top: Float, right: Float, bottom: Float)
    fun set(rect: RectF)
    fun centerX(): Float
    fun centerY(): Float
    fun width(): Float
    fun height(): Float
    fun inset(dx: Float, dy: Float)
}
 */
//! Declares android.graphics.RectF
class RectF {
    constructor() {
        this.right = 0.0;
        this.bottom = 0.0;
        this.top = 0.0;
        this.left = 0.0;
    }
    set(left, top, right, bottom) {
        if (left instanceof RectF) {
            this.right = left.right;
            this.bottom = left.bottom;
            this.top = left.top;
            this.left = left.left;
        }
        else {
            this.right = right;
            this.bottom = bottom;
            this.top = top;
            this.left = left;
        }
    }
    centerX() { return (this.left + this.right) / 2; }
    centerY() { return (this.top + this.bottom) / 2; }
    width() { return this.right - this.left; }
    height() { return this.bottom - this.top; }
    inset(dx, dy) {
        const r = new RectF();
        r.left = this.left + dx;
        r.right = this.right - dx;
        r.top = this.top + dy;
        r.bottom = this.bottom - dy;
        return r;
    }
}
exports.RectF = RectF;
//# sourceMappingURL=RectF.actual.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/html.js":
/*!**********************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/html.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function loadHtmlFromString(data) {
    const d = document.createElement("div");
    d.innerHTML = data;
    return d.firstChild;
}
exports.loadHtmlFromString = loadHtmlFromString;
function findViewById(view, id) {
    var _a;
    return (_a = view.getElementsByClassName(`id-${id}`)[0]) !== null && _a !== void 0 ? _a : null;
}
exports.findViewById = findViewById;
function getViewById(view, id) {
    return view.getElementsByClassName(`id-${id}`)[0];
}
exports.getViewById = getViewById;
function replaceViewWithId(base, withElement, id) {
    const existing = findViewById(base, id);
    if (existing) {
        const newElement = withElement();
        newElement.setAttribute('style', newElement.getAttribute('style') + '; ' + existing.getAttribute('style'));
        existing.parentNode.replaceChild(existing, newElement);
    }
}
exports.replaceViewWithId = replaceViewWithId;
//# sourceMappingURL=html.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/showDialog.shared.js":
/*!***********************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/showDialog.shared.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const StandardObservableProperty_shared_1 = __webpack_require__(/*! ../observables/StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const rxjs_1 = __webpack_require__(/*! rxjs */ "../../khrysalis/web/node_modules/rxjs/_esm5/index.js");
//! Declares com.lightningkite.khrysalis.views.lastDialog
exports._lastDialog = new StandardObservableProperty_shared_1.StandardObservableProperty(null, undefined);
function getLastDialog() { return exports._lastDialog; }
exports.getLastDialog = getLastDialog;
//! Declares com.lightningkite.khrysalis.views.showDialogEvent
exports._showDialogEvent = new rxjs_1.Subject();
function getShowDialogEvent() { return exports._showDialogEvent; }
exports.getShowDialogEvent = getShowDialogEvent;
//! Declares com.lightningkite.khrysalis.views.DialogRequest
class DialogRequest {
    constructor(_string, confirmation = null) {
        this._string = _string;
        this.confirmation = confirmation;
    }
}
exports.DialogRequest = DialogRequest;
//! Declares com.lightningkite.khrysalis.views.showDialog
function showDialog(request) {
    getLastDialog().value = request;
    getShowDialogEvent().next(request);
}
exports.showDialog = showDialog;
//! Declares com.lightningkite.khrysalis.views.showDialog
function showDialogAlert(message) {
    showDialog(new DialogRequest(message, undefined));
}
exports.showDialogAlert = showDialogAlert;
//# sourceMappingURL=showDialog.shared.js.map

/***/ }),

/***/ "../../khrysalis/web/dist/views/viewAttached.js":
/*!******************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/dist/views/viewAttached.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.attachmentEventSymbol = Symbol("attachmentEvent");
function isAttached(view) {
    return document.body.contains(view);
}
exports.isAttached = isAttached;
function addAttachmentEvent(view, action) {
    let existing = view[exports.attachmentEventSymbol];
    if (Array.isArray(existing)) {
        existing.push(action);
    }
    else {
        view[exports.attachmentEventSymbol] = [view];
    }
}
exports.addAttachmentEvent = addAttachmentEvent;
function triggerAttachmentEvent(view) {
    let existing = view[exports.attachmentEventSymbol];
    if (Array.isArray(existing)) {
        for (const element of existing) {
            element(view);
        }
    }
}
exports.triggerAttachmentEvent = triggerAttachmentEvent;
//# sourceMappingURL=viewAttached.js.map

/***/ }),

/***/ "../../khrysalis/web/node_modules/iterable-operator/dist/es2018/index.umd.js":
/*!***********************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/node_modules/iterable-operator/dist/es2018/index.umd.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "../../khrysalis/web/node_modules/mersenne-twister/src/mersenne-twister.js":
/*!*********************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/node_modules/mersenne-twister/src/mersenne-twister.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
  https://github.com/banksean wrapped Makoto Matsumoto and Takuji Nishimura's code in a namespace
  so it's better encapsulated. Now you can have multiple random number generators
  and they won't stomp all over eachother's state.

  If you want to use this as a substitute for Math.random(), use the random()
  method like so:

  var m = new MersenneTwister();
  var randomNumber = m.random();

  You can also call the other genrand_{foo}() methods on the instance.

  If you want to use a specific seed in order to get a repeatable random
  sequence, pass an integer into the constructor:

  var m = new MersenneTwister(123);

  and that will always produce the same random sequence.

  Sean McCullough (banksean@gmail.com)
*/

/*
   A C-program for MT19937, with initialization improved 2002/1/26.
   Coded by Takuji Nishimura and Makoto Matsumoto.

   Before using, initialize the state by using init_seed(seed)
   or init_by_array(init_key, key_length).

   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,
   All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

     1. Redistributions of source code must retain the above copyright
        notice, this list of conditions and the following disclaimer.

     2. Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the distribution.

     3. The names of its contributors may not be used to endorse or promote
        products derived from this software without specific prior written
        permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


   Any feedback is very welcome.
   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html
   email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)
*/

var MersenneTwister = function(seed) {
	if (seed == undefined) {
		seed = new Date().getTime();
	}

	/* Period parameters */
	this.N = 624;
	this.M = 397;
	this.MATRIX_A = 0x9908b0df;   /* constant vector a */
	this.UPPER_MASK = 0x80000000; /* most significant w-r bits */
	this.LOWER_MASK = 0x7fffffff; /* least significant r bits */

	this.mt = new Array(this.N); /* the array for the state vector */
	this.mti=this.N+1; /* mti==N+1 means mt[N] is not initialized */

	if (seed.constructor == Array) {
		this.init_by_array(seed, seed.length);
	}
	else {
		this.init_seed(seed);
	}
}

/* initializes mt[N] with a seed */
/* origin name init_genrand */
MersenneTwister.prototype.init_seed = function(s) {
	this.mt[0] = s >>> 0;
	for (this.mti=1; this.mti<this.N; this.mti++) {
		var s = this.mt[this.mti-1] ^ (this.mt[this.mti-1] >>> 30);
		this.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253)
		+ this.mti;
		/* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */
		/* In the previous versions, MSBs of the seed affect   */
		/* only MSBs of the array mt[].                        */
		/* 2002/01/09 modified by Makoto Matsumoto             */
		this.mt[this.mti] >>>= 0;
		/* for >32 bit machines */
	}
}

/* initialize by an array with array-length */
/* init_key is the array for initializing keys */
/* key_length is its length */
/* slight change for C++, 2004/2/26 */
MersenneTwister.prototype.init_by_array = function(init_key, key_length) {
	var i, j, k;
	this.init_seed(19650218);
	i=1; j=0;
	k = (this.N>key_length ? this.N : key_length);
	for (; k; k--) {
		var s = this.mt[i-1] ^ (this.mt[i-1] >>> 30)
		this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525)))
		+ init_key[j] + j; /* non linear */
		this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */
		i++; j++;
		if (i>=this.N) { this.mt[0] = this.mt[this.N-1]; i=1; }
		if (j>=key_length) j=0;
	}
	for (k=this.N-1; k; k--) {
		var s = this.mt[i-1] ^ (this.mt[i-1] >>> 30);
		this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941))
		- i; /* non linear */
		this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */
		i++;
		if (i>=this.N) { this.mt[0] = this.mt[this.N-1]; i=1; }
	}

	this.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */
}

/* generates a random number on [0,0xffffffff]-interval */
/* origin name genrand_int32 */
MersenneTwister.prototype.random_int = function() {
	var y;
	var mag01 = new Array(0x0, this.MATRIX_A);
	/* mag01[x] = x * MATRIX_A  for x=0,1 */

	if (this.mti >= this.N) { /* generate N words at one time */
		var kk;

		if (this.mti == this.N+1)  /* if init_seed() has not been called, */
			this.init_seed(5489);  /* a default initial seed is used */

		for (kk=0;kk<this.N-this.M;kk++) {
			y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk+1]&this.LOWER_MASK);
			this.mt[kk] = this.mt[kk+this.M] ^ (y >>> 1) ^ mag01[y & 0x1];
		}
		for (;kk<this.N-1;kk++) {
			y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk+1]&this.LOWER_MASK);
			this.mt[kk] = this.mt[kk+(this.M-this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];
		}
		y = (this.mt[this.N-1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);
		this.mt[this.N-1] = this.mt[this.M-1] ^ (y >>> 1) ^ mag01[y & 0x1];

		this.mti = 0;
	}

	y = this.mt[this.mti++];

	/* Tempering */
	y ^= (y >>> 11);
	y ^= (y << 7) & 0x9d2c5680;
	y ^= (y << 15) & 0xefc60000;
	y ^= (y >>> 18);

	return y >>> 0;
}

/* generates a random number on [0,0x7fffffff]-interval */
/* origin name genrand_int31 */
MersenneTwister.prototype.random_int31 = function() {
	return (this.random_int()>>>1);
}

/* generates a random number on [0,1]-real-interval */
/* origin name genrand_real1 */
MersenneTwister.prototype.random_incl = function() {
	return this.random_int()*(1.0/4294967295.0);
	/* divided by 2^32-1 */
}

/* generates a random number on [0,1)-real-interval */
MersenneTwister.prototype.random = function() {
	return this.random_int()*(1.0/4294967296.0);
	/* divided by 2^32 */
}

/* generates a random number on (0,1)-real-interval */
/* origin name genrand_real3 */
MersenneTwister.prototype.random_excl = function() {
	return (this.random_int() + 0.5)*(1.0/4294967296.0);
	/* divided by 2^32 */
}

/* generates a random number on [0,1) with 53-bit resolution*/
/* origin name genrand_res53 */
MersenneTwister.prototype.random_long = function() {
	var a=this.random_int()>>>5, b=this.random_int()>>>6;
	return(a*67108864.0+b)*(1.0/9007199254740992.0);
}

/* These real versions are due to Isaku Wada, 2002/01/09 added */

module.exports = MersenneTwister;


/***/ }),

/***/ "../../khrysalis/web/node_modules/rxjs/_esm5/index.js":
/*!************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/node_modules/rxjs/_esm5/index.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "../../khrysalis/web/node_modules/rxjs/_esm5/operators/index.js":
/*!**********************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/node_modules/rxjs/_esm5/operators/index.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "../../khrysalis/web/node_modules/sprintf/lib/sprintf.js":
/*!***************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/node_modules/sprintf/lib/sprintf.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
sprintf() for JavaScript 0.7-beta1
http://www.diveintojavascript.com/projects/javascript-sprintf

Copyright (c) Alexandru Marasteanu <alexaholic [at) gmail (dot] com>
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of sprintf() for JavaScript nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL Alexandru Marasteanu BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Changelog:
2010.11.07 - 0.7-beta1-node
  - converted it to a node.js compatible module

2010.09.06 - 0.7-beta1
  - features: vsprintf, support for named placeholders
  - enhancements: format cache, reduced global namespace pollution

2010.05.22 - 0.6:
 - reverted to 0.4 and fixed the bug regarding the sign of the number 0
 Note:
 Thanks to Raphael Pigulla <raph (at] n3rd [dot) org> (http://www.n3rd.org/)
 who warned me about a bug in 0.5, I discovered that the last update was
 a regress. I appologize for that.

2010.05.09 - 0.5:
 - bug fix: 0 is now preceeded with a + sign
 - bug fix: the sign was not at the right position on padded results (Kamal Abdali)
 - switched from GPL to BSD license

2007.10.21 - 0.4:
 - unit test and patch (David Baird)

2007.09.17 - 0.3:
 - bug fix: no longer throws exception on empty paramenters (Hans Pufal)

2007.09.11 - 0.2:
 - feature: added argument swapping

2007.04.03 - 0.1:
 - initial release
**/

var sprintf = (function() {
	function get_type(variable) {
		return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase();
	}
	function str_repeat(input, multiplier) {
		for (var output = []; multiplier > 0; output[--multiplier] = input) {/* do nothing */}
		return output.join('');
	}

	var str_format = function() {
		if (!str_format.cache.hasOwnProperty(arguments[0])) {
			str_format.cache[arguments[0]] = str_format.parse(arguments[0]);
		}
		return str_format.format.call(null, str_format.cache[arguments[0]], arguments);
	};

	// convert object to simple one line string without indentation or
	// newlines. Note that this implementation does not print array
	// values to their actual place for sparse arrays. 
	//
	// For example sparse array like this
	//    l = []
	//    l[4] = 1
	// Would be printed as "[1]" instead of "[, , , , 1]"
	// 
	// If argument 'seen' is not null and array the function will check for 
	// circular object references from argument.
	str_format.object_stringify = function(obj, depth, maxdepth, seen) {
		var str = '';
		if (obj != null) {
			switch( typeof(obj) ) {
			case 'function': 
				return '[Function' + (obj.name ? ': '+obj.name : '') + ']';
			    break;
			case 'object':
				if ( obj instanceof Error) { return '[' + obj.toString() + ']' };
				if (depth >= maxdepth) return '[Object]'
				if (seen) {
					// add object to seen list
					seen = seen.slice(0)
					seen.push(obj);
				}
				if (obj.length != null) { //array
					str += '[';
					var arr = []
					for (var i in obj) {
						if (seen && seen.indexOf(obj[i]) >= 0) arr.push('[Circular]');
						else arr.push(str_format.object_stringify(obj[i], depth+1, maxdepth, seen));
					}
					str += arr.join(', ') + ']';
				} else if ('getMonth' in obj) { // date
					return 'Date(' + obj + ')';
				} else { // object
					str += '{';
					var arr = []
					for (var k in obj) { 
						if(obj.hasOwnProperty(k)) {
							if (seen && seen.indexOf(obj[k]) >= 0) arr.push(k + ': [Circular]');
							else arr.push(k +': ' +str_format.object_stringify(obj[k], depth+1, maxdepth, seen)); 
						}
					}
					str += arr.join(', ') + '}';
				}
				return str;
				break;
			case 'string':				
				return '"' + obj + '"';
				break
			}
		}
		return '' + obj;
	}

	str_format.format = function(parse_tree, argv) {
		var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length;
		for (i = 0; i < tree_length; i++) {
			node_type = get_type(parse_tree[i]);
			if (node_type === 'string') {
				output.push(parse_tree[i]);
			}
			else if (node_type === 'array') {
				match = parse_tree[i]; // convenience purposes only
				if (match[2]) { // keyword argument
					arg = argv[cursor];
					for (k = 0; k < match[2].length; k++) {
						if (!arg.hasOwnProperty(match[2][k])) {
							throw new Error(sprintf('[sprintf] property "%s" does not exist', match[2][k]));
						}
						arg = arg[match[2][k]];
					}
				}
				else if (match[1]) { // positional argument (explicit)
					arg = argv[match[1]];
				}
				else { // positional argument (implicit)
					arg = argv[cursor++];
				}

				if (/[^sO]/.test(match[8]) && (get_type(arg) != 'number')) {
					throw new Error(sprintf('[sprintf] expecting number but found %s "' + arg + '"', get_type(arg)));
				}
				switch (match[8]) {
					case 'b': arg = arg.toString(2); break;
					case 'c': arg = String.fromCharCode(arg); break;
					case 'd': arg = parseInt(arg, 10); break;
					case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;
					case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;
				    case 'O': arg = str_format.object_stringify(arg, 0, parseInt(match[7]) || 5); break;
					case 'o': arg = arg.toString(8); break;
					case 's': arg = ((arg = String(arg)) && match[7] ? arg.substring(0, match[7]) : arg); break;
					case 'u': arg = Math.abs(arg); break;
					case 'x': arg = arg.toString(16); break;
					case 'X': arg = arg.toString(16).toUpperCase(); break;
				}
				arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? '+'+ arg : arg);
				pad_character = match[4] ? match[4] == '0' ? '0' : match[4].charAt(1) : ' ';
				pad_length = match[6] - String(arg).length;
				pad = match[6] ? str_repeat(pad_character, pad_length) : '';
				output.push(match[5] ? arg + pad : pad + arg);
			}
		}
		return output.join('');
	};

	str_format.cache = {};

	str_format.parse = function(fmt) {
		var _fmt = fmt, match = [], parse_tree = [], arg_names = 0;
		while (_fmt) {
			if ((match = /^[^\x25]+/.exec(_fmt)) !== null) {
				parse_tree.push(match[0]);
			}
			else if ((match = /^\x25{2}/.exec(_fmt)) !== null) {
				parse_tree.push('%');
			}
			else if ((match = /^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-fosOuxX])/.exec(_fmt)) !== null) {
				if (match[2]) {
					arg_names |= 1;
					var field_list = [], replacement_field = match[2], field_match = [];
					if ((field_match = /^([a-z_][a-z_\d]*)/i.exec(replacement_field)) !== null) {
						field_list.push(field_match[1]);
						while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {
							if ((field_match = /^\.([a-z_][a-z_\d]*)/i.exec(replacement_field)) !== null) {
								field_list.push(field_match[1]);
							}
							else if ((field_match = /^\[(\d+)\]/.exec(replacement_field)) !== null) {
								field_list.push(field_match[1]);
							}
							else {
								throw new Error('[sprintf] ' + replacement_field);
							}
						}
					}
					else {
                        throw new Error('[sprintf] ' + replacement_field);
					}
					match[2] = field_list;
				}
				else {
					arg_names |= 2;
				}
				if (arg_names === 3) {
					throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported');
				}
				parse_tree.push(match);
			}
			else {
				throw new Error('[sprintf] ' + _fmt);
			}
			_fmt = _fmt.substring(match[0].length);
		}
		return parse_tree;
	};

	return str_format;
})();

var vsprintf = function(fmt, argv) {
	var argvClone = argv.slice();
	argvClone.unshift(fmt);
	return sprintf.apply(null, argvClone);
};

module.exports = sprintf;
sprintf.sprintf = sprintf;
sprintf.vsprintf = vsprintf;


/***/ }),

/***/ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/bytesToUuid.js":
/*!*****************************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/node_modules/uuid/dist/esm-browser/bytesToUuid.js ***!
  \*****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */
var byteToHex = [];

for (var i = 0; i < 256; ++i) {
  byteToHex.push((i + 0x100).toString(16).substr(1));
}

function bytesToUuid(buf, offset) {
  var i = offset || 0;
  var bth = byteToHex; // Note: Be careful editing this code!  It's been tuned for performance
  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434

  return (bth[buf[i + 0]] + bth[buf[i + 1]] + bth[buf[i + 2]] + bth[buf[i + 3]] + '-' + bth[buf[i + 4]] + bth[buf[i + 5]] + '-' + bth[buf[i + 6]] + bth[buf[i + 7]] + '-' + bth[buf[i + 8]] + bth[buf[i + 9]] + '-' + bth[buf[i + 10]] + bth[buf[i + 11]] + bth[buf[i + 12]] + bth[buf[i + 13]] + bth[buf[i + 14]] + bth[buf[i + 15]]).toLowerCase();
}

/* harmony default export */ __webpack_exports__["default"] = (bytesToUuid);

/***/ }),

/***/ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/index.js":
/*!***********************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/node_modules/uuid/dist/esm-browser/index.js ***!
  \***********************************************************************************************/
/*! exports provided: v1, v3, v4, v5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _v1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v1.js */ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/v1.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "v1", function() { return _v1_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _v3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v3.js */ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/v3.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "v3", function() { return _v3_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _v4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v4.js */ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/v4.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "v4", function() { return _v4_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _v5_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./v5.js */ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/v5.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "v5", function() { return _v5_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });






/***/ }),

/***/ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/md5.js":
/*!*********************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/node_modules/uuid/dist/esm-browser/md5.js ***!
  \*********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
 * Browser-compatible JavaScript MD5
 *
 * Modification of JavaScript MD5
 * https://github.com/blueimp/JavaScript-MD5
 *
 * Copyright 2011, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * https://opensource.org/licenses/MIT
 *
 * Based on
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */
function md5(bytes) {
  if (typeof bytes === 'string') {
    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape

    bytes = new Uint8Array(msg.length);

    for (var i = 0; i < msg.length; ++i) {
      bytes[i] = msg.charCodeAt(i);
    }
  }

  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));
}
/*
 * Convert an array of little-endian words to an array of bytes
 */


function md5ToHexEncodedArray(input) {
  var output = [];
  var length32 = input.length * 32;
  var hexTab = '0123456789abcdef';

  for (var i = 0; i < length32; i += 8) {
    var x = input[i >> 5] >>> i % 32 & 0xff;
    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);
    output.push(hex);
  }

  return output;
}
/**
 * Calculate output length with padding and bit length
 */


function getOutputLength(inputLength8) {
  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;
}
/*
 * Calculate the MD5 of an array of little-endian words, and a bit length.
 */


function wordsToMd5(x, len) {
  /* append padding */
  x[len >> 5] |= 0x80 << len % 32;
  x[getOutputLength(len) - 1] = len;
  var a = 1732584193;
  var b = -271733879;
  var c = -1732584194;
  var d = 271733878;

  for (var i = 0; i < x.length; i += 16) {
    var olda = a;
    var oldb = b;
    var oldc = c;
    var oldd = d;
    a = md5ff(a, b, c, d, x[i], 7, -680876936);
    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);
    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);
    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);
    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);
    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);
    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);
    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);
    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);
    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);
    b = md5gg(b, c, d, a, x[i], 20, -373897302);
    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);
    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);
    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);
    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);
    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);
    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);
    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);
    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);
    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);
    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);
    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);
    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);
    d = md5hh(d, a, b, c, x[i], 11, -358537222);
    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);
    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);
    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);
    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);
    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);
    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);
    a = md5ii(a, b, c, d, x[i], 6, -198630844);
    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);
    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);
    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);
    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);
    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);
    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);
    a = safeAdd(a, olda);
    b = safeAdd(b, oldb);
    c = safeAdd(c, oldc);
    d = safeAdd(d, oldd);
  }

  return [a, b, c, d];
}
/*
 * Convert an array bytes to an array of little-endian words
 * Characters >255 have their high-byte silently ignored.
 */


function bytesToWords(input) {
  if (input.length === 0) {
    return [];
  }

  var length8 = input.length * 8;
  var output = new Uint32Array(getOutputLength(length8));

  for (var i = 0; i < length8; i += 8) {
    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;
  }

  return output;
}
/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 * to work around bugs in some JS interpreters.
 */


function safeAdd(x, y) {
  var lsw = (x & 0xffff) + (y & 0xffff);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return msw << 16 | lsw & 0xffff;
}
/*
 * Bitwise rotate a 32-bit number to the left.
 */


function bitRotateLeft(num, cnt) {
  return num << cnt | num >>> 32 - cnt;
}
/*
 * These functions implement the four basic operations the algorithm uses.
 */


function md5cmn(q, a, b, x, s, t) {
  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);
}

function md5ff(a, b, c, d, x, s, t) {
  return md5cmn(b & c | ~b & d, a, b, x, s, t);
}

function md5gg(a, b, c, d, x, s, t) {
  return md5cmn(b & d | c & ~d, a, b, x, s, t);
}

function md5hh(a, b, c, d, x, s, t) {
  return md5cmn(b ^ c ^ d, a, b, x, s, t);
}

function md5ii(a, b, c, d, x, s, t) {
  return md5cmn(c ^ (b | ~d), a, b, x, s, t);
}

/* harmony default export */ __webpack_exports__["default"] = (md5);

/***/ }),

/***/ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/rng.js":
/*!*********************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/node_modules/uuid/dist/esm-browser/rng.js ***!
  \*********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return rng; });
// Unique ID creation requires a high quality random # generator. In the browser we therefore
// require the crypto API and do not support built-in fallback to lower quality random number
// generators (like Math.random()).
// getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,
// find the complete implementation of crypto (msCrypto) on IE11.
var getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);
var rnds8 = new Uint8Array(16);
function rng() {
  if (!getRandomValues) {
    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');
  }

  return getRandomValues(rnds8);
}

/***/ }),

/***/ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/sha1.js":
/*!**********************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/node_modules/uuid/dist/esm-browser/sha1.js ***!
  \**********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Adapted from Chris Veness' SHA1 code at
// http://www.movable-type.co.uk/scripts/sha1.html
function f(s, x, y, z) {
  switch (s) {
    case 0:
      return x & y ^ ~x & z;

    case 1:
      return x ^ y ^ z;

    case 2:
      return x & y ^ x & z ^ y & z;

    case 3:
      return x ^ y ^ z;
  }
}

function ROTL(x, n) {
  return x << n | x >>> 32 - n;
}

function sha1(bytes) {
  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];
  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];

  if (typeof bytes === 'string') {
    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape

    bytes = [];

    for (var i = 0; i < msg.length; ++i) {
      bytes.push(msg.charCodeAt(i));
    }
  }

  bytes.push(0x80);
  var l = bytes.length / 4 + 2;
  var N = Math.ceil(l / 16);
  var M = new Array(N);

  for (var _i = 0; _i < N; ++_i) {
    var arr = new Uint32Array(16);

    for (var j = 0; j < 16; ++j) {
      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];
    }

    M[_i] = arr;
  }

  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);
  M[N - 1][14] = Math.floor(M[N - 1][14]);
  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;

  for (var _i2 = 0; _i2 < N; ++_i2) {
    var W = new Uint32Array(80);

    for (var t = 0; t < 16; ++t) {
      W[t] = M[_i2][t];
    }

    for (var _t = 16; _t < 80; ++_t) {
      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);
    }

    var a = H[0];
    var b = H[1];
    var c = H[2];
    var d = H[3];
    var e = H[4];

    for (var _t2 = 0; _t2 < 80; ++_t2) {
      var s = Math.floor(_t2 / 20);
      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;
      e = d;
      d = c;
      c = ROTL(b, 30) >>> 0;
      b = a;
      a = T;
    }

    H[0] = H[0] + a >>> 0;
    H[1] = H[1] + b >>> 0;
    H[2] = H[2] + c >>> 0;
    H[3] = H[3] + d >>> 0;
    H[4] = H[4] + e >>> 0;
  }

  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];
}

/* harmony default export */ __webpack_exports__["default"] = (sha1);

/***/ }),

/***/ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/v1.js":
/*!********************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/node_modules/uuid/dist/esm-browser/v1.js ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/rng.js");
/* harmony import */ var _bytesToUuid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bytesToUuid.js */ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/bytesToUuid.js");

 // **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html

var _nodeId;

var _clockseq; // Previous uuid creation time


var _lastMSecs = 0;
var _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details

function v1(options, buf, offset) {
  var i = buf && offset || 0;
  var b = buf || [];
  options = options || {};
  var node = options.node || _nodeId;
  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not
  // specified.  We do this lazily to minimize issues related to insufficient
  // system entropy.  See #189

  if (node == null || clockseq == null) {
    var seedBytes = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

    if (node == null) {
      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
    }

    if (clockseq == null) {
      // Per 4.2.2, randomize (14 bit) clockseq
      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
    }
  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.


  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock

  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)

  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression

  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval


  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  } // Per 4.2.1.2 Throw error if too many uuids are requested


  if (nsecs >= 10000) {
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch

  msecs += 12219292800000; // `time_low`

  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff; // `time_mid`

  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff; // `time_high_and_version`

  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version

  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)

  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`

  b[i++] = clockseq & 0xff; // `node`

  for (var n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }

  return buf || Object(_bytesToUuid_js__WEBPACK_IMPORTED_MODULE_1__["default"])(b);
}

/* harmony default export */ __webpack_exports__["default"] = (v1);

/***/ }),

/***/ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/v3.js":
/*!********************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/node_modules/uuid/dist/esm-browser/v3.js ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/v35.js");
/* harmony import */ var _md5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./md5.js */ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/md5.js");


var v3 = Object(_v35_js__WEBPACK_IMPORTED_MODULE_0__["default"])('v3', 0x30, _md5_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (v3);

/***/ }),

/***/ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/v35.js":
/*!*********************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/node_modules/uuid/dist/esm-browser/v35.js ***!
  \*********************************************************************************************/
/*! exports provided: DNS, URL, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DNS", function() { return DNS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "URL", function() { return URL; });
/* harmony import */ var _bytesToUuid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytesToUuid.js */ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/bytesToUuid.js");


function uuidToBytes(uuid) {
  // Note: We assume we're being passed a valid uuid string
  var bytes = [];
  uuid.replace(/[a-fA-F0-9]{2}/g, function (hex) {
    bytes.push(parseInt(hex, 16));
  });
  return bytes;
}

function stringToBytes(str) {
  str = unescape(encodeURIComponent(str)); // UTF8 escape

  var bytes = [];

  for (var i = 0; i < str.length; ++i) {
    bytes.push(str.charCodeAt(i));
  }

  return bytes;
}

var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';
var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';
/* harmony default export */ __webpack_exports__["default"] = (function (name, version, hashfunc) {
  function generateUUID(value, namespace, buf, offset) {
    var off = buf && offset || 0;
    if (typeof value === 'string') value = stringToBytes(value);
    if (typeof namespace === 'string') namespace = uuidToBytes(namespace);

    if (!Array.isArray(value)) {
      throw TypeError('value must be an array of bytes');
    }

    if (!Array.isArray(namespace) || namespace.length !== 16) {
      throw TypeError('namespace must be uuid string or an Array of 16 byte values');
    } // Per 4.3


    var bytes = hashfunc(namespace.concat(value));
    bytes[6] = bytes[6] & 0x0f | version;
    bytes[8] = bytes[8] & 0x3f | 0x80;

    if (buf) {
      for (var idx = 0; idx < 16; ++idx) {
        buf[off + idx] = bytes[idx];
      }
    }

    return buf || Object(_bytesToUuid_js__WEBPACK_IMPORTED_MODULE_0__["default"])(bytes);
  } // Function#name is not settable on some platforms (#270)


  try {
    generateUUID.name = name; // eslint-disable-next-line no-empty
  } catch (err) {} // For CommonJS default export support


  generateUUID.DNS = DNS;
  generateUUID.URL = URL;
  return generateUUID;
});

/***/ }),

/***/ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/v4.js":
/*!********************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/node_modules/uuid/dist/esm-browser/v4.js ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/rng.js");
/* harmony import */ var _bytesToUuid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bytesToUuid.js */ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/bytesToUuid.js");



function v4(options, buf, offset) {
  if (typeof options === 'string') {
    buf = options === 'binary' ? new Uint8Array(16) : null;
    options = null;
  }

  options = options || {};
  var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__["default"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    var start = offset || 0;

    for (var i = 0; i < 16; ++i) {
      buf[start + i] = rnds[i];
    }

    return buf;
  }

  return Object(_bytesToUuid_js__WEBPACK_IMPORTED_MODULE_1__["default"])(rnds);
}

/* harmony default export */ __webpack_exports__["default"] = (v4);

/***/ }),

/***/ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/v5.js":
/*!********************************************************************************************!*\
  !*** /home/josephivie/IdeaProjects/khrysalis/web/node_modules/uuid/dist/esm-browser/v5.js ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/v35.js");
/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha1.js */ "../../khrysalis/web/node_modules/uuid/dist/esm-browser/sha1.js");


var v5 = Object(_v35_js__WEBPACK_IMPORTED_MODULE_0__["default"])('v5', 0x50, _sha1_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (v5);

/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/AsyncSubject.js":
/*!**********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/AsyncSubject.js ***!
  \**********************************************************/
/*! exports provided: AsyncSubject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncSubject", function() { return AsyncSubject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START tslib,_Subject,_Subscription PURE_IMPORTS_END */



var AsyncSubject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsyncSubject, _super);
    function AsyncSubject() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.value = null;
        _this.hasNext = false;
        _this.hasCompleted = false;
        return _this;
    }
    AsyncSubject.prototype._subscribe = function (subscriber) {
        if (this.hasError) {
            subscriber.error(this.thrownError);
            return _Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"].EMPTY;
        }
        else if (this.hasCompleted && this.hasNext) {
            subscriber.next(this.value);
            subscriber.complete();
            return _Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"].EMPTY;
        }
        return _super.prototype._subscribe.call(this, subscriber);
    };
    AsyncSubject.prototype.next = function (value) {
        if (!this.hasCompleted) {
            this.value = value;
            this.hasNext = true;
        }
    };
    AsyncSubject.prototype.error = function (error) {
        if (!this.hasCompleted) {
            _super.prototype.error.call(this, error);
        }
    };
    AsyncSubject.prototype.complete = function () {
        this.hasCompleted = true;
        if (this.hasNext) {
            _super.prototype.next.call(this, this.value);
        }
        _super.prototype.complete.call(this);
    };
    return AsyncSubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]));

//# sourceMappingURL=AsyncSubject.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/BehaviorSubject.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/BehaviorSubject.js ***!
  \*************************************************************/
/*! exports provided: BehaviorSubject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BehaviorSubject", function() { return BehaviorSubject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/ObjectUnsubscribedError */ "./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js");
/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */



var BehaviorSubject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BehaviorSubject, _super);
    function BehaviorSubject(_value) {
        var _this = _super.call(this) || this;
        _this._value = _value;
        return _this;
    }
    Object.defineProperty(BehaviorSubject.prototype, "value", {
        get: function () {
            return this.getValue();
        },
        enumerable: true,
        configurable: true
    });
    BehaviorSubject.prototype._subscribe = function (subscriber) {
        var subscription = _super.prototype._subscribe.call(this, subscriber);
        if (subscription && !subscription.closed) {
            subscriber.next(this._value);
        }
        return subscription;
    };
    BehaviorSubject.prototype.getValue = function () {
        if (this.hasError) {
            throw this.thrownError;
        }
        else if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_2__["ObjectUnsubscribedError"]();
        }
        else {
            return this._value;
        }
    };
    BehaviorSubject.prototype.next = function (value) {
        _super.prototype.next.call(this, this._value = value);
    };
    return BehaviorSubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]));

//# sourceMappingURL=BehaviorSubject.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/InnerSubscriber.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/InnerSubscriber.js ***!
  \*************************************************************/
/*! exports provided: InnerSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InnerSubscriber", function() { return InnerSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


var InnerSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](InnerSubscriber, _super);
    function InnerSubscriber(parent, outerValue, outerIndex) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        _this.outerValue = outerValue;
        _this.outerIndex = outerIndex;
        _this.index = 0;
        return _this;
    }
    InnerSubscriber.prototype._next = function (value) {
        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);
    };
    InnerSubscriber.prototype._error = function (error) {
        this.parent.notifyError(error, this);
        this.unsubscribe();
    };
    InnerSubscriber.prototype._complete = function () {
        this.parent.notifyComplete(this);
        this.unsubscribe();
    };
    return InnerSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

//# sourceMappingURL=InnerSubscriber.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Notification.js":
/*!**********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Notification.js ***!
  \**********************************************************/
/*! exports provided: NotificationKind, Notification */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationKind", function() { return NotificationKind; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Notification", function() { return Notification; });
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./observable/empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/* harmony import */ var _observable_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./observable/of */ "./node_modules/rxjs/_esm5/internal/observable/of.js");
/* harmony import */ var _observable_throwError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./observable/throwError */ "./node_modules/rxjs/_esm5/internal/observable/throwError.js");
/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */



var NotificationKind;
/*@__PURE__*/ (function (NotificationKind) {
    NotificationKind["NEXT"] = "N";
    NotificationKind["ERROR"] = "E";
    NotificationKind["COMPLETE"] = "C";
})(NotificationKind || (NotificationKind = {}));
var Notification = /*@__PURE__*/ (function () {
    function Notification(kind, value, error) {
        this.kind = kind;
        this.value = value;
        this.error = error;
        this.hasValue = kind === 'N';
    }
    Notification.prototype.observe = function (observer) {
        switch (this.kind) {
            case 'N':
                return observer.next && observer.next(this.value);
            case 'E':
                return observer.error && observer.error(this.error);
            case 'C':
                return observer.complete && observer.complete();
        }
    };
    Notification.prototype.do = function (next, error, complete) {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return next && next(this.value);
            case 'E':
                return error && error(this.error);
            case 'C':
                return complete && complete();
        }
    };
    Notification.prototype.accept = function (nextOrObserver, error, complete) {
        if (nextOrObserver && typeof nextOrObserver.next === 'function') {
            return this.observe(nextOrObserver);
        }
        else {
            return this.do(nextOrObserver, error, complete);
        }
    };
    Notification.prototype.toObservable = function () {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return Object(_observable_of__WEBPACK_IMPORTED_MODULE_1__["of"])(this.value);
            case 'E':
                return Object(_observable_throwError__WEBPACK_IMPORTED_MODULE_2__["throwError"])(this.error);
            case 'C':
                return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_0__["empty"])();
        }
        throw new Error('unexpected notification kind value');
    };
    Notification.createNext = function (value) {
        if (typeof value !== 'undefined') {
            return new Notification('N', value);
        }
        return Notification.undefinedValueNotification;
    };
    Notification.createError = function (err) {
        return new Notification('E', undefined, err);
    };
    Notification.createComplete = function () {
        return Notification.completeNotification;
    };
    Notification.completeNotification = new Notification('C');
    Notification.undefinedValueNotification = new Notification('N', undefined);
    return Notification;
}());

//# sourceMappingURL=Notification.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Observable.js":
/*!********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Observable.js ***!
  \********************************************************/
/*! exports provided: Observable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Observable", function() { return Observable; });
/* harmony import */ var _util_canReportError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/canReportError */ "./node_modules/rxjs/_esm5/internal/util/canReportError.js");
/* harmony import */ var _util_toSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/toSubscriber */ "./node_modules/rxjs/_esm5/internal/util/toSubscriber.js");
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./symbol/observable */ "./node_modules/rxjs/_esm5/internal/symbol/observable.js");
/* harmony import */ var _util_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/pipe */ "./node_modules/rxjs/_esm5/internal/util/pipe.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./config */ "./node_modules/rxjs/_esm5/internal/config.js");
/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */





var Observable = /*@__PURE__*/ (function () {
    function Observable(subscribe) {
        this._isScalar = false;
        if (subscribe) {
            this._subscribe = subscribe;
        }
    }
    Observable.prototype.lift = function (operator) {
        var observable = new Observable();
        observable.source = this;
        observable.operator = operator;
        return observable;
    };
    Observable.prototype.subscribe = function (observerOrNext, error, complete) {
        var operator = this.operator;
        var sink = Object(_util_toSubscriber__WEBPACK_IMPORTED_MODULE_1__["toSubscriber"])(observerOrNext, error, complete);
        if (operator) {
            sink.add(operator.call(sink, this.source));
        }
        else {
            sink.add(this.source || (_config__WEBPACK_IMPORTED_MODULE_4__["config"].useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?
                this._subscribe(sink) :
                this._trySubscribe(sink));
        }
        if (_config__WEBPACK_IMPORTED_MODULE_4__["config"].useDeprecatedSynchronousErrorHandling) {
            if (sink.syncErrorThrowable) {
                sink.syncErrorThrowable = false;
                if (sink.syncErrorThrown) {
                    throw sink.syncErrorValue;
                }
            }
        }
        return sink;
    };
    Observable.prototype._trySubscribe = function (sink) {
        try {
            return this._subscribe(sink);
        }
        catch (err) {
            if (_config__WEBPACK_IMPORTED_MODULE_4__["config"].useDeprecatedSynchronousErrorHandling) {
                sink.syncErrorThrown = true;
                sink.syncErrorValue = err;
            }
            if (Object(_util_canReportError__WEBPACK_IMPORTED_MODULE_0__["canReportError"])(sink)) {
                sink.error(err);
            }
            else {
                console.warn(err);
            }
        }
    };
    Observable.prototype.forEach = function (next, promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
            var subscription;
            subscription = _this.subscribe(function (value) {
                try {
                    next(value);
                }
                catch (err) {
                    reject(err);
                    if (subscription) {
                        subscription.unsubscribe();
                    }
                }
            }, reject, resolve);
        });
    };
    Observable.prototype._subscribe = function (subscriber) {
        var source = this.source;
        return source && source.subscribe(subscriber);
    };
    Observable.prototype[_symbol_observable__WEBPACK_IMPORTED_MODULE_2__["observable"]] = function () {
        return this;
    };
    Observable.prototype.pipe = function () {
        var operations = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            operations[_i] = arguments[_i];
        }
        if (operations.length === 0) {
            return this;
        }
        return Object(_util_pipe__WEBPACK_IMPORTED_MODULE_3__["pipeFromArray"])(operations)(this);
    };
    Observable.prototype.toPromise = function (promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
            var value;
            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });
        });
    };
    Observable.create = function (subscribe) {
        return new Observable(subscribe);
    };
    return Observable;
}());

function getPromiseCtor(promiseCtor) {
    if (!promiseCtor) {
        promiseCtor = _config__WEBPACK_IMPORTED_MODULE_4__["config"].Promise || Promise;
    }
    if (!promiseCtor) {
        throw new Error('no Promise impl found');
    }
    return promiseCtor;
}
//# sourceMappingURL=Observable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Observer.js":
/*!******************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Observer.js ***!
  \******************************************************/
/*! exports provided: empty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return empty; });
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ "./node_modules/rxjs/_esm5/internal/config.js");
/* harmony import */ var _util_hostReportError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/hostReportError */ "./node_modules/rxjs/_esm5/internal/util/hostReportError.js");
/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */


var empty = {
    closed: true,
    next: function (value) { },
    error: function (err) {
        if (_config__WEBPACK_IMPORTED_MODULE_0__["config"].useDeprecatedSynchronousErrorHandling) {
            throw err;
        }
        else {
            Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_1__["hostReportError"])(err);
        }
    },
    complete: function () { }
};
//# sourceMappingURL=Observer.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/OuterSubscriber.js ***!
  \*************************************************************/
/*! exports provided: OuterSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OuterSubscriber", function() { return OuterSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


var OuterSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](OuterSubscriber, _super);
    function OuterSubscriber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    OuterSubscriber.prototype.notifyError = function (error, innerSub) {
        this.destination.error(error);
    };
    OuterSubscriber.prototype.notifyComplete = function (innerSub) {
        this.destination.complete();
    };
    return OuterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

//# sourceMappingURL=OuterSubscriber.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/ReplaySubject.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/ReplaySubject.js ***!
  \***********************************************************/
/*! exports provided: ReplaySubject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReplaySubject", function() { return ReplaySubject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _scheduler_queue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scheduler/queue */ "./node_modules/rxjs/_esm5/internal/scheduler/queue.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _operators_observeOn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operators/observeOn */ "./node_modules/rxjs/_esm5/internal/operators/observeOn.js");
/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util/ObjectUnsubscribedError */ "./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js");
/* harmony import */ var _SubjectSubscription__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SubjectSubscription */ "./node_modules/rxjs/_esm5/internal/SubjectSubscription.js");
/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */







var ReplaySubject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ReplaySubject, _super);
    function ReplaySubject(bufferSize, windowTime, scheduler) {
        if (bufferSize === void 0) {
            bufferSize = Number.POSITIVE_INFINITY;
        }
        if (windowTime === void 0) {
            windowTime = Number.POSITIVE_INFINITY;
        }
        var _this = _super.call(this) || this;
        _this.scheduler = scheduler;
        _this._events = [];
        _this._infiniteTimeWindow = false;
        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;
        _this._windowTime = windowTime < 1 ? 1 : windowTime;
        if (windowTime === Number.POSITIVE_INFINITY) {
            _this._infiniteTimeWindow = true;
            _this.next = _this.nextInfiniteTimeWindow;
        }
        else {
            _this.next = _this.nextTimeWindow;
        }
        return _this;
    }
    ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {
        var _events = this._events;
        _events.push(value);
        if (_events.length > this._bufferSize) {
            _events.shift();
        }
        _super.prototype.next.call(this, value);
    };
    ReplaySubject.prototype.nextTimeWindow = function (value) {
        this._events.push(new ReplayEvent(this._getNow(), value));
        this._trimBufferThenGetEvents();
        _super.prototype.next.call(this, value);
    };
    ReplaySubject.prototype._subscribe = function (subscriber) {
        var _infiniteTimeWindow = this._infiniteTimeWindow;
        var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();
        var scheduler = this.scheduler;
        var len = _events.length;
        var subscription;
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_5__["ObjectUnsubscribedError"]();
        }
        else if (this.isStopped || this.hasError) {
            subscription = _Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"].EMPTY;
        }
        else {
            this.observers.push(subscriber);
            subscription = new _SubjectSubscription__WEBPACK_IMPORTED_MODULE_6__["SubjectSubscription"](this, subscriber);
        }
        if (scheduler) {
            subscriber.add(subscriber = new _operators_observeOn__WEBPACK_IMPORTED_MODULE_4__["ObserveOnSubscriber"](subscriber, scheduler));
        }
        if (_infiniteTimeWindow) {
            for (var i = 0; i < len && !subscriber.closed; i++) {
                subscriber.next(_events[i]);
            }
        }
        else {
            for (var i = 0; i < len && !subscriber.closed; i++) {
                subscriber.next(_events[i].value);
            }
        }
        if (this.hasError) {
            subscriber.error(this.thrownError);
        }
        else if (this.isStopped) {
            subscriber.complete();
        }
        return subscription;
    };
    ReplaySubject.prototype._getNow = function () {
        return (this.scheduler || _scheduler_queue__WEBPACK_IMPORTED_MODULE_2__["queue"]).now();
    };
    ReplaySubject.prototype._trimBufferThenGetEvents = function () {
        var now = this._getNow();
        var _bufferSize = this._bufferSize;
        var _windowTime = this._windowTime;
        var _events = this._events;
        var eventsCount = _events.length;
        var spliceCount = 0;
        while (spliceCount < eventsCount) {
            if ((now - _events[spliceCount].time) < _windowTime) {
                break;
            }
            spliceCount++;
        }
        if (eventsCount > _bufferSize) {
            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);
        }
        if (spliceCount > 0) {
            _events.splice(0, spliceCount);
        }
        return _events;
    };
    return ReplaySubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]));

var ReplayEvent = /*@__PURE__*/ (function () {
    function ReplayEvent(time, value) {
        this.time = time;
        this.value = value;
    }
    return ReplayEvent;
}());
//# sourceMappingURL=ReplaySubject.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Scheduler.js":
/*!*******************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Scheduler.js ***!
  \*******************************************************/
/*! exports provided: Scheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scheduler", function() { return Scheduler; });
var Scheduler = /*@__PURE__*/ (function () {
    function Scheduler(SchedulerAction, now) {
        if (now === void 0) {
            now = Scheduler.now;
        }
        this.SchedulerAction = SchedulerAction;
        this.now = now;
    }
    Scheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) {
            delay = 0;
        }
        return new this.SchedulerAction(this, work).schedule(state, delay);
    };
    Scheduler.now = function () { return Date.now(); };
    return Scheduler;
}());

//# sourceMappingURL=Scheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Subject.js":
/*!*****************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Subject.js ***!
  \*****************************************************/
/*! exports provided: SubjectSubscriber, Subject, AnonymousSubject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubjectSubscriber", function() { return SubjectSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Subject", function() { return Subject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnonymousSubject", function() { return AnonymousSubject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/ObjectUnsubscribedError */ "./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js");
/* harmony import */ var _SubjectSubscription__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SubjectSubscription */ "./node_modules/rxjs/_esm5/internal/SubjectSubscription.js");
/* harmony import */ var _internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../internal/symbol/rxSubscriber */ "./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js");
/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */







var SubjectSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SubjectSubscriber, _super);
    function SubjectSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        return _this;
    }
    return SubjectSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_2__["Subscriber"]));

var Subject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Subject, _super);
    function Subject() {
        var _this = _super.call(this) || this;
        _this.observers = [];
        _this.closed = false;
        _this.isStopped = false;
        _this.hasError = false;
        _this.thrownError = null;
        return _this;
    }
    Subject.prototype[_internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_6__["rxSubscriber"]] = function () {
        return new SubjectSubscriber(this);
    };
    Subject.prototype.lift = function (operator) {
        var subject = new AnonymousSubject(this, this);
        subject.operator = operator;
        return subject;
    };
    Subject.prototype.next = function (value) {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
        }
        if (!this.isStopped) {
            var observers = this.observers;
            var len = observers.length;
            var copy = observers.slice();
            for (var i = 0; i < len; i++) {
                copy[i].next(value);
            }
        }
    };
    Subject.prototype.error = function (err) {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
        }
        this.hasError = true;
        this.thrownError = err;
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].error(err);
        }
        this.observers.length = 0;
    };
    Subject.prototype.complete = function () {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
        }
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].complete();
        }
        this.observers.length = 0;
    };
    Subject.prototype.unsubscribe = function () {
        this.isStopped = true;
        this.closed = true;
        this.observers = null;
    };
    Subject.prototype._trySubscribe = function (subscriber) {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
        }
        else {
            return _super.prototype._trySubscribe.call(this, subscriber);
        }
    };
    Subject.prototype._subscribe = function (subscriber) {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
        }
        else if (this.hasError) {
            subscriber.error(this.thrownError);
            return _Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"].EMPTY;
        }
        else if (this.isStopped) {
            subscriber.complete();
            return _Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"].EMPTY;
        }
        else {
            this.observers.push(subscriber);
            return new _SubjectSubscription__WEBPACK_IMPORTED_MODULE_5__["SubjectSubscription"](this, subscriber);
        }
    };
    Subject.prototype.asObservable = function () {
        var observable = new _Observable__WEBPACK_IMPORTED_MODULE_1__["Observable"]();
        observable.source = this;
        return observable;
    };
    Subject.create = function (destination, source) {
        return new AnonymousSubject(destination, source);
    };
    return Subject;
}(_Observable__WEBPACK_IMPORTED_MODULE_1__["Observable"]));

var AnonymousSubject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AnonymousSubject, _super);
    function AnonymousSubject(destination, source) {
        var _this = _super.call(this) || this;
        _this.destination = destination;
        _this.source = source;
        return _this;
    }
    AnonymousSubject.prototype.next = function (value) {
        var destination = this.destination;
        if (destination && destination.next) {
            destination.next(value);
        }
    };
    AnonymousSubject.prototype.error = function (err) {
        var destination = this.destination;
        if (destination && destination.error) {
            this.destination.error(err);
        }
    };
    AnonymousSubject.prototype.complete = function () {
        var destination = this.destination;
        if (destination && destination.complete) {
            this.destination.complete();
        }
    };
    AnonymousSubject.prototype._subscribe = function (subscriber) {
        var source = this.source;
        if (source) {
            return this.source.subscribe(subscriber);
        }
        else {
            return _Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"].EMPTY;
        }
    };
    return AnonymousSubject;
}(Subject));

//# sourceMappingURL=Subject.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/SubjectSubscription.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/SubjectSubscription.js ***!
  \*****************************************************************/
/*! exports provided: SubjectSubscription */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubjectSubscription", function() { return SubjectSubscription; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */


var SubjectSubscription = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SubjectSubscription, _super);
    function SubjectSubscription(subject, subscriber) {
        var _this = _super.call(this) || this;
        _this.subject = subject;
        _this.subscriber = subscriber;
        _this.closed = false;
        return _this;
    }
    SubjectSubscription.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.closed = true;
        var subject = this.subject;
        var observers = subject.observers;
        this.subject = null;
        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
            return;
        }
        var subscriberIndex = observers.indexOf(this.subscriber);
        if (subscriberIndex !== -1) {
            observers.splice(subscriberIndex, 1);
        }
    };
    return SubjectSubscription;
}(_Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]));

//# sourceMappingURL=SubjectSubscription.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Subscriber.js":
/*!********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Subscriber.js ***!
  \********************************************************/
/*! exports provided: Subscriber, SafeSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Subscriber", function() { return Subscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SafeSubscriber", function() { return SafeSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/isFunction */ "./node_modules/rxjs/_esm5/internal/util/isFunction.js");
/* harmony import */ var _Observer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Observer */ "./node_modules/rxjs/_esm5/internal/Observer.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/symbol/rxSubscriber */ "./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./config */ "./node_modules/rxjs/_esm5/internal/config.js");
/* harmony import */ var _util_hostReportError__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util/hostReportError */ "./node_modules/rxjs/_esm5/internal/util/hostReportError.js");
/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */







var Subscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Subscriber, _super);
    function Subscriber(destinationOrNext, error, complete) {
        var _this = _super.call(this) || this;
        _this.syncErrorValue = null;
        _this.syncErrorThrown = false;
        _this.syncErrorThrowable = false;
        _this.isStopped = false;
        switch (arguments.length) {
            case 0:
                _this.destination = _Observer__WEBPACK_IMPORTED_MODULE_2__["empty"];
                break;
            case 1:
                if (!destinationOrNext) {
                    _this.destination = _Observer__WEBPACK_IMPORTED_MODULE_2__["empty"];
                    break;
                }
                if (typeof destinationOrNext === 'object') {
                    if (destinationOrNext instanceof Subscriber) {
                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;
                        _this.destination = destinationOrNext;
                        destinationOrNext.add(_this);
                    }
                    else {
                        _this.syncErrorThrowable = true;
                        _this.destination = new SafeSubscriber(_this, destinationOrNext);
                    }
                    break;
                }
            default:
                _this.syncErrorThrowable = true;
                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);
                break;
        }
        return _this;
    }
    Subscriber.prototype[_internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_4__["rxSubscriber"]] = function () { return this; };
    Subscriber.create = function (next, error, complete) {
        var subscriber = new Subscriber(next, error, complete);
        subscriber.syncErrorThrowable = false;
        return subscriber;
    };
    Subscriber.prototype.next = function (value) {
        if (!this.isStopped) {
            this._next(value);
        }
    };
    Subscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            this.isStopped = true;
            this._error(err);
        }
    };
    Subscriber.prototype.complete = function () {
        if (!this.isStopped) {
            this.isStopped = true;
            this._complete();
        }
    };
    Subscriber.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.isStopped = true;
        _super.prototype.unsubscribe.call(this);
    };
    Subscriber.prototype._next = function (value) {
        this.destination.next(value);
    };
    Subscriber.prototype._error = function (err) {
        this.destination.error(err);
        this.unsubscribe();
    };
    Subscriber.prototype._complete = function () {
        this.destination.complete();
        this.unsubscribe();
    };
    Subscriber.prototype._unsubscribeAndRecycle = function () {
        var _parentOrParents = this._parentOrParents;
        this._parentOrParents = null;
        this.unsubscribe();
        this.closed = false;
        this.isStopped = false;
        this._parentOrParents = _parentOrParents;
        return this;
    };
    return Subscriber;
}(_Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"]));

var SafeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SafeSubscriber, _super);
    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {
        var _this = _super.call(this) || this;
        _this._parentSubscriber = _parentSubscriber;
        var next;
        var context = _this;
        if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(observerOrNext)) {
            next = observerOrNext;
        }
        else if (observerOrNext) {
            next = observerOrNext.next;
            error = observerOrNext.error;
            complete = observerOrNext.complete;
            if (observerOrNext !== _Observer__WEBPACK_IMPORTED_MODULE_2__["empty"]) {
                context = Object.create(observerOrNext);
                if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(context.unsubscribe)) {
                    _this.add(context.unsubscribe.bind(context));
                }
                context.unsubscribe = _this.unsubscribe.bind(_this);
            }
        }
        _this._context = context;
        _this._next = next;
        _this._error = error;
        _this._complete = complete;
        return _this;
    }
    SafeSubscriber.prototype.next = function (value) {
        if (!this.isStopped && this._next) {
            var _parentSubscriber = this._parentSubscriber;
            if (!_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                this.__tryOrUnsub(this._next, value);
            }
            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            var useDeprecatedSynchronousErrorHandling = _config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling;
            if (this._error) {
                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(this._error, err);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, this._error, err);
                    this.unsubscribe();
                }
            }
            else if (!_parentSubscriber.syncErrorThrowable) {
                this.unsubscribe();
                if (useDeprecatedSynchronousErrorHandling) {
                    throw err;
                }
                Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__["hostReportError"])(err);
            }
            else {
                if (useDeprecatedSynchronousErrorHandling) {
                    _parentSubscriber.syncErrorValue = err;
                    _parentSubscriber.syncErrorThrown = true;
                }
                else {
                    Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__["hostReportError"])(err);
                }
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.complete = function () {
        var _this = this;
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            if (this._complete) {
                var wrappedComplete = function () { return _this._complete.call(_this._context); };
                if (!_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(wrappedComplete);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);
                    this.unsubscribe();
                }
            }
            else {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            this.unsubscribe();
            if (_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling) {
                throw err;
            }
            else {
                Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__["hostReportError"])(err);
            }
        }
    };
    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
        if (!_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling) {
            throw new Error('bad call');
        }
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            if (_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling) {
                parent.syncErrorValue = err;
                parent.syncErrorThrown = true;
                return true;
            }
            else {
                Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__["hostReportError"])(err);
                return true;
            }
        }
        return false;
    };
    SafeSubscriber.prototype._unsubscribe = function () {
        var _parentSubscriber = this._parentSubscriber;
        this._context = null;
        this._parentSubscriber = null;
        _parentSubscriber.unsubscribe();
    };
    return SafeSubscriber;
}(Subscriber));

//# sourceMappingURL=Subscriber.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Subscription.js":
/*!**********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Subscription.js ***!
  \**********************************************************/
/*! exports provided: Subscription */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Subscription", function() { return Subscription; });
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _util_isObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/isObject */ "./node_modules/rxjs/_esm5/internal/util/isObject.js");
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/isFunction */ "./node_modules/rxjs/_esm5/internal/util/isFunction.js");
/* harmony import */ var _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/UnsubscriptionError */ "./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js");
/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */




var Subscription = /*@__PURE__*/ (function () {
    function Subscription(unsubscribe) {
        this.closed = false;
        this._parentOrParents = null;
        this._subscriptions = null;
        if (unsubscribe) {
            this._unsubscribe = unsubscribe;
        }
    }
    Subscription.prototype.unsubscribe = function () {
        var errors;
        if (this.closed) {
            return;
        }
        var _a = this, _parentOrParents = _a._parentOrParents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
        this.closed = true;
        this._parentOrParents = null;
        this._subscriptions = null;
        if (_parentOrParents instanceof Subscription) {
            _parentOrParents.remove(this);
        }
        else if (_parentOrParents !== null) {
            for (var index = 0; index < _parentOrParents.length; ++index) {
                var parent_1 = _parentOrParents[index];
                parent_1.remove(this);
            }
        }
        if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(_unsubscribe)) {
            try {
                _unsubscribe.call(this);
            }
            catch (e) {
                errors = e instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__["UnsubscriptionError"] ? flattenUnsubscriptionErrors(e.errors) : [e];
            }
        }
        if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_0__["isArray"])(_subscriptions)) {
            var index = -1;
            var len = _subscriptions.length;
            while (++index < len) {
                var sub = _subscriptions[index];
                if (Object(_util_isObject__WEBPACK_IMPORTED_MODULE_1__["isObject"])(sub)) {
                    try {
                        sub.unsubscribe();
                    }
                    catch (e) {
                        errors = errors || [];
                        if (e instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__["UnsubscriptionError"]) {
                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));
                        }
                        else {
                            errors.push(e);
                        }
                    }
                }
            }
        }
        if (errors) {
            throw new _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__["UnsubscriptionError"](errors);
        }
    };
    Subscription.prototype.add = function (teardown) {
        var subscription = teardown;
        if (!teardown) {
            return Subscription.EMPTY;
        }
        switch (typeof teardown) {
            case 'function':
                subscription = new Subscription(teardown);
            case 'object':
                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {
                    return subscription;
                }
                else if (this.closed) {
                    subscription.unsubscribe();
                    return subscription;
                }
                else if (!(subscription instanceof Subscription)) {
                    var tmp = subscription;
                    subscription = new Subscription();
                    subscription._subscriptions = [tmp];
                }
                break;
            default: {
                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
            }
        }
        var _parentOrParents = subscription._parentOrParents;
        if (_parentOrParents === null) {
            subscription._parentOrParents = this;
        }
        else if (_parentOrParents instanceof Subscription) {
            if (_parentOrParents === this) {
                return subscription;
            }
            subscription._parentOrParents = [_parentOrParents, this];
        }
        else if (_parentOrParents.indexOf(this) === -1) {
            _parentOrParents.push(this);
        }
        else {
            return subscription;
        }
        var subscriptions = this._subscriptions;
        if (subscriptions === null) {
            this._subscriptions = [subscription];
        }
        else {
            subscriptions.push(subscription);
        }
        return subscription;
    };
    Subscription.prototype.remove = function (subscription) {
        var subscriptions = this._subscriptions;
        if (subscriptions) {
            var subscriptionIndex = subscriptions.indexOf(subscription);
            if (subscriptionIndex !== -1) {
                subscriptions.splice(subscriptionIndex, 1);
            }
        }
    };
    Subscription.EMPTY = (function (empty) {
        empty.closed = true;
        return empty;
    }(new Subscription()));
    return Subscription;
}());

function flattenUnsubscriptionErrors(errors) {
    return errors.reduce(function (errs, err) { return errs.concat((err instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__["UnsubscriptionError"]) ? err.errors : err); }, []);
}
//# sourceMappingURL=Subscription.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/config.js":
/*!****************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/config.js ***!
  \****************************************************/
/*! exports provided: config */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "config", function() { return config; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var _enable_super_gross_mode_that_will_cause_bad_things = false;
var config = {
    Promise: undefined,
    set useDeprecatedSynchronousErrorHandling(value) {
        if (value) {
            var error = /*@__PURE__*/ new Error();
            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n' + error.stack);
        }
        else if (_enable_super_gross_mode_that_will_cause_bad_things) {
            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');
        }
        _enable_super_gross_mode_that_will_cause_bad_things = value;
    },
    get useDeprecatedSynchronousErrorHandling() {
        return _enable_super_gross_mode_that_will_cause_bad_things;
    },
};
//# sourceMappingURL=config.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js":
/*!******************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js ***!
  \******************************************************************************/
/*! exports provided: ConnectableObservable, connectableObservableDescriptor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConnectableObservable", function() { return ConnectableObservable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "connectableObservableDescriptor", function() { return connectableObservableDescriptor; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _operators_refCount__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operators/refCount */ "./node_modules/rxjs/_esm5/internal/operators/refCount.js");
/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */






var ConnectableObservable = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ConnectableObservable, _super);
    function ConnectableObservable(source, subjectFactory) {
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.subjectFactory = subjectFactory;
        _this._refCount = 0;
        _this._isComplete = false;
        return _this;
    }
    ConnectableObservable.prototype._subscribe = function (subscriber) {
        return this.getSubject().subscribe(subscriber);
    };
    ConnectableObservable.prototype.getSubject = function () {
        var subject = this._subject;
        if (!subject || subject.isStopped) {
            this._subject = this.subjectFactory();
        }
        return this._subject;
    };
    ConnectableObservable.prototype.connect = function () {
        var connection = this._connection;
        if (!connection) {
            this._isComplete = false;
            connection = this._connection = new _Subscription__WEBPACK_IMPORTED_MODULE_4__["Subscription"]();
            connection.add(this.source
                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));
            if (connection.closed) {
                this._connection = null;
                connection = _Subscription__WEBPACK_IMPORTED_MODULE_4__["Subscription"].EMPTY;
            }
        }
        return connection;
    };
    ConnectableObservable.prototype.refCount = function () {
        return Object(_operators_refCount__WEBPACK_IMPORTED_MODULE_5__["refCount"])()(this);
    };
    return ConnectableObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_2__["Observable"]));

var connectableObservableDescriptor = /*@__PURE__*/ (function () {
    var connectableProto = ConnectableObservable.prototype;
    return {
        operator: { value: null },
        _refCount: { value: 0, writable: true },
        _subject: { value: null, writable: true },
        _connection: { value: null, writable: true },
        _subscribe: { value: connectableProto._subscribe },
        _isComplete: { value: connectableProto._isComplete, writable: true },
        getSubject: { value: connectableProto.getSubject },
        connect: { value: connectableProto.connect },
        refCount: { value: connectableProto.refCount }
    };
})();
var ConnectableSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ConnectableSubscriber, _super);
    function ConnectableSubscriber(destination, connectable) {
        var _this = _super.call(this, destination) || this;
        _this.connectable = connectable;
        return _this;
    }
    ConnectableSubscriber.prototype._error = function (err) {
        this._unsubscribe();
        _super.prototype._error.call(this, err);
    };
    ConnectableSubscriber.prototype._complete = function () {
        this.connectable._isComplete = true;
        this._unsubscribe();
        _super.prototype._complete.call(this);
    };
    ConnectableSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (connectable) {
            this.connectable = null;
            var connection = connectable._connection;
            connectable._refCount = 0;
            connectable._subject = null;
            connectable._connection = null;
            if (connection) {
                connection.unsubscribe();
            }
        }
    };
    return ConnectableSubscriber;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["SubjectSubscriber"]));
var RefCountOperator = /*@__PURE__*/ (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new RefCountSubscriber(subscriber, connectable);
        var subscription = source.subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var RefCountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        var _this = _super.call(this, destination) || this;
        _this.connectable = connectable;
        return _this;
    }
    RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__["Subscriber"]));
//# sourceMappingURL=ConnectableObservable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/SubscribeOnObservable.js":
/*!******************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/SubscribeOnObservable.js ***!
  \******************************************************************************/
/*! exports provided: SubscribeOnObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubscribeOnObservable", function() { return SubscribeOnObservable; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _scheduler_asap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduler/asap */ "./node_modules/rxjs/_esm5/internal/scheduler/asap.js");
/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isNumeric */ "./node_modules/rxjs/_esm5/internal/util/isNumeric.js");
/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */




var SubscribeOnObservable = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SubscribeOnObservable, _super);
    function SubscribeOnObservable(source, delayTime, scheduler) {
        if (delayTime === void 0) {
            delayTime = 0;
        }
        if (scheduler === void 0) {
            scheduler = _scheduler_asap__WEBPACK_IMPORTED_MODULE_2__["asap"];
        }
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.delayTime = delayTime;
        _this.scheduler = scheduler;
        if (!Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_3__["isNumeric"])(delayTime) || delayTime < 0) {
            _this.delayTime = 0;
        }
        if (!scheduler || typeof scheduler.schedule !== 'function') {
            _this.scheduler = _scheduler_asap__WEBPACK_IMPORTED_MODULE_2__["asap"];
        }
        return _this;
    }
    SubscribeOnObservable.create = function (source, delay, scheduler) {
        if (delay === void 0) {
            delay = 0;
        }
        if (scheduler === void 0) {
            scheduler = _scheduler_asap__WEBPACK_IMPORTED_MODULE_2__["asap"];
        }
        return new SubscribeOnObservable(source, delay, scheduler);
    };
    SubscribeOnObservable.dispatch = function (arg) {
        var source = arg.source, subscriber = arg.subscriber;
        return this.add(source.subscribe(subscriber));
    };
    SubscribeOnObservable.prototype._subscribe = function (subscriber) {
        var delay = this.delayTime;
        var source = this.source;
        var scheduler = this.scheduler;
        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {
            source: source, subscriber: subscriber
        });
    };
    return SubscribeOnObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_1__["Observable"]));

//# sourceMappingURL=SubscribeOnObservable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/combineLatest.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/combineLatest.js ***!
  \**********************************************************************/
/*! exports provided: combineLatest, CombineLatestOperator, CombineLatestSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return combineLatest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CombineLatestOperator", function() { return CombineLatestOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CombineLatestSubscriber", function() { return CombineLatestSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fromArray */ "./node_modules/rxjs/_esm5/internal/observable/fromArray.js");
/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */






var NONE = {};
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var resultSelector = null;
    var scheduler = null;
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__["isScheduler"])(observables[observables.length - 1])) {
        scheduler = observables.pop();
    }
    if (typeof observables[observables.length - 1] === 'function') {
        resultSelector = observables.pop();
    }
    if (observables.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(observables[0])) {
        observables = observables[0];
    }
    return Object(_fromArray__WEBPACK_IMPORTED_MODULE_5__["fromArray"])(observables, scheduler).lift(new CombineLatestOperator(resultSelector));
}
var CombineLatestOperator = /*@__PURE__*/ (function () {
    function CombineLatestOperator(resultSelector) {
        this.resultSelector = resultSelector;
    }
    CombineLatestOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));
    };
    return CombineLatestOperator;
}());

var CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](CombineLatestSubscriber, _super);
    function CombineLatestSubscriber(destination, resultSelector) {
        var _this = _super.call(this, destination) || this;
        _this.resultSelector = resultSelector;
        _this.active = 0;
        _this.values = [];
        _this.observables = [];
        return _this;
    }
    CombineLatestSubscriber.prototype._next = function (observable) {
        this.values.push(NONE);
        this.observables.push(observable);
    };
    CombineLatestSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            this.active = len;
            this.toRespond = len;
            for (var i = 0; i < len; i++) {
                var observable = observables[i];
                this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(this, observable, observable, i));
            }
        }
    };
    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {
        if ((this.active -= 1) === 0) {
            this.destination.complete();
        }
    };
    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var values = this.values;
        var oldVal = values[outerIndex];
        var toRespond = !this.toRespond
            ? 0
            : oldVal === NONE ? --this.toRespond : this.toRespond;
        values[outerIndex] = innerValue;
        if (toRespond === 0) {
            if (this.resultSelector) {
                this._tryResultSelector(values);
            }
            else {
                this.destination.next(values.slice());
            }
        }
    };
    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {
        var result;
        try {
            result = this.resultSelector.apply(this, values);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return CombineLatestSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]));

//# sourceMappingURL=combineLatest.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/concat.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/concat.js ***!
  \***************************************************************/
/*! exports provided: concat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return concat; });
/* harmony import */ var _of__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./of */ "./node_modules/rxjs/_esm5/internal/observable/of.js");
/* harmony import */ var _operators_concatAll__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operators/concatAll */ "./node_modules/rxjs/_esm5/internal/operators/concatAll.js");
/** PURE_IMPORTS_START _of,_operators_concatAll PURE_IMPORTS_END */


function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return Object(_operators_concatAll__WEBPACK_IMPORTED_MODULE_1__["concatAll"])()(_of__WEBPACK_IMPORTED_MODULE_0__["of"].apply(void 0, observables));
}
//# sourceMappingURL=concat.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/defer.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/defer.js ***!
  \**************************************************************/
/*! exports provided: defer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defer", function() { return defer; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */



function defer(observableFactory) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var input;
        try {
            input = observableFactory();
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        var source = input ? Object(_from__WEBPACK_IMPORTED_MODULE_1__["from"])(input) : Object(_empty__WEBPACK_IMPORTED_MODULE_2__["empty"])();
        return source.subscribe(subscriber);
    });
}
//# sourceMappingURL=defer.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/empty.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/empty.js ***!
  \**************************************************************/
/*! exports provided: EMPTY, empty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EMPTY", function() { return EMPTY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return empty; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

var EMPTY = /*@__PURE__*/ new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) { return subscriber.complete(); });
function empty(scheduler) {
    return scheduler ? emptyScheduled(scheduler) : EMPTY;
}
function emptyScheduled(scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });
}
//# sourceMappingURL=empty.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/from.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/from.js ***!
  \*************************************************************/
/*! exports provided: from */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "from", function() { return from; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/subscribeTo */ "./node_modules/rxjs/_esm5/internal/util/subscribeTo.js");
/* harmony import */ var _scheduled_scheduled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduled/scheduled */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js");
/** PURE_IMPORTS_START _Observable,_util_subscribeTo,_scheduled_scheduled PURE_IMPORTS_END */



function from(input, scheduler) {
    if (!scheduler) {
        if (input instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"]) {
            return input;
        }
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__["subscribeTo"])(input));
    }
    else {
        return Object(_scheduled_scheduled__WEBPACK_IMPORTED_MODULE_2__["scheduled"])(input, scheduler);
    }
}
//# sourceMappingURL=from.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/fromArray.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/fromArray.js ***!
  \******************************************************************/
/*! exports provided: fromArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromArray", function() { return fromArray; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_subscribeToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/subscribeToArray */ "./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js");
/* harmony import */ var _scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduled/scheduleArray */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js");
/** PURE_IMPORTS_START _Observable,_util_subscribeToArray,_scheduled_scheduleArray PURE_IMPORTS_END */



function fromArray(input, scheduler) {
    if (!scheduler) {
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](Object(_util_subscribeToArray__WEBPACK_IMPORTED_MODULE_1__["subscribeToArray"])(input));
    }
    else {
        return Object(_scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__["scheduleArray"])(input, scheduler);
    }
}
//# sourceMappingURL=fromArray.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/merge.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/merge.js ***!
  \**************************************************************/
/*! exports provided: merge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return merge; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/* harmony import */ var _operators_mergeAll__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators/mergeAll */ "./node_modules/rxjs/_esm5/internal/operators/mergeAll.js");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fromArray */ "./node_modules/rxjs/_esm5/internal/observable/fromArray.js");
/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */




function merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var concurrent = Number.POSITIVE_INFINITY;
    var scheduler = null;
    var last = observables[observables.length - 1];
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__["isScheduler"])(last)) {
        scheduler = observables.pop();
        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {
            concurrent = observables.pop();
        }
    }
    else if (typeof last === 'number') {
        concurrent = observables.pop();
    }
    if (scheduler === null && observables.length === 1 && observables[0] instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"]) {
        return observables[0];
    }
    return Object(_operators_mergeAll__WEBPACK_IMPORTED_MODULE_2__["mergeAll"])(concurrent)(Object(_fromArray__WEBPACK_IMPORTED_MODULE_3__["fromArray"])(observables, scheduler));
}
//# sourceMappingURL=merge.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/of.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/of.js ***!
  \***********************************************************/
/*! exports provided: of */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "of", function() { return of; });
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromArray */ "./node_modules/rxjs/_esm5/internal/observable/fromArray.js");
/* harmony import */ var _scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduled/scheduleArray */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js");
/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_scheduled_scheduleArray PURE_IMPORTS_END */



function of() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var scheduler = args[args.length - 1];
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_0__["isScheduler"])(scheduler)) {
        args.pop();
        return Object(_scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__["scheduleArray"])(args, scheduler);
    }
    else {
        return Object(_fromArray__WEBPACK_IMPORTED_MODULE_1__["fromArray"])(args);
    }
}
//# sourceMappingURL=of.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/race.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/race.js ***!
  \*************************************************************/
/*! exports provided: race, RaceOperator, RaceSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "race", function() { return race; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RaceOperator", function() { return RaceOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RaceSubscriber", function() { return RaceSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fromArray */ "./node_modules/rxjs/_esm5/internal/observable/fromArray.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    if (observables.length === 1) {
        if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__["isArray"])(observables[0])) {
            observables = observables[0];
        }
        else {
            return observables[0];
        }
    }
    return Object(_fromArray__WEBPACK_IMPORTED_MODULE_2__["fromArray"])(observables, undefined).lift(new RaceOperator());
}
var RaceOperator = /*@__PURE__*/ (function () {
    function RaceOperator() {
    }
    RaceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RaceSubscriber(subscriber));
    };
    return RaceOperator;
}());

var RaceSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RaceSubscriber, _super);
    function RaceSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.hasFirst = false;
        _this.observables = [];
        _this.subscriptions = [];
        return _this;
    }
    RaceSubscriber.prototype._next = function (observable) {
        this.observables.push(observable);
    };
    RaceSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            for (var i = 0; i < len && !this.hasFirst; i++) {
                var observable = observables[i];
                var subscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(this, observable, observable, i);
                if (this.subscriptions) {
                    this.subscriptions.push(subscription);
                }
                this.add(subscription);
            }
            this.observables = null;
        }
    };
    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (!this.hasFirst) {
            this.hasFirst = true;
            for (var i = 0; i < this.subscriptions.length; i++) {
                if (i !== outerIndex) {
                    var subscription = this.subscriptions[i];
                    subscription.unsubscribe();
                    this.remove(subscription);
                }
            }
            this.subscriptions = null;
        }
        this.destination.next(innerValue);
    };
    return RaceSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]));

//# sourceMappingURL=race.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/throwError.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/throwError.js ***!
  \*******************************************************************/
/*! exports provided: throwError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throwError", function() { return throwError; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

function throwError(error, scheduler) {
    if (!scheduler) {
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) { return subscriber.error(error); });
    }
    else {
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });
    }
}
function dispatch(_a) {
    var error = _a.error, subscriber = _a.subscriber;
    subscriber.error(error);
}
//# sourceMappingURL=throwError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/timer.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/timer.js ***!
  \**************************************************************/
/*! exports provided: timer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return timer; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isNumeric */ "./node_modules/rxjs/_esm5/internal/util/isNumeric.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */




function timer(dueTime, periodOrScheduler, scheduler) {
    if (dueTime === void 0) {
        dueTime = 0;
    }
    var period = -1;
    if (Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__["isNumeric"])(periodOrScheduler)) {
        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);
    }
    else if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__["isScheduler"])(periodOrScheduler)) {
        scheduler = periodOrScheduler;
    }
    if (!Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__["isScheduler"])(scheduler)) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var due = Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__["isNumeric"])(dueTime)
            ? dueTime
            : (+dueTime - scheduler.now());
        return scheduler.schedule(dispatch, due, {
            index: 0, period: period, subscriber: subscriber
        });
    });
}
function dispatch(state) {
    var index = state.index, period = state.period, subscriber = state.subscriber;
    subscriber.next(index);
    if (subscriber.closed) {
        return;
    }
    else if (period === -1) {
        return subscriber.complete();
    }
    state.index = index + 1;
    this.schedule(state, period);
}
//# sourceMappingURL=timer.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/zip.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/zip.js ***!
  \************************************************************/
/*! exports provided: zip, ZipOperator, ZipSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return zip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZipOperator", function() { return ZipOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZipSubscriber", function() { return ZipSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromArray */ "./node_modules/rxjs/_esm5/internal/observable/fromArray.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/* harmony import */ var _internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../internal/symbol/iterator */ "./node_modules/rxjs/_esm5/internal/symbol/iterator.js");
/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_OuterSubscriber,_util_subscribeToResult,_.._internal_symbol_iterator PURE_IMPORTS_END */







function zip() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var resultSelector = observables[observables.length - 1];
    if (typeof resultSelector === 'function') {
        observables.pop();
    }
    return Object(_fromArray__WEBPACK_IMPORTED_MODULE_1__["fromArray"])(observables, undefined).lift(new ZipOperator(resultSelector));
}
var ZipOperator = /*@__PURE__*/ (function () {
    function ZipOperator(resultSelector) {
        this.resultSelector = resultSelector;
    }
    ZipOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));
    };
    return ZipOperator;
}());

var ZipSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ZipSubscriber, _super);
    function ZipSubscriber(destination, resultSelector, values) {
        if (values === void 0) {
            values = Object.create(null);
        }
        var _this = _super.call(this, destination) || this;
        _this.iterators = [];
        _this.active = 0;
        _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;
        _this.values = values;
        return _this;
    }
    ZipSubscriber.prototype._next = function (value) {
        var iterators = this.iterators;
        if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(value)) {
            iterators.push(new StaticArrayIterator(value));
        }
        else if (typeof value[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_6__["iterator"]] === 'function') {
            iterators.push(new StaticIterator(value[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_6__["iterator"]]()));
        }
        else {
            iterators.push(new ZipBufferIterator(this.destination, this, value));
        }
    };
    ZipSubscriber.prototype._complete = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        this.unsubscribe();
        if (len === 0) {
            this.destination.complete();
            return;
        }
        this.active = len;
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (iterator.stillUnsubscribed) {
                var destination = this.destination;
                destination.add(iterator.subscribe(iterator, i));
            }
            else {
                this.active--;
            }
        }
    };
    ZipSubscriber.prototype.notifyInactive = function () {
        this.active--;
        if (this.active === 0) {
            this.destination.complete();
        }
    };
    ZipSubscriber.prototype.checkIterators = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        var destination = this.destination;
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {
                return;
            }
        }
        var shouldComplete = false;
        var args = [];
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            var result = iterator.next();
            if (iterator.hasCompleted()) {
                shouldComplete = true;
            }
            if (result.done) {
                destination.complete();
                return;
            }
            args.push(result.value);
        }
        if (this.resultSelector) {
            this._tryresultSelector(args);
        }
        else {
            destination.next(args);
        }
        if (shouldComplete) {
            destination.complete();
        }
    };
    ZipSubscriber.prototype._tryresultSelector = function (args) {
        var result;
        try {
            result = this.resultSelector.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return ZipSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__["Subscriber"]));

var StaticIterator = /*@__PURE__*/ (function () {
    function StaticIterator(iterator) {
        this.iterator = iterator;
        this.nextResult = iterator.next();
    }
    StaticIterator.prototype.hasValue = function () {
        return true;
    };
    StaticIterator.prototype.next = function () {
        var result = this.nextResult;
        this.nextResult = this.iterator.next();
        return result;
    };
    StaticIterator.prototype.hasCompleted = function () {
        var nextResult = this.nextResult;
        return nextResult && nextResult.done;
    };
    return StaticIterator;
}());
var StaticArrayIterator = /*@__PURE__*/ (function () {
    function StaticArrayIterator(array) {
        this.array = array;
        this.index = 0;
        this.length = 0;
        this.length = array.length;
    }
    StaticArrayIterator.prototype[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_6__["iterator"]] = function () {
        return this;
    };
    StaticArrayIterator.prototype.next = function (value) {
        var i = this.index++;
        var array = this.array;
        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };
    };
    StaticArrayIterator.prototype.hasValue = function () {
        return this.array.length > this.index;
    };
    StaticArrayIterator.prototype.hasCompleted = function () {
        return this.array.length === this.index;
    };
    return StaticArrayIterator;
}());
var ZipBufferIterator = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ZipBufferIterator, _super);
    function ZipBufferIterator(destination, parent, observable) {
        var _this = _super.call(this, destination) || this;
        _this.parent = parent;
        _this.observable = observable;
        _this.stillUnsubscribed = true;
        _this.buffer = [];
        _this.isComplete = false;
        return _this;
    }
    ZipBufferIterator.prototype[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_6__["iterator"]] = function () {
        return this;
    };
    ZipBufferIterator.prototype.next = function () {
        var buffer = this.buffer;
        if (buffer.length === 0 && this.isComplete) {
            return { value: null, done: true };
        }
        else {
            return { value: buffer.shift(), done: false };
        }
    };
    ZipBufferIterator.prototype.hasValue = function () {
        return this.buffer.length > 0;
    };
    ZipBufferIterator.prototype.hasCompleted = function () {
        return this.buffer.length === 0 && this.isComplete;
    };
    ZipBufferIterator.prototype.notifyComplete = function () {
        if (this.buffer.length > 0) {
            this.isComplete = true;
            this.parent.notifyInactive();
        }
        else {
            this.destination.complete();
        }
    };
    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.buffer.push(innerValue);
        this.parent.checkIterators();
    };
    ZipBufferIterator.prototype.subscribe = function (value, index) {
        return Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_5__["subscribeToResult"])(this, this.observable, this, index);
    };
    return ZipBufferIterator;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_4__["OuterSubscriber"]));
//# sourceMappingURL=zip.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/audit.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/audit.js ***!
  \*************************************************************/
/*! exports provided: audit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "audit", function() { return audit; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function audit(durationSelector) {
    return function auditOperatorFunction(source) {
        return source.lift(new AuditOperator(durationSelector));
    };
}
var AuditOperator = /*@__PURE__*/ (function () {
    function AuditOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    AuditOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));
    };
    return AuditOperator;
}());
var AuditSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AuditSubscriber, _super);
    function AuditSubscriber(destination, durationSelector) {
        var _this = _super.call(this, destination) || this;
        _this.durationSelector = durationSelector;
        _this.hasValue = false;
        return _this;
    }
    AuditSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
        if (!this.throttled) {
            var duration = void 0;
            try {
                var durationSelector = this.durationSelector;
                duration = durationSelector(value);
            }
            catch (err) {
                return this.destination.error(err);
            }
            var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(this, duration);
            if (!innerSubscription || innerSubscription.closed) {
                this.clearThrottle();
            }
            else {
                this.add(this.throttled = innerSubscription);
            }
        }
    };
    AuditSubscriber.prototype.clearThrottle = function () {
        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;
        if (throttled) {
            this.remove(throttled);
            this.throttled = null;
            throttled.unsubscribe();
        }
        if (hasValue) {
            this.value = null;
            this.hasValue = false;
            this.destination.next(value);
        }
    };
    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {
        this.clearThrottle();
    };
    AuditSubscriber.prototype.notifyComplete = function () {
        this.clearThrottle();
    };
    return AuditSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]));
//# sourceMappingURL=audit.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/auditTime.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/auditTime.js ***!
  \*****************************************************************/
/*! exports provided: auditTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "auditTime", function() { return auditTime; });
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _audit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./audit */ "./node_modules/rxjs/_esm5/internal/operators/audit.js");
/* harmony import */ var _observable_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/timer */ "./node_modules/rxjs/_esm5/internal/observable/timer.js");
/** PURE_IMPORTS_START _scheduler_async,_audit,_observable_timer PURE_IMPORTS_END */



function auditTime(duration, scheduler) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__["async"];
    }
    return Object(_audit__WEBPACK_IMPORTED_MODULE_1__["audit"])(function () { return Object(_observable_timer__WEBPACK_IMPORTED_MODULE_2__["timer"])(duration, scheduler); });
}
//# sourceMappingURL=auditTime.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/buffer.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/buffer.js ***!
  \**************************************************************/
/*! exports provided: buffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buffer", function() { return buffer; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function buffer(closingNotifier) {
    return function bufferOperatorFunction(source) {
        return source.lift(new BufferOperator(closingNotifier));
    };
}
var BufferOperator = /*@__PURE__*/ (function () {
    function BufferOperator(closingNotifier) {
        this.closingNotifier = closingNotifier;
    }
    BufferOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));
    };
    return BufferOperator;
}());
var BufferSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BufferSubscriber, _super);
    function BufferSubscriber(destination, closingNotifier) {
        var _this = _super.call(this, destination) || this;
        _this.buffer = [];
        _this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(_this, closingNotifier));
        return _this;
    }
    BufferSubscriber.prototype._next = function (value) {
        this.buffer.push(value);
    };
    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var buffer = this.buffer;
        this.buffer = [];
        this.destination.next(buffer);
    };
    return BufferSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]));
//# sourceMappingURL=buffer.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/bufferCount.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/bufferCount.js ***!
  \*******************************************************************/
/*! exports provided: bufferCount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bufferCount", function() { return bufferCount; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function bufferCount(bufferSize, startBufferEvery) {
    if (startBufferEvery === void 0) {
        startBufferEvery = null;
    }
    return function bufferCountOperatorFunction(source) {
        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));
    };
}
var BufferCountOperator = /*@__PURE__*/ (function () {
    function BufferCountOperator(bufferSize, startBufferEvery) {
        this.bufferSize = bufferSize;
        this.startBufferEvery = startBufferEvery;
        if (!startBufferEvery || bufferSize === startBufferEvery) {
            this.subscriberClass = BufferCountSubscriber;
        }
        else {
            this.subscriberClass = BufferSkipCountSubscriber;
        }
    }
    BufferCountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));
    };
    return BufferCountOperator;
}());
var BufferCountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BufferCountSubscriber, _super);
    function BufferCountSubscriber(destination, bufferSize) {
        var _this = _super.call(this, destination) || this;
        _this.bufferSize = bufferSize;
        _this.buffer = [];
        return _this;
    }
    BufferCountSubscriber.prototype._next = function (value) {
        var buffer = this.buffer;
        buffer.push(value);
        if (buffer.length == this.bufferSize) {
            this.destination.next(buffer);
            this.buffer = [];
        }
    };
    BufferCountSubscriber.prototype._complete = function () {
        var buffer = this.buffer;
        if (buffer.length > 0) {
            this.destination.next(buffer);
        }
        _super.prototype._complete.call(this);
    };
    return BufferCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
var BufferSkipCountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BufferSkipCountSubscriber, _super);
    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {
        var _this = _super.call(this, destination) || this;
        _this.bufferSize = bufferSize;
        _this.startBufferEvery = startBufferEvery;
        _this.buffers = [];
        _this.count = 0;
        return _this;
    }
    BufferSkipCountSubscriber.prototype._next = function (value) {
        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;
        this.count++;
        if (count % startBufferEvery === 0) {
            buffers.push([]);
        }
        for (var i = buffers.length; i--;) {
            var buffer = buffers[i];
            buffer.push(value);
            if (buffer.length === bufferSize) {
                buffers.splice(i, 1);
                this.destination.next(buffer);
            }
        }
    };
    BufferSkipCountSubscriber.prototype._complete = function () {
        var _a = this, buffers = _a.buffers, destination = _a.destination;
        while (buffers.length > 0) {
            var buffer = buffers.shift();
            if (buffer.length > 0) {
                destination.next(buffer);
            }
        }
        _super.prototype._complete.call(this);
    };
    return BufferSkipCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=bufferCount.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/bufferTime.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/bufferTime.js ***!
  \******************************************************************/
/*! exports provided: bufferTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bufferTime", function() { return bufferTime; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/** PURE_IMPORTS_START tslib,_scheduler_async,_Subscriber,_util_isScheduler PURE_IMPORTS_END */




function bufferTime(bufferTimeSpan) {
    var length = arguments.length;
    var scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__["isScheduler"])(arguments[arguments.length - 1])) {
        scheduler = arguments[arguments.length - 1];
        length--;
    }
    var bufferCreationInterval = null;
    if (length >= 2) {
        bufferCreationInterval = arguments[1];
    }
    var maxBufferSize = Number.POSITIVE_INFINITY;
    if (length >= 3) {
        maxBufferSize = arguments[2];
    }
    return function bufferTimeOperatorFunction(source) {
        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));
    };
}
var BufferTimeOperator = /*@__PURE__*/ (function () {
    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
        this.bufferTimeSpan = bufferTimeSpan;
        this.bufferCreationInterval = bufferCreationInterval;
        this.maxBufferSize = maxBufferSize;
        this.scheduler = scheduler;
    }
    BufferTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));
    };
    return BufferTimeOperator;
}());
var Context = /*@__PURE__*/ (function () {
    function Context() {
        this.buffer = [];
    }
    return Context;
}());
var BufferTimeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BufferTimeSubscriber, _super);
    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.bufferTimeSpan = bufferTimeSpan;
        _this.bufferCreationInterval = bufferCreationInterval;
        _this.maxBufferSize = maxBufferSize;
        _this.scheduler = scheduler;
        _this.contexts = [];
        var context = _this.openContext();
        _this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;
        if (_this.timespanOnly) {
            var timeSpanOnlyState = { subscriber: _this, context: context, bufferTimeSpan: bufferTimeSpan };
            _this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
        else {
            var closeState = { subscriber: _this, context: context };
            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: _this, scheduler: scheduler };
            _this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));
            _this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));
        }
        return _this;
    }
    BufferTimeSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        var len = contexts.length;
        var filledBufferContext;
        for (var i = 0; i < len; i++) {
            var context_1 = contexts[i];
            var buffer = context_1.buffer;
            buffer.push(value);
            if (buffer.length == this.maxBufferSize) {
                filledBufferContext = context_1;
            }
        }
        if (filledBufferContext) {
            this.onBufferFull(filledBufferContext);
        }
    };
    BufferTimeSubscriber.prototype._error = function (err) {
        this.contexts.length = 0;
        _super.prototype._error.call(this, err);
    };
    BufferTimeSubscriber.prototype._complete = function () {
        var _a = this, contexts = _a.contexts, destination = _a.destination;
        while (contexts.length > 0) {
            var context_2 = contexts.shift();
            destination.next(context_2.buffer);
        }
        _super.prototype._complete.call(this);
    };
    BufferTimeSubscriber.prototype._unsubscribe = function () {
        this.contexts = null;
    };
    BufferTimeSubscriber.prototype.onBufferFull = function (context) {
        this.closeContext(context);
        var closeAction = context.closeAction;
        closeAction.unsubscribe();
        this.remove(closeAction);
        if (!this.closed && this.timespanOnly) {
            context = this.openContext();
            var bufferTimeSpan = this.bufferTimeSpan;
            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };
            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
    };
    BufferTimeSubscriber.prototype.openContext = function () {
        var context = new Context();
        this.contexts.push(context);
        return context;
    };
    BufferTimeSubscriber.prototype.closeContext = function (context) {
        this.destination.next(context.buffer);
        var contexts = this.contexts;
        var spliceIndex = contexts ? contexts.indexOf(context) : -1;
        if (spliceIndex >= 0) {
            contexts.splice(contexts.indexOf(context), 1);
        }
    };
    return BufferTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_2__["Subscriber"]));
function dispatchBufferTimeSpanOnly(state) {
    var subscriber = state.subscriber;
    var prevContext = state.context;
    if (prevContext) {
        subscriber.closeContext(prevContext);
    }
    if (!subscriber.closed) {
        state.context = subscriber.openContext();
        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);
    }
}
function dispatchBufferCreation(state) {
    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;
    var context = subscriber.openContext();
    var action = this;
    if (!subscriber.closed) {
        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));
        action.schedule(state, bufferCreationInterval);
    }
}
function dispatchBufferClose(arg) {
    var subscriber = arg.subscriber, context = arg.context;
    subscriber.closeContext(context);
}
//# sourceMappingURL=bufferTime.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/bufferToggle.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/bufferToggle.js ***!
  \********************************************************************/
/*! exports provided: bufferToggle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bufferToggle", function() { return bufferToggle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */




function bufferToggle(openings, closingSelector) {
    return function bufferToggleOperatorFunction(source) {
        return source.lift(new BufferToggleOperator(openings, closingSelector));
    };
}
var BufferToggleOperator = /*@__PURE__*/ (function () {
    function BufferToggleOperator(openings, closingSelector) {
        this.openings = openings;
        this.closingSelector = closingSelector;
    }
    BufferToggleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));
    };
    return BufferToggleOperator;
}());
var BufferToggleSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BufferToggleSubscriber, _super);
    function BufferToggleSubscriber(destination, openings, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.openings = openings;
        _this.closingSelector = closingSelector;
        _this.contexts = [];
        _this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(_this, openings));
        return _this;
    }
    BufferToggleSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        var len = contexts.length;
        for (var i = 0; i < len; i++) {
            contexts[i].buffer.push(value);
        }
    };
    BufferToggleSubscriber.prototype._error = function (err) {
        var contexts = this.contexts;
        while (contexts.length > 0) {
            var context_1 = contexts.shift();
            context_1.subscription.unsubscribe();
            context_1.buffer = null;
            context_1.subscription = null;
        }
        this.contexts = null;
        _super.prototype._error.call(this, err);
    };
    BufferToggleSubscriber.prototype._complete = function () {
        var contexts = this.contexts;
        while (contexts.length > 0) {
            var context_2 = contexts.shift();
            this.destination.next(context_2.buffer);
            context_2.subscription.unsubscribe();
            context_2.buffer = null;
            context_2.subscription = null;
        }
        this.contexts = null;
        _super.prototype._complete.call(this);
    };
    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);
    };
    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {
        this.closeBuffer(innerSub.context);
    };
    BufferToggleSubscriber.prototype.openBuffer = function (value) {
        try {
            var closingSelector = this.closingSelector;
            var closingNotifier = closingSelector.call(this, value);
            if (closingNotifier) {
                this.trySubscribe(closingNotifier);
            }
        }
        catch (err) {
            this._error(err);
        }
    };
    BufferToggleSubscriber.prototype.closeBuffer = function (context) {
        var contexts = this.contexts;
        if (contexts && context) {
            var buffer = context.buffer, subscription = context.subscription;
            this.destination.next(buffer);
            contexts.splice(contexts.indexOf(context), 1);
            this.remove(subscription);
            subscription.unsubscribe();
        }
    };
    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {
        var contexts = this.contexts;
        var buffer = [];
        var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
        var context = { buffer: buffer, subscription: subscription };
        contexts.push(context);
        var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(this, closingNotifier, context);
        if (!innerSubscription || innerSubscription.closed) {
            this.closeBuffer(context);
        }
        else {
            innerSubscription.context = context;
            this.add(innerSubscription);
            subscription.add(innerSubscription);
        }
    };
    return BufferToggleSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]));
//# sourceMappingURL=bufferToggle.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/bufferWhen.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/bufferWhen.js ***!
  \******************************************************************/
/*! exports provided: bufferWhen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bufferWhen", function() { return bufferWhen; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_Subscription,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function bufferWhen(closingSelector) {
    return function (source) {
        return source.lift(new BufferWhenOperator(closingSelector));
    };
}
var BufferWhenOperator = /*@__PURE__*/ (function () {
    function BufferWhenOperator(closingSelector) {
        this.closingSelector = closingSelector;
    }
    BufferWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));
    };
    return BufferWhenOperator;
}());
var BufferWhenSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BufferWhenSubscriber, _super);
    function BufferWhenSubscriber(destination, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.closingSelector = closingSelector;
        _this.subscribing = false;
        _this.openBuffer();
        return _this;
    }
    BufferWhenSubscriber.prototype._next = function (value) {
        this.buffer.push(value);
    };
    BufferWhenSubscriber.prototype._complete = function () {
        var buffer = this.buffer;
        if (buffer) {
            this.destination.next(buffer);
        }
        _super.prototype._complete.call(this);
    };
    BufferWhenSubscriber.prototype._unsubscribe = function () {
        this.buffer = null;
        this.subscribing = false;
    };
    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openBuffer();
    };
    BufferWhenSubscriber.prototype.notifyComplete = function () {
        if (this.subscribing) {
            this.complete();
        }
        else {
            this.openBuffer();
        }
    };
    BufferWhenSubscriber.prototype.openBuffer = function () {
        var closingSubscription = this.closingSubscription;
        if (closingSubscription) {
            this.remove(closingSubscription);
            closingSubscription.unsubscribe();
        }
        var buffer = this.buffer;
        if (this.buffer) {
            this.destination.next(buffer);
        }
        this.buffer = [];
        var closingNotifier;
        try {
            var closingSelector = this.closingSelector;
            closingNotifier = closingSelector();
        }
        catch (err) {
            return this.error(err);
        }
        closingSubscription = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
        this.closingSubscription = closingSubscription;
        this.add(closingSubscription);
        this.subscribing = true;
        closingSubscription.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__["subscribeToResult"])(this, closingNotifier));
        this.subscribing = false;
    };
    return BufferWhenSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__["OuterSubscriber"]));
//# sourceMappingURL=bufferWhen.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/catchError.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/catchError.js ***!
  \******************************************************************/
/*! exports provided: catchError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "catchError", function() { return catchError; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../InnerSubscriber */ "./node_modules/rxjs/_esm5/internal/InnerSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function catchError(selector) {
    return function catchErrorOperatorFunction(source) {
        var operator = new CatchOperator(selector);
        var caught = source.lift(operator);
        return (operator.caught = caught);
    };
}
var CatchOperator = /*@__PURE__*/ (function () {
    function CatchOperator(selector) {
        this.selector = selector;
    }
    CatchOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));
    };
    return CatchOperator;
}());
var CatchSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](CatchSubscriber, _super);
    function CatchSubscriber(destination, selector, caught) {
        var _this = _super.call(this, destination) || this;
        _this.selector = selector;
        _this.caught = caught;
        return _this;
    }
    CatchSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var result = void 0;
            try {
                result = this.selector(err, this.caught);
            }
            catch (err2) {
                _super.prototype.error.call(this, err2);
                return;
            }
            this._unsubscribeAndRecycle();
            var innerSubscriber = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_2__["InnerSubscriber"](this, undefined, undefined);
            this.add(innerSubscriber);
            var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__["subscribeToResult"])(this, result, undefined, undefined, innerSubscriber);
            if (innerSubscription !== innerSubscriber) {
                this.add(innerSubscription);
            }
        }
    };
    return CatchSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]));
//# sourceMappingURL=catchError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/combineAll.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/combineAll.js ***!
  \******************************************************************/
/*! exports provided: combineAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineAll", function() { return combineAll; });
/* harmony import */ var _observable_combineLatest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/combineLatest */ "./node_modules/rxjs/_esm5/internal/observable/combineLatest.js");
/** PURE_IMPORTS_START _observable_combineLatest PURE_IMPORTS_END */

function combineAll(project) {
    return function (source) { return source.lift(new _observable_combineLatest__WEBPACK_IMPORTED_MODULE_0__["CombineLatestOperator"](project)); };
}
//# sourceMappingURL=combineAll.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/combineLatest.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/combineLatest.js ***!
  \*********************************************************************/
/*! exports provided: combineLatest */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return combineLatest; });
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _observable_combineLatest__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../observable/combineLatest */ "./node_modules/rxjs/_esm5/internal/observable/combineLatest.js");
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/** PURE_IMPORTS_START _util_isArray,_observable_combineLatest,_observable_from PURE_IMPORTS_END */



var none = {};
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var project = null;
    if (typeof observables[observables.length - 1] === 'function') {
        project = observables.pop();
    }
    if (observables.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_0__["isArray"])(observables[0])) {
        observables = observables[0].slice();
    }
    return function (source) { return source.lift.call(Object(_observable_from__WEBPACK_IMPORTED_MODULE_2__["from"])([source].concat(observables)), new _observable_combineLatest__WEBPACK_IMPORTED_MODULE_1__["CombineLatestOperator"](project)); };
}
//# sourceMappingURL=combineLatest.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/concat.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/concat.js ***!
  \**************************************************************/
/*! exports provided: concat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return concat; });
/* harmony import */ var _observable_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/concat */ "./node_modules/rxjs/_esm5/internal/observable/concat.js");
/** PURE_IMPORTS_START _observable_concat PURE_IMPORTS_END */

function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function (source) { return source.lift.call(_observable_concat__WEBPACK_IMPORTED_MODULE_0__["concat"].apply(void 0, [source].concat(observables))); };
}
//# sourceMappingURL=concat.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/concatAll.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/concatAll.js ***!
  \*****************************************************************/
/*! exports provided: concatAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concatAll", function() { return concatAll; });
/* harmony import */ var _mergeAll__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeAll */ "./node_modules/rxjs/_esm5/internal/operators/mergeAll.js");
/** PURE_IMPORTS_START _mergeAll PURE_IMPORTS_END */

function concatAll() {
    return Object(_mergeAll__WEBPACK_IMPORTED_MODULE_0__["mergeAll"])(1);
}
//# sourceMappingURL=concatAll.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/concatMap.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/concatMap.js ***!
  \*****************************************************************/
/*! exports provided: concatMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concatMap", function() { return concatMap; });
/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeMap */ "./node_modules/rxjs/_esm5/internal/operators/mergeMap.js");
/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */

function concatMap(project, resultSelector) {
    return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])(project, resultSelector, 1);
}
//# sourceMappingURL=concatMap.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/concatMapTo.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/concatMapTo.js ***!
  \*******************************************************************/
/*! exports provided: concatMapTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concatMapTo", function() { return concatMapTo; });
/* harmony import */ var _concatMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./concatMap */ "./node_modules/rxjs/_esm5/internal/operators/concatMap.js");
/** PURE_IMPORTS_START _concatMap PURE_IMPORTS_END */

function concatMapTo(innerObservable, resultSelector) {
    return Object(_concatMap__WEBPACK_IMPORTED_MODULE_0__["concatMap"])(function () { return innerObservable; }, resultSelector);
}
//# sourceMappingURL=concatMapTo.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/count.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/count.js ***!
  \*************************************************************/
/*! exports provided: count */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "count", function() { return count; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function count(predicate) {
    return function (source) { return source.lift(new CountOperator(predicate, source)); };
}
var CountOperator = /*@__PURE__*/ (function () {
    function CountOperator(predicate, source) {
        this.predicate = predicate;
        this.source = source;
    }
    CountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));
    };
    return CountOperator;
}());
var CountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](CountSubscriber, _super);
    function CountSubscriber(destination, predicate, source) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.source = source;
        _this.count = 0;
        _this.index = 0;
        return _this;
    }
    CountSubscriber.prototype._next = function (value) {
        if (this.predicate) {
            this._tryPredicate(value);
        }
        else {
            this.count++;
        }
    };
    CountSubscriber.prototype._tryPredicate = function (value) {
        var result;
        try {
            result = this.predicate(value, this.index++, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.count++;
        }
    };
    CountSubscriber.prototype._complete = function () {
        this.destination.next(this.count);
        this.destination.complete();
    };
    return CountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=count.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/debounce.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/debounce.js ***!
  \****************************************************************/
/*! exports provided: debounce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return debounce; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function debounce(durationSelector) {
    return function (source) { return source.lift(new DebounceOperator(durationSelector)); };
}
var DebounceOperator = /*@__PURE__*/ (function () {
    function DebounceOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    DebounceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));
    };
    return DebounceOperator;
}());
var DebounceSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DebounceSubscriber, _super);
    function DebounceSubscriber(destination, durationSelector) {
        var _this = _super.call(this, destination) || this;
        _this.durationSelector = durationSelector;
        _this.hasValue = false;
        _this.durationSubscription = null;
        return _this;
    }
    DebounceSubscriber.prototype._next = function (value) {
        try {
            var result = this.durationSelector.call(this, value);
            if (result) {
                this._tryNext(value, result);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    DebounceSubscriber.prototype._complete = function () {
        this.emitValue();
        this.destination.complete();
    };
    DebounceSubscriber.prototype._tryNext = function (value, duration) {
        var subscription = this.durationSubscription;
        this.value = value;
        this.hasValue = true;
        if (subscription) {
            subscription.unsubscribe();
            this.remove(subscription);
        }
        subscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(this, duration);
        if (subscription && !subscription.closed) {
            this.add(this.durationSubscription = subscription);
        }
    };
    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.emitValue();
    };
    DebounceSubscriber.prototype.notifyComplete = function () {
        this.emitValue();
    };
    DebounceSubscriber.prototype.emitValue = function () {
        if (this.hasValue) {
            var value = this.value;
            var subscription = this.durationSubscription;
            if (subscription) {
                this.durationSubscription = null;
                subscription.unsubscribe();
                this.remove(subscription);
            }
            this.value = null;
            this.hasValue = false;
            _super.prototype._next.call(this, value);
        }
    };
    return DebounceSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]));
//# sourceMappingURL=debounce.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/debounceTime.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/debounceTime.js ***!
  \********************************************************************/
/*! exports provided: debounceTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debounceTime", function() { return debounceTime; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */



function debounceTime(dueTime, scheduler) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_2__["async"];
    }
    return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };
}
var DebounceTimeOperator = /*@__PURE__*/ (function () {
    function DebounceTimeOperator(dueTime, scheduler) {
        this.dueTime = dueTime;
        this.scheduler = scheduler;
    }
    DebounceTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));
    };
    return DebounceTimeOperator;
}());
var DebounceTimeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DebounceTimeSubscriber, _super);
    function DebounceTimeSubscriber(destination, dueTime, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.dueTime = dueTime;
        _this.scheduler = scheduler;
        _this.debouncedSubscription = null;
        _this.lastValue = null;
        _this.hasValue = false;
        return _this;
    }
    DebounceTimeSubscriber.prototype._next = function (value) {
        this.clearDebounce();
        this.lastValue = value;
        this.hasValue = true;
        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));
    };
    DebounceTimeSubscriber.prototype._complete = function () {
        this.debouncedNext();
        this.destination.complete();
    };
    DebounceTimeSubscriber.prototype.debouncedNext = function () {
        this.clearDebounce();
        if (this.hasValue) {
            var lastValue = this.lastValue;
            this.lastValue = null;
            this.hasValue = false;
            this.destination.next(lastValue);
        }
    };
    DebounceTimeSubscriber.prototype.clearDebounce = function () {
        var debouncedSubscription = this.debouncedSubscription;
        if (debouncedSubscription !== null) {
            this.remove(debouncedSubscription);
            debouncedSubscription.unsubscribe();
            this.debouncedSubscription = null;
        }
    };
    return DebounceTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
function dispatchNext(subscriber) {
    subscriber.debouncedNext();
}
//# sourceMappingURL=debounceTime.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js ***!
  \**********************************************************************/
/*! exports provided: defaultIfEmpty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultIfEmpty", function() { return defaultIfEmpty; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function defaultIfEmpty(defaultValue) {
    if (defaultValue === void 0) {
        defaultValue = null;
    }
    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };
}
var DefaultIfEmptyOperator = /*@__PURE__*/ (function () {
    function DefaultIfEmptyOperator(defaultValue) {
        this.defaultValue = defaultValue;
    }
    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));
    };
    return DefaultIfEmptyOperator;
}());
var DefaultIfEmptySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DefaultIfEmptySubscriber, _super);
    function DefaultIfEmptySubscriber(destination, defaultValue) {
        var _this = _super.call(this, destination) || this;
        _this.defaultValue = defaultValue;
        _this.isEmpty = true;
        return _this;
    }
    DefaultIfEmptySubscriber.prototype._next = function (value) {
        this.isEmpty = false;
        this.destination.next(value);
    };
    DefaultIfEmptySubscriber.prototype._complete = function () {
        if (this.isEmpty) {
            this.destination.next(this.defaultValue);
        }
        this.destination.complete();
    };
    return DefaultIfEmptySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=defaultIfEmpty.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/delay.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/delay.js ***!
  \*************************************************************/
/*! exports provided: delay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "delay", function() { return delay; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _util_isDate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isDate */ "./node_modules/rxjs/_esm5/internal/util/isDate.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Notification__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Notification */ "./node_modules/rxjs/_esm5/internal/Notification.js");
/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */





function delay(delay, scheduler) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
    }
    var absoluteDelay = Object(_util_isDate__WEBPACK_IMPORTED_MODULE_2__["isDate"])(delay);
    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);
    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };
}
var DelayOperator = /*@__PURE__*/ (function () {
    function DelayOperator(delay, scheduler) {
        this.delay = delay;
        this.scheduler = scheduler;
    }
    DelayOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));
    };
    return DelayOperator;
}());
var DelaySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DelaySubscriber, _super);
    function DelaySubscriber(destination, delay, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.delay = delay;
        _this.scheduler = scheduler;
        _this.queue = [];
        _this.active = false;
        _this.errored = false;
        return _this;
    }
    DelaySubscriber.dispatch = function (state) {
        var source = state.source;
        var queue = source.queue;
        var scheduler = state.scheduler;
        var destination = state.destination;
        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {
            queue.shift().notification.observe(destination);
        }
        if (queue.length > 0) {
            var delay_1 = Math.max(0, queue[0].time - scheduler.now());
            this.schedule(state, delay_1);
        }
        else {
            this.unsubscribe();
            source.active = false;
        }
    };
    DelaySubscriber.prototype._schedule = function (scheduler) {
        this.active = true;
        var destination = this.destination;
        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {
            source: this, destination: this.destination, scheduler: scheduler
        }));
    };
    DelaySubscriber.prototype.scheduleNotification = function (notification) {
        if (this.errored === true) {
            return;
        }
        var scheduler = this.scheduler;
        var message = new DelayMessage(scheduler.now() + this.delay, notification);
        this.queue.push(message);
        if (this.active === false) {
            this._schedule(scheduler);
        }
    };
    DelaySubscriber.prototype._next = function (value) {
        this.scheduleNotification(_Notification__WEBPACK_IMPORTED_MODULE_4__["Notification"].createNext(value));
    };
    DelaySubscriber.prototype._error = function (err) {
        this.errored = true;
        this.queue = [];
        this.destination.error(err);
        this.unsubscribe();
    };
    DelaySubscriber.prototype._complete = function () {
        this.scheduleNotification(_Notification__WEBPACK_IMPORTED_MODULE_4__["Notification"].createComplete());
        this.unsubscribe();
    };
    return DelaySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__["Subscriber"]));
var DelayMessage = /*@__PURE__*/ (function () {
    function DelayMessage(time, notification) {
        this.time = time;
        this.notification = notification;
    }
    return DelayMessage;
}());
//# sourceMappingURL=delay.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/delayWhen.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/delayWhen.js ***!
  \*****************************************************************/
/*! exports provided: delayWhen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "delayWhen", function() { return delayWhen; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function delayWhen(delayDurationSelector, subscriptionDelay) {
    if (subscriptionDelay) {
        return function (source) {
            return new SubscriptionDelayObservable(source, subscriptionDelay)
                .lift(new DelayWhenOperator(delayDurationSelector));
        };
    }
    return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };
}
var DelayWhenOperator = /*@__PURE__*/ (function () {
    function DelayWhenOperator(delayDurationSelector) {
        this.delayDurationSelector = delayDurationSelector;
    }
    DelayWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));
    };
    return DelayWhenOperator;
}());
var DelayWhenSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DelayWhenSubscriber, _super);
    function DelayWhenSubscriber(destination, delayDurationSelector) {
        var _this = _super.call(this, destination) || this;
        _this.delayDurationSelector = delayDurationSelector;
        _this.completed = false;
        _this.delayNotifierSubscriptions = [];
        _this.index = 0;
        return _this;
    }
    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(outerValue);
        this.removeSubscription(innerSub);
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {
        var value = this.removeSubscription(innerSub);
        if (value) {
            this.destination.next(value);
        }
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype._next = function (value) {
        var index = this.index++;
        try {
            var delayNotifier = this.delayDurationSelector(value, index);
            if (delayNotifier) {
                this.tryDelay(delayNotifier, value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    DelayWhenSubscriber.prototype._complete = function () {
        this.completed = true;
        this.tryComplete();
        this.unsubscribe();
    };
    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {
        subscription.unsubscribe();
        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);
        if (subscriptionIdx !== -1) {
            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);
        }
        return subscription.outerValue;
    };
    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {
        var notifierSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(this, delayNotifier, value);
        if (notifierSubscription && !notifierSubscription.closed) {
            var destination = this.destination;
            destination.add(notifierSubscription);
            this.delayNotifierSubscriptions.push(notifierSubscription);
        }
    };
    DelayWhenSubscriber.prototype.tryComplete = function () {
        if (this.completed && this.delayNotifierSubscriptions.length === 0) {
            this.destination.complete();
        }
    };
    return DelayWhenSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]));
var SubscriptionDelayObservable = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SubscriptionDelayObservable, _super);
    function SubscriptionDelayObservable(source, subscriptionDelay) {
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.subscriptionDelay = subscriptionDelay;
        return _this;
    }
    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {
        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));
    };
    return SubscriptionDelayObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_2__["Observable"]));
var SubscriptionDelaySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SubscriptionDelaySubscriber, _super);
    function SubscriptionDelaySubscriber(parent, source) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        _this.source = source;
        _this.sourceSubscribed = false;
        return _this;
    }
    SubscriptionDelaySubscriber.prototype._next = function (unused) {
        this.subscribeToSource();
    };
    SubscriptionDelaySubscriber.prototype._error = function (err) {
        this.unsubscribe();
        this.parent.error(err);
    };
    SubscriptionDelaySubscriber.prototype._complete = function () {
        this.unsubscribe();
        this.subscribeToSource();
    };
    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {
        if (!this.sourceSubscribed) {
            this.sourceSubscribed = true;
            this.unsubscribe();
            this.source.subscribe(this.parent);
        }
    };
    return SubscriptionDelaySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=delayWhen.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/dematerialize.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/dematerialize.js ***!
  \*********************************************************************/
/*! exports provided: dematerialize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dematerialize", function() { return dematerialize; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function dematerialize() {
    return function dematerializeOperatorFunction(source) {
        return source.lift(new DeMaterializeOperator());
    };
}
var DeMaterializeOperator = /*@__PURE__*/ (function () {
    function DeMaterializeOperator() {
    }
    DeMaterializeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DeMaterializeSubscriber(subscriber));
    };
    return DeMaterializeOperator;
}());
var DeMaterializeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DeMaterializeSubscriber, _super);
    function DeMaterializeSubscriber(destination) {
        return _super.call(this, destination) || this;
    }
    DeMaterializeSubscriber.prototype._next = function (value) {
        value.observe(this.destination);
    };
    return DeMaterializeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=dematerialize.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/distinct.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/distinct.js ***!
  \****************************************************************/
/*! exports provided: distinct, DistinctSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distinct", function() { return distinct; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DistinctSubscriber", function() { return DistinctSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function distinct(keySelector, flushes) {
    return function (source) { return source.lift(new DistinctOperator(keySelector, flushes)); };
}
var DistinctOperator = /*@__PURE__*/ (function () {
    function DistinctOperator(keySelector, flushes) {
        this.keySelector = keySelector;
        this.flushes = flushes;
    }
    DistinctOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));
    };
    return DistinctOperator;
}());
var DistinctSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DistinctSubscriber, _super);
    function DistinctSubscriber(destination, keySelector, flushes) {
        var _this = _super.call(this, destination) || this;
        _this.keySelector = keySelector;
        _this.values = new Set();
        if (flushes) {
            _this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(_this, flushes));
        }
        return _this;
    }
    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values.clear();
    };
    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    DistinctSubscriber.prototype._next = function (value) {
        if (this.keySelector) {
            this._useKeySelector(value);
        }
        else {
            this._finalizeNext(value, value);
        }
    };
    DistinctSubscriber.prototype._useKeySelector = function (value) {
        var key;
        var destination = this.destination;
        try {
            key = this.keySelector(value);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        this._finalizeNext(key, value);
    };
    DistinctSubscriber.prototype._finalizeNext = function (key, value) {
        var values = this.values;
        if (!values.has(key)) {
            values.add(key);
            this.destination.next(value);
        }
    };
    return DistinctSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]));

//# sourceMappingURL=distinct.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js":
/*!****************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js ***!
  \****************************************************************************/
/*! exports provided: distinctUntilChanged */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distinctUntilChanged", function() { return distinctUntilChanged; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function distinctUntilChanged(compare, keySelector) {
    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };
}
var DistinctUntilChangedOperator = /*@__PURE__*/ (function () {
    function DistinctUntilChangedOperator(compare, keySelector) {
        this.compare = compare;
        this.keySelector = keySelector;
    }
    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));
    };
    return DistinctUntilChangedOperator;
}());
var DistinctUntilChangedSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DistinctUntilChangedSubscriber, _super);
    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {
        var _this = _super.call(this, destination) || this;
        _this.keySelector = keySelector;
        _this.hasKey = false;
        if (typeof compare === 'function') {
            _this.compare = compare;
        }
        return _this;
    }
    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {
        return x === y;
    };
    DistinctUntilChangedSubscriber.prototype._next = function (value) {
        var key;
        try {
            var keySelector = this.keySelector;
            key = keySelector ? keySelector(value) : value;
        }
        catch (err) {
            return this.destination.error(err);
        }
        var result = false;
        if (this.hasKey) {
            try {
                var compare = this.compare;
                result = compare(this.key, key);
            }
            catch (err) {
                return this.destination.error(err);
            }
        }
        else {
            this.hasKey = true;
        }
        if (!result) {
            this.key = key;
            this.destination.next(value);
        }
    };
    return DistinctUntilChangedSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=distinctUntilChanged.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/distinctUntilKeyChanged.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/distinctUntilKeyChanged.js ***!
  \*******************************************************************************/
/*! exports provided: distinctUntilKeyChanged */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distinctUntilKeyChanged", function() { return distinctUntilKeyChanged; });
/* harmony import */ var _distinctUntilChanged__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./distinctUntilChanged */ "./node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js");
/** PURE_IMPORTS_START _distinctUntilChanged PURE_IMPORTS_END */

function distinctUntilKeyChanged(key, compare) {
    return Object(_distinctUntilChanged__WEBPACK_IMPORTED_MODULE_0__["distinctUntilChanged"])(function (x, y) { return compare ? compare(x[key], y[key]) : x[key] === y[key]; });
}
//# sourceMappingURL=distinctUntilKeyChanged.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/elementAt.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/elementAt.js ***!
  \*****************************************************************/
/*! exports provided: elementAt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elementAt", function() { return elementAt; });
/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/ArgumentOutOfRangeError */ "./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter */ "./node_modules/rxjs/_esm5/internal/operators/filter.js");
/* harmony import */ var _throwIfEmpty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./throwIfEmpty */ "./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js");
/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./defaultIfEmpty */ "./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js");
/* harmony import */ var _take__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./take */ "./node_modules/rxjs/_esm5/internal/operators/take.js");
/** PURE_IMPORTS_START _util_ArgumentOutOfRangeError,_filter,_throwIfEmpty,_defaultIfEmpty,_take PURE_IMPORTS_END */





function elementAt(index, defaultValue) {
    if (index < 0) {
        throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_0__["ArgumentOutOfRangeError"]();
    }
    var hasDefaultValue = arguments.length >= 2;
    return function (source) {
        return source.pipe(Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(function (v, i) { return i === index; }), Object(_take__WEBPACK_IMPORTED_MODULE_4__["take"])(1), hasDefaultValue
            ? Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__["defaultIfEmpty"])(defaultValue)
            : Object(_throwIfEmpty__WEBPACK_IMPORTED_MODULE_2__["throwIfEmpty"])(function () { return new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_0__["ArgumentOutOfRangeError"](); }));
    };
}
//# sourceMappingURL=elementAt.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/endWith.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/endWith.js ***!
  \***************************************************************/
/*! exports provided: endWith */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "endWith", function() { return endWith; });
/* harmony import */ var _observable_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/concat */ "./node_modules/rxjs/_esm5/internal/observable/concat.js");
/* harmony import */ var _observable_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../observable/of */ "./node_modules/rxjs/_esm5/internal/observable/of.js");
/** PURE_IMPORTS_START _observable_concat,_observable_of PURE_IMPORTS_END */


function endWith() {
    var array = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        array[_i] = arguments[_i];
    }
    return function (source) { return Object(_observable_concat__WEBPACK_IMPORTED_MODULE_0__["concat"])(source, _observable_of__WEBPACK_IMPORTED_MODULE_1__["of"].apply(void 0, array)); };
}
//# sourceMappingURL=endWith.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/every.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/every.js ***!
  \*************************************************************/
/*! exports provided: every */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "every", function() { return every; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function every(predicate, thisArg) {
    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };
}
var EveryOperator = /*@__PURE__*/ (function () {
    function EveryOperator(predicate, thisArg, source) {
        this.predicate = predicate;
        this.thisArg = thisArg;
        this.source = source;
    }
    EveryOperator.prototype.call = function (observer, source) {
        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));
    };
    return EveryOperator;
}());
var EverySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](EverySubscriber, _super);
    function EverySubscriber(destination, predicate, thisArg, source) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.thisArg = thisArg;
        _this.source = source;
        _this.index = 0;
        _this.thisArg = thisArg || _this;
        return _this;
    }
    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {
        this.destination.next(everyValueMatch);
        this.destination.complete();
    };
    EverySubscriber.prototype._next = function (value) {
        var result = false;
        try {
            result = this.predicate.call(this.thisArg, value, this.index++, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (!result) {
            this.notifyComplete(false);
        }
    };
    EverySubscriber.prototype._complete = function () {
        this.notifyComplete(true);
    };
    return EverySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=every.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/exhaust.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/exhaust.js ***!
  \***************************************************************/
/*! exports provided: exhaust */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exhaust", function() { return exhaust; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function exhaust() {
    return function (source) { return source.lift(new SwitchFirstOperator()); };
}
var SwitchFirstOperator = /*@__PURE__*/ (function () {
    function SwitchFirstOperator() {
    }
    SwitchFirstOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchFirstSubscriber(subscriber));
    };
    return SwitchFirstOperator;
}());
var SwitchFirstSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SwitchFirstSubscriber, _super);
    function SwitchFirstSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.hasCompleted = false;
        _this.hasSubscription = false;
        return _this;
    }
    SwitchFirstSubscriber.prototype._next = function (value) {
        if (!this.hasSubscription) {
            this.hasSubscription = true;
            this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(this, value));
        }
    };
    SwitchFirstSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (!this.hasSubscription) {
            this.destination.complete();
        }
    };
    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.hasSubscription = false;
        if (this.hasCompleted) {
            this.destination.complete();
        }
    };
    return SwitchFirstSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]));
//# sourceMappingURL=exhaust.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/exhaustMap.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/exhaustMap.js ***!
  \******************************************************************/
/*! exports provided: exhaustMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exhaustMap", function() { return exhaustMap; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../InnerSubscriber */ "./node_modules/rxjs/_esm5/internal/InnerSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../observable/from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */






function exhaustMap(project, resultSelector) {
    if (resultSelector) {
        return function (source) { return source.pipe(exhaustMap(function (a, i) { return Object(_observable_from__WEBPACK_IMPORTED_MODULE_5__["from"])(project(a, i)).pipe(Object(_map__WEBPACK_IMPORTED_MODULE_4__["map"])(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };
    }
    return function (source) {
        return source.lift(new ExhaustMapOperator(project));
    };
}
var ExhaustMapOperator = /*@__PURE__*/ (function () {
    function ExhaustMapOperator(project) {
        this.project = project;
    }
    ExhaustMapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));
    };
    return ExhaustMapOperator;
}());
var ExhaustMapSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ExhaustMapSubscriber, _super);
    function ExhaustMapSubscriber(destination, project) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.hasSubscription = false;
        _this.hasCompleted = false;
        _this.index = 0;
        return _this;
    }
    ExhaustMapSubscriber.prototype._next = function (value) {
        if (!this.hasSubscription) {
            this.tryNext(value);
        }
    };
    ExhaustMapSubscriber.prototype.tryNext = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.hasSubscription = true;
        this._innerSub(result, value, index);
    };
    ExhaustMapSubscriber.prototype._innerSub = function (result, value, index) {
        var innerSubscriber = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_2__["InnerSubscriber"](this, value, index);
        var destination = this.destination;
        destination.add(innerSubscriber);
        var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__["subscribeToResult"])(this, result, undefined, undefined, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            destination.add(innerSubscription);
        }
    };
    ExhaustMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (!this.hasSubscription) {
            this.destination.complete();
        }
        this.unsubscribe();
    };
    ExhaustMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    ExhaustMapSubscriber.prototype.notifyError = function (err) {
        this.destination.error(err);
    };
    ExhaustMapSubscriber.prototype.notifyComplete = function (innerSub) {
        var destination = this.destination;
        destination.remove(innerSub);
        this.hasSubscription = false;
        if (this.hasCompleted) {
            this.destination.complete();
        }
    };
    return ExhaustMapSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]));
//# sourceMappingURL=exhaustMap.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/expand.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/expand.js ***!
  \**************************************************************/
/*! exports provided: expand, ExpandOperator, ExpandSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expand", function() { return expand; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpandOperator", function() { return ExpandOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpandSubscriber", function() { return ExpandSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function expand(project, concurrent, scheduler) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    if (scheduler === void 0) {
        scheduler = undefined;
    }
    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;
    return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };
}
var ExpandOperator = /*@__PURE__*/ (function () {
    function ExpandOperator(project, concurrent, scheduler) {
        this.project = project;
        this.concurrent = concurrent;
        this.scheduler = scheduler;
    }
    ExpandOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));
    };
    return ExpandOperator;
}());

var ExpandSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ExpandSubscriber, _super);
    function ExpandSubscriber(destination, project, concurrent, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.concurrent = concurrent;
        _this.scheduler = scheduler;
        _this.index = 0;
        _this.active = 0;
        _this.hasCompleted = false;
        if (concurrent < Number.POSITIVE_INFINITY) {
            _this.buffer = [];
        }
        return _this;
    }
    ExpandSubscriber.dispatch = function (arg) {
        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;
        subscriber.subscribeToProjection(result, value, index);
    };
    ExpandSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        if (destination.closed) {
            this._complete();
            return;
        }
        var index = this.index++;
        if (this.active < this.concurrent) {
            destination.next(value);
            try {
                var project = this.project;
                var result = project(value, index);
                if (!this.scheduler) {
                    this.subscribeToProjection(result, value, index);
                }
                else {
                    var state = { subscriber: this, result: result, value: value, index: index };
                    var destination_1 = this.destination;
                    destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));
                }
            }
            catch (e) {
                destination.error(e);
            }
        }
        else {
            this.buffer.push(value);
        }
    };
    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {
        this.active++;
        var destination = this.destination;
        destination.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(this, result, value, index));
    };
    ExpandSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
        this.unsubscribe();
    };
    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this._next(innerValue);
    };
    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        var destination = this.destination;
        destination.remove(innerSub);
        this.active--;
        if (buffer && buffer.length > 0) {
            this._next(buffer.shift());
        }
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
    };
    return ExpandSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]));

//# sourceMappingURL=expand.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/filter.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/filter.js ***!
  \**************************************************************/
/*! exports provided: filter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return filter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function filter(predicate, thisArg) {
    return function filterOperatorFunction(source) {
        return source.lift(new FilterOperator(predicate, thisArg));
    };
}
var FilterOperator = /*@__PURE__*/ (function () {
    function FilterOperator(predicate, thisArg) {
        this.predicate = predicate;
        this.thisArg = thisArg;
    }
    FilterOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));
    };
    return FilterOperator;
}());
var FilterSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](FilterSubscriber, _super);
    function FilterSubscriber(destination, predicate, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.thisArg = thisArg;
        _this.count = 0;
        return _this;
    }
    FilterSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.predicate.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.destination.next(value);
        }
    };
    return FilterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=filter.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/finalize.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/finalize.js ***!
  \****************************************************************/
/*! exports provided: finalize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "finalize", function() { return finalize; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription PURE_IMPORTS_END */



function finalize(callback) {
    return function (source) { return source.lift(new FinallyOperator(callback)); };
}
var FinallyOperator = /*@__PURE__*/ (function () {
    function FinallyOperator(callback) {
        this.callback = callback;
    }
    FinallyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new FinallySubscriber(subscriber, this.callback));
    };
    return FinallyOperator;
}());
var FinallySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](FinallySubscriber, _super);
    function FinallySubscriber(destination, callback) {
        var _this = _super.call(this, destination) || this;
        _this.add(new _Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"](callback));
        return _this;
    }
    return FinallySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=finalize.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/find.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/find.js ***!
  \************************************************************/
/*! exports provided: find, FindValueOperator, FindValueSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "find", function() { return find; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FindValueOperator", function() { return FindValueOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FindValueSubscriber", function() { return FindValueSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function find(predicate, thisArg) {
    if (typeof predicate !== 'function') {
        throw new TypeError('predicate is not a function');
    }
    return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };
}
var FindValueOperator = /*@__PURE__*/ (function () {
    function FindValueOperator(predicate, source, yieldIndex, thisArg) {
        this.predicate = predicate;
        this.source = source;
        this.yieldIndex = yieldIndex;
        this.thisArg = thisArg;
    }
    FindValueOperator.prototype.call = function (observer, source) {
        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));
    };
    return FindValueOperator;
}());

var FindValueSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](FindValueSubscriber, _super);
    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.source = source;
        _this.yieldIndex = yieldIndex;
        _this.thisArg = thisArg;
        _this.index = 0;
        return _this;
    }
    FindValueSubscriber.prototype.notifyComplete = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
        this.unsubscribe();
    };
    FindValueSubscriber.prototype._next = function (value) {
        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;
        var index = this.index++;
        try {
            var result = predicate.call(thisArg || this, value, index, this.source);
            if (result) {
                this.notifyComplete(this.yieldIndex ? index : value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    FindValueSubscriber.prototype._complete = function () {
        this.notifyComplete(this.yieldIndex ? -1 : undefined);
    };
    return FindValueSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

//# sourceMappingURL=find.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/findIndex.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/findIndex.js ***!
  \*****************************************************************/
/*! exports provided: findIndex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findIndex", function() { return findIndex; });
/* harmony import */ var _operators_find__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operators/find */ "./node_modules/rxjs/_esm5/internal/operators/find.js");
/** PURE_IMPORTS_START _operators_find PURE_IMPORTS_END */

function findIndex(predicate, thisArg) {
    return function (source) { return source.lift(new _operators_find__WEBPACK_IMPORTED_MODULE_0__["FindValueOperator"](predicate, source, true, thisArg)); };
}
//# sourceMappingURL=findIndex.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/first.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/first.js ***!
  \*************************************************************/
/*! exports provided: first */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "first", function() { return first; });
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/EmptyError */ "./node_modules/rxjs/_esm5/internal/util/EmptyError.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter */ "./node_modules/rxjs/_esm5/internal/operators/filter.js");
/* harmony import */ var _take__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./take */ "./node_modules/rxjs/_esm5/internal/operators/take.js");
/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./defaultIfEmpty */ "./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js");
/* harmony import */ var _throwIfEmpty__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./throwIfEmpty */ "./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js");
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/identity */ "./node_modules/rxjs/_esm5/internal/util/identity.js");
/** PURE_IMPORTS_START _util_EmptyError,_filter,_take,_defaultIfEmpty,_throwIfEmpty,_util_identity PURE_IMPORTS_END */






function first(predicate, defaultValue) {
    var hasDefaultValue = arguments.length >= 2;
    return function (source) { return source.pipe(predicate ? Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(function (v, i) { return predicate(v, i, source); }) : _util_identity__WEBPACK_IMPORTED_MODULE_5__["identity"], Object(_take__WEBPACK_IMPORTED_MODULE_2__["take"])(1), hasDefaultValue ? Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__["defaultIfEmpty"])(defaultValue) : Object(_throwIfEmpty__WEBPACK_IMPORTED_MODULE_4__["throwIfEmpty"])(function () { return new _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__["EmptyError"](); })); };
}
//# sourceMappingURL=first.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/groupBy.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/groupBy.js ***!
  \***************************************************************/
/*! exports provided: groupBy, GroupedObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "groupBy", function() { return groupBy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupedObservable", function() { return GroupedObservable; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription,_Observable,_Subject PURE_IMPORTS_END */





function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {
    return function (source) {
        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));
    };
}
var GroupByOperator = /*@__PURE__*/ (function () {
    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {
        this.keySelector = keySelector;
        this.elementSelector = elementSelector;
        this.durationSelector = durationSelector;
        this.subjectSelector = subjectSelector;
    }
    GroupByOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));
    };
    return GroupByOperator;
}());
var GroupBySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](GroupBySubscriber, _super);
    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {
        var _this = _super.call(this, destination) || this;
        _this.keySelector = keySelector;
        _this.elementSelector = elementSelector;
        _this.durationSelector = durationSelector;
        _this.subjectSelector = subjectSelector;
        _this.groups = null;
        _this.attemptedToUnsubscribe = false;
        _this.count = 0;
        return _this;
    }
    GroupBySubscriber.prototype._next = function (value) {
        var key;
        try {
            key = this.keySelector(value);
        }
        catch (err) {
            this.error(err);
            return;
        }
        this._group(value, key);
    };
    GroupBySubscriber.prototype._group = function (value, key) {
        var groups = this.groups;
        if (!groups) {
            groups = this.groups = new Map();
        }
        var group = groups.get(key);
        var element;
        if (this.elementSelector) {
            try {
                element = this.elementSelector(value);
            }
            catch (err) {
                this.error(err);
            }
        }
        else {
            element = value;
        }
        if (!group) {
            group = (this.subjectSelector ? this.subjectSelector() : new _Subject__WEBPACK_IMPORTED_MODULE_4__["Subject"]());
            groups.set(key, group);
            var groupedObservable = new GroupedObservable(key, group, this);
            this.destination.next(groupedObservable);
            if (this.durationSelector) {
                var duration = void 0;
                try {
                    duration = this.durationSelector(new GroupedObservable(key, group));
                }
                catch (err) {
                    this.error(err);
                    return;
                }
                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));
            }
        }
        if (!group.closed) {
            group.next(element);
        }
    };
    GroupBySubscriber.prototype._error = function (err) {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.error(err);
            });
            groups.clear();
        }
        this.destination.error(err);
    };
    GroupBySubscriber.prototype._complete = function () {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.complete();
            });
            groups.clear();
        }
        this.destination.complete();
    };
    GroupBySubscriber.prototype.removeGroup = function (key) {
        this.groups.delete(key);
    };
    GroupBySubscriber.prototype.unsubscribe = function () {
        if (!this.closed) {
            this.attemptedToUnsubscribe = true;
            if (this.count === 0) {
                _super.prototype.unsubscribe.call(this);
            }
        }
    };
    return GroupBySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
var GroupDurationSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](GroupDurationSubscriber, _super);
    function GroupDurationSubscriber(key, group, parent) {
        var _this = _super.call(this, group) || this;
        _this.key = key;
        _this.group = group;
        _this.parent = parent;
        return _this;
    }
    GroupDurationSubscriber.prototype._next = function (value) {
        this.complete();
    };
    GroupDurationSubscriber.prototype._unsubscribe = function () {
        var _a = this, parent = _a.parent, key = _a.key;
        this.key = this.parent = null;
        if (parent) {
            parent.removeGroup(key);
        }
    };
    return GroupDurationSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
var GroupedObservable = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](GroupedObservable, _super);
    function GroupedObservable(key, groupSubject, refCountSubscription) {
        var _this = _super.call(this) || this;
        _this.key = key;
        _this.groupSubject = groupSubject;
        _this.refCountSubscription = refCountSubscription;
        return _this;
    }
    GroupedObservable.prototype._subscribe = function (subscriber) {
        var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"]();
        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;
        if (refCountSubscription && !refCountSubscription.closed) {
            subscription.add(new InnerRefCountSubscription(refCountSubscription));
        }
        subscription.add(groupSubject.subscribe(subscriber));
        return subscription;
    };
    return GroupedObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_3__["Observable"]));

var InnerRefCountSubscription = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](InnerRefCountSubscription, _super);
    function InnerRefCountSubscription(parent) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        parent.count++;
        return _this;
    }
    InnerRefCountSubscription.prototype.unsubscribe = function () {
        var parent = this.parent;
        if (!parent.closed && !this.closed) {
            _super.prototype.unsubscribe.call(this);
            parent.count -= 1;
            if (parent.count === 0 && parent.attemptedToUnsubscribe) {
                parent.unsubscribe();
            }
        }
    };
    return InnerRefCountSubscription;
}(_Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"]));
//# sourceMappingURL=groupBy.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/ignoreElements.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/ignoreElements.js ***!
  \**********************************************************************/
/*! exports provided: ignoreElements */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ignoreElements", function() { return ignoreElements; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function ignoreElements() {
    return function ignoreElementsOperatorFunction(source) {
        return source.lift(new IgnoreElementsOperator());
    };
}
var IgnoreElementsOperator = /*@__PURE__*/ (function () {
    function IgnoreElementsOperator() {
    }
    IgnoreElementsOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new IgnoreElementsSubscriber(subscriber));
    };
    return IgnoreElementsOperator;
}());
var IgnoreElementsSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](IgnoreElementsSubscriber, _super);
    function IgnoreElementsSubscriber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IgnoreElementsSubscriber.prototype._next = function (unused) {
    };
    return IgnoreElementsSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=ignoreElements.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/isEmpty.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/isEmpty.js ***!
  \***************************************************************/
/*! exports provided: isEmpty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEmpty", function() { return isEmpty; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function isEmpty() {
    return function (source) { return source.lift(new IsEmptyOperator()); };
}
var IsEmptyOperator = /*@__PURE__*/ (function () {
    function IsEmptyOperator() {
    }
    IsEmptyOperator.prototype.call = function (observer, source) {
        return source.subscribe(new IsEmptySubscriber(observer));
    };
    return IsEmptyOperator;
}());
var IsEmptySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](IsEmptySubscriber, _super);
    function IsEmptySubscriber(destination) {
        return _super.call(this, destination) || this;
    }
    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {
        var destination = this.destination;
        destination.next(isEmpty);
        destination.complete();
    };
    IsEmptySubscriber.prototype._next = function (value) {
        this.notifyComplete(false);
    };
    IsEmptySubscriber.prototype._complete = function () {
        this.notifyComplete(true);
    };
    return IsEmptySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=isEmpty.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/last.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/last.js ***!
  \************************************************************/
/*! exports provided: last */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "last", function() { return last; });
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/EmptyError */ "./node_modules/rxjs/_esm5/internal/util/EmptyError.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter */ "./node_modules/rxjs/_esm5/internal/operators/filter.js");
/* harmony import */ var _takeLast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./takeLast */ "./node_modules/rxjs/_esm5/internal/operators/takeLast.js");
/* harmony import */ var _throwIfEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./throwIfEmpty */ "./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js");
/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaultIfEmpty */ "./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js");
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/identity */ "./node_modules/rxjs/_esm5/internal/util/identity.js");
/** PURE_IMPORTS_START _util_EmptyError,_filter,_takeLast,_throwIfEmpty,_defaultIfEmpty,_util_identity PURE_IMPORTS_END */






function last(predicate, defaultValue) {
    var hasDefaultValue = arguments.length >= 2;
    return function (source) { return source.pipe(predicate ? Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(function (v, i) { return predicate(v, i, source); }) : _util_identity__WEBPACK_IMPORTED_MODULE_5__["identity"], Object(_takeLast__WEBPACK_IMPORTED_MODULE_2__["takeLast"])(1), hasDefaultValue ? Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_4__["defaultIfEmpty"])(defaultValue) : Object(_throwIfEmpty__WEBPACK_IMPORTED_MODULE_3__["throwIfEmpty"])(function () { return new _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__["EmptyError"](); })); };
}
//# sourceMappingURL=last.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/map.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/map.js ***!
  \***********************************************************/
/*! exports provided: map, MapOperator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapOperator", function() { return MapOperator; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function map(project, thisArg) {
    return function mapOperation(source) {
        if (typeof project !== 'function') {
            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
        }
        return source.lift(new MapOperator(project, thisArg));
    };
}
var MapOperator = /*@__PURE__*/ (function () {
    function MapOperator(project, thisArg) {
        this.project = project;
        this.thisArg = thisArg;
    }
    MapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
    };
    return MapOperator;
}());

var MapSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapSubscriber, _super);
    function MapSubscriber(destination, project, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.count = 0;
        _this.thisArg = thisArg || _this;
        return _this;
    }
    MapSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.project.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return MapSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=map.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/mapTo.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/mapTo.js ***!
  \*************************************************************/
/*! exports provided: mapTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapTo", function() { return mapTo; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function mapTo(value) {
    return function (source) { return source.lift(new MapToOperator(value)); };
}
var MapToOperator = /*@__PURE__*/ (function () {
    function MapToOperator(value) {
        this.value = value;
    }
    MapToOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MapToSubscriber(subscriber, this.value));
    };
    return MapToOperator;
}());
var MapToSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapToSubscriber, _super);
    function MapToSubscriber(destination, value) {
        var _this = _super.call(this, destination) || this;
        _this.value = value;
        return _this;
    }
    MapToSubscriber.prototype._next = function (x) {
        this.destination.next(this.value);
    };
    return MapToSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=mapTo.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/materialize.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/materialize.js ***!
  \*******************************************************************/
/*! exports provided: materialize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "materialize", function() { return materialize; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Notification__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Notification */ "./node_modules/rxjs/_esm5/internal/Notification.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */



function materialize() {
    return function materializeOperatorFunction(source) {
        return source.lift(new MaterializeOperator());
    };
}
var MaterializeOperator = /*@__PURE__*/ (function () {
    function MaterializeOperator() {
    }
    MaterializeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MaterializeSubscriber(subscriber));
    };
    return MaterializeOperator;
}());
var MaterializeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MaterializeSubscriber, _super);
    function MaterializeSubscriber(destination) {
        return _super.call(this, destination) || this;
    }
    MaterializeSubscriber.prototype._next = function (value) {
        this.destination.next(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createNext(value));
    };
    MaterializeSubscriber.prototype._error = function (err) {
        var destination = this.destination;
        destination.next(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createError(err));
        destination.complete();
    };
    MaterializeSubscriber.prototype._complete = function () {
        var destination = this.destination;
        destination.next(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createComplete());
        destination.complete();
    };
    return MaterializeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=materialize.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/max.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/max.js ***!
  \***********************************************************/
/*! exports provided: max */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reduce */ "./node_modules/rxjs/_esm5/internal/operators/reduce.js");
/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */

function max(comparer) {
    var max = (typeof comparer === 'function')
        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }
        : function (x, y) { return x > y ? x : y; };
    return Object(_reduce__WEBPACK_IMPORTED_MODULE_0__["reduce"])(max);
}
//# sourceMappingURL=max.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/merge.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/merge.js ***!
  \*************************************************************/
/*! exports provided: merge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return merge; });
/* harmony import */ var _observable_merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/merge */ "./node_modules/rxjs/_esm5/internal/observable/merge.js");
/** PURE_IMPORTS_START _observable_merge PURE_IMPORTS_END */

function merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function (source) { return source.lift.call(_observable_merge__WEBPACK_IMPORTED_MODULE_0__["merge"].apply(void 0, [source].concat(observables))); };
}
//# sourceMappingURL=merge.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/mergeAll.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/mergeAll.js ***!
  \****************************************************************/
/*! exports provided: mergeAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeAll", function() { return mergeAll; });
/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeMap */ "./node_modules/rxjs/_esm5/internal/operators/mergeMap.js");
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/identity */ "./node_modules/rxjs/_esm5/internal/util/identity.js");
/** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */


function mergeAll(concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])(_util_identity__WEBPACK_IMPORTED_MODULE_1__["identity"], concurrent);
}
//# sourceMappingURL=mergeAll.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/mergeMap.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/mergeMap.js ***!
  \****************************************************************/
/*! exports provided: mergeMap, MergeMapOperator, MergeMapSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeMap", function() { return mergeMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeMapOperator", function() { return MergeMapOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeMapSubscriber", function() { return MergeMapSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../InnerSubscriber */ "./node_modules/rxjs/_esm5/internal/InnerSubscriber.js");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../observable/from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_InnerSubscriber,_map,_observable_from PURE_IMPORTS_END */






function mergeMap(project, resultSelector, concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    if (typeof resultSelector === 'function') {
        return function (source) { return source.pipe(mergeMap(function (a, i) { return Object(_observable_from__WEBPACK_IMPORTED_MODULE_5__["from"])(project(a, i)).pipe(Object(_map__WEBPACK_IMPORTED_MODULE_4__["map"])(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };
    }
    else if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
    }
    return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };
}
var MergeMapOperator = /*@__PURE__*/ (function () {
    function MergeMapOperator(project, concurrent) {
        if (concurrent === void 0) {
            concurrent = Number.POSITIVE_INFINITY;
        }
        this.project = project;
        this.concurrent = concurrent;
    }
    MergeMapOperator.prototype.call = function (observer, source) {
        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));
    };
    return MergeMapOperator;
}());

var MergeMapSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MergeMapSubscriber, _super);
    function MergeMapSubscriber(destination, project, concurrent) {
        if (concurrent === void 0) {
            concurrent = Number.POSITIVE_INFINITY;
        }
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.concurrent = concurrent;
        _this.hasCompleted = false;
        _this.buffer = [];
        _this.active = 0;
        _this.index = 0;
        return _this;
    }
    MergeMapSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            this._tryNext(value);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeMapSubscriber.prototype._tryNext = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.active++;
        this._innerSub(result, value, index);
    };
    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {
        var innerSubscriber = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_3__["InnerSubscriber"](this, value, index);
        var destination = this.destination;
        destination.add(innerSubscriber);
        var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_1__["subscribeToResult"])(this, ish, undefined, undefined, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            destination.add(innerSubscription);
        }
    };
    MergeMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            this.destination.complete();
        }
        this.unsubscribe();
    };
    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            this.destination.complete();
        }
    };
    return MergeMapSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__["OuterSubscriber"]));

//# sourceMappingURL=mergeMap.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/mergeMapTo.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/mergeMapTo.js ***!
  \******************************************************************/
/*! exports provided: mergeMapTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeMapTo", function() { return mergeMapTo; });
/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeMap */ "./node_modules/rxjs/_esm5/internal/operators/mergeMap.js");
/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */

function mergeMapTo(innerObservable, resultSelector, concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    if (typeof resultSelector === 'function') {
        return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])(function () { return innerObservable; }, resultSelector, concurrent);
    }
    if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
    }
    return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])(function () { return innerObservable; }, concurrent);
}
//# sourceMappingURL=mergeMapTo.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/mergeScan.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/mergeScan.js ***!
  \*****************************************************************/
/*! exports provided: mergeScan, MergeScanOperator, MergeScanSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeScan", function() { return mergeScan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeScanOperator", function() { return MergeScanOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeScanSubscriber", function() { return MergeScanSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../InnerSubscriber */ "./node_modules/rxjs/_esm5/internal/InnerSubscriber.js");
/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_InnerSubscriber PURE_IMPORTS_END */




function mergeScan(accumulator, seed, concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };
}
var MergeScanOperator = /*@__PURE__*/ (function () {
    function MergeScanOperator(accumulator, seed, concurrent) {
        this.accumulator = accumulator;
        this.seed = seed;
        this.concurrent = concurrent;
    }
    MergeScanOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));
    };
    return MergeScanOperator;
}());

var MergeScanSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MergeScanSubscriber, _super);
    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {
        var _this = _super.call(this, destination) || this;
        _this.accumulator = accumulator;
        _this.acc = acc;
        _this.concurrent = concurrent;
        _this.hasValue = false;
        _this.hasCompleted = false;
        _this.buffer = [];
        _this.active = 0;
        _this.index = 0;
        return _this;
    }
    MergeScanSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            var index = this.index++;
            var destination = this.destination;
            var ish = void 0;
            try {
                var accumulator = this.accumulator;
                ish = accumulator(this.acc, value, index);
            }
            catch (e) {
                return destination.error(e);
            }
            this.active++;
            this._innerSub(ish, value, index);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {
        var innerSubscriber = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_3__["InnerSubscriber"](this, value, index);
        var destination = this.destination;
        destination.add(innerSubscriber);
        var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_1__["subscribeToResult"])(this, ish, undefined, undefined, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            destination.add(innerSubscription);
        }
    };
    MergeScanSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            if (this.hasValue === false) {
                this.destination.next(this.acc);
            }
            this.destination.complete();
        }
        this.unsubscribe();
    };
    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var destination = this.destination;
        this.acc = innerValue;
        this.hasValue = true;
        destination.next(innerValue);
    };
    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        var destination = this.destination;
        destination.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            if (this.hasValue === false) {
                this.destination.next(this.acc);
            }
            this.destination.complete();
        }
    };
    return MergeScanSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__["OuterSubscriber"]));

//# sourceMappingURL=mergeScan.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/min.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/min.js ***!
  \***********************************************************/
/*! exports provided: min */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reduce */ "./node_modules/rxjs/_esm5/internal/operators/reduce.js");
/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */

function min(comparer) {
    var min = (typeof comparer === 'function')
        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }
        : function (x, y) { return x < y ? x : y; };
    return Object(_reduce__WEBPACK_IMPORTED_MODULE_0__["reduce"])(min);
}
//# sourceMappingURL=min.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/multicast.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/multicast.js ***!
  \*****************************************************************/
/*! exports provided: multicast, MulticastOperator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multicast", function() { return multicast; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MulticastOperator", function() { return MulticastOperator; });
/* harmony import */ var _observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/ConnectableObservable */ "./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js");
/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */

function multicast(subjectOrSubjectFactory, selector) {
    return function multicastOperatorFunction(source) {
        var subjectFactory;
        if (typeof subjectOrSubjectFactory === 'function') {
            subjectFactory = subjectOrSubjectFactory;
        }
        else {
            subjectFactory = function subjectFactory() {
                return subjectOrSubjectFactory;
            };
        }
        if (typeof selector === 'function') {
            return source.lift(new MulticastOperator(subjectFactory, selector));
        }
        var connectable = Object.create(source, _observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_0__["connectableObservableDescriptor"]);
        connectable.source = source;
        connectable.subjectFactory = subjectFactory;
        return connectable;
    };
}
var MulticastOperator = /*@__PURE__*/ (function () {
    function MulticastOperator(subjectFactory, selector) {
        this.subjectFactory = subjectFactory;
        this.selector = selector;
    }
    MulticastOperator.prototype.call = function (subscriber, source) {
        var selector = this.selector;
        var subject = this.subjectFactory();
        var subscription = selector(subject).subscribe(subscriber);
        subscription.add(source.subscribe(subject));
        return subscription;
    };
    return MulticastOperator;
}());

//# sourceMappingURL=multicast.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/observeOn.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/observeOn.js ***!
  \*****************************************************************/
/*! exports provided: observeOn, ObserveOnOperator, ObserveOnSubscriber, ObserveOnMessage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "observeOn", function() { return observeOn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserveOnOperator", function() { return ObserveOnOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserveOnSubscriber", function() { return ObserveOnSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserveOnMessage", function() { return ObserveOnMessage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Notification__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Notification */ "./node_modules/rxjs/_esm5/internal/Notification.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */



function observeOn(scheduler, delay) {
    if (delay === void 0) {
        delay = 0;
    }
    return function observeOnOperatorFunction(source) {
        return source.lift(new ObserveOnOperator(scheduler, delay));
    };
}
var ObserveOnOperator = /*@__PURE__*/ (function () {
    function ObserveOnOperator(scheduler, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        this.scheduler = scheduler;
        this.delay = delay;
    }
    ObserveOnOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));
    };
    return ObserveOnOperator;
}());

var ObserveOnSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ObserveOnSubscriber, _super);
    function ObserveOnSubscriber(destination, scheduler, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        var _this = _super.call(this, destination) || this;
        _this.scheduler = scheduler;
        _this.delay = delay;
        return _this;
    }
    ObserveOnSubscriber.dispatch = function (arg) {
        var notification = arg.notification, destination = arg.destination;
        notification.observe(destination);
        this.unsubscribe();
    };
    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {
        var destination = this.destination;
        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));
    };
    ObserveOnSubscriber.prototype._next = function (value) {
        this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createNext(value));
    };
    ObserveOnSubscriber.prototype._error = function (err) {
        this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createError(err));
        this.unsubscribe();
    };
    ObserveOnSubscriber.prototype._complete = function () {
        this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createComplete());
        this.unsubscribe();
    };
    return ObserveOnSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

var ObserveOnMessage = /*@__PURE__*/ (function () {
    function ObserveOnMessage(notification, destination) {
        this.notification = notification;
        this.destination = destination;
    }
    return ObserveOnMessage;
}());

//# sourceMappingURL=observeOn.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/onErrorResumeNext.js":
/*!*************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/onErrorResumeNext.js ***!
  \*************************************************************************/
/*! exports provided: onErrorResumeNext, onErrorResumeNextStatic */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return onErrorResumeNext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNextStatic", function() { return onErrorResumeNextStatic; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../observable/from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../InnerSubscriber */ "./node_modules/rxjs/_esm5/internal/InnerSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_observable_from,_util_isArray,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */






function onErrorResumeNext() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i] = arguments[_i];
    }
    if (nextSources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(nextSources[0])) {
        nextSources = nextSources[0];
    }
    return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };
}
function onErrorResumeNextStatic() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i] = arguments[_i];
    }
    var source = null;
    if (nextSources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(nextSources[0])) {
        nextSources = nextSources[0];
    }
    source = nextSources.shift();
    return Object(_observable_from__WEBPACK_IMPORTED_MODULE_1__["from"])(source, null).lift(new OnErrorResumeNextOperator(nextSources));
}
var OnErrorResumeNextOperator = /*@__PURE__*/ (function () {
    function OnErrorResumeNextOperator(nextSources) {
        this.nextSources = nextSources;
    }
    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));
    };
    return OnErrorResumeNextOperator;
}());
var OnErrorResumeNextSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](OnErrorResumeNextSubscriber, _super);
    function OnErrorResumeNextSubscriber(destination, nextSources) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.nextSources = nextSources;
        return _this;
    }
    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype._error = function (err) {
        this.subscribeToNextSource();
        this.unsubscribe();
    };
    OnErrorResumeNextSubscriber.prototype._complete = function () {
        this.subscribeToNextSource();
        this.unsubscribe();
    };
    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {
        var next = this.nextSources.shift();
        if (!!next) {
            var innerSubscriber = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_4__["InnerSubscriber"](this, undefined, undefined);
            var destination = this.destination;
            destination.add(innerSubscriber);
            var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_5__["subscribeToResult"])(this, next, undefined, undefined, innerSubscriber);
            if (innerSubscription !== innerSubscriber) {
                destination.add(innerSubscription);
            }
        }
        else {
            this.destination.complete();
        }
    };
    return OnErrorResumeNextSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]));
//# sourceMappingURL=onErrorResumeNext.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/pairwise.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/pairwise.js ***!
  \****************************************************************/
/*! exports provided: pairwise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pairwise", function() { return pairwise; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function pairwise() {
    return function (source) { return source.lift(new PairwiseOperator()); };
}
var PairwiseOperator = /*@__PURE__*/ (function () {
    function PairwiseOperator() {
    }
    PairwiseOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new PairwiseSubscriber(subscriber));
    };
    return PairwiseOperator;
}());
var PairwiseSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](PairwiseSubscriber, _super);
    function PairwiseSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.hasPrev = false;
        return _this;
    }
    PairwiseSubscriber.prototype._next = function (value) {
        var pair;
        if (this.hasPrev) {
            pair = [this.prev, value];
        }
        else {
            this.hasPrev = true;
        }
        this.prev = value;
        if (pair) {
            this.destination.next(pair);
        }
    };
    return PairwiseSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=pairwise.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/partition.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/partition.js ***!
  \*****************************************************************/
/*! exports provided: partition */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return partition; });
/* harmony import */ var _util_not__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/not */ "./node_modules/rxjs/_esm5/internal/util/not.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter */ "./node_modules/rxjs/_esm5/internal/operators/filter.js");
/** PURE_IMPORTS_START _util_not,_filter PURE_IMPORTS_END */


function partition(predicate, thisArg) {
    return function (source) {
        return [
            Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(predicate, thisArg)(source),
            Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(Object(_util_not__WEBPACK_IMPORTED_MODULE_0__["not"])(predicate, thisArg))(source)
        ];
    };
}
//# sourceMappingURL=partition.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/pluck.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/pluck.js ***!
  \*************************************************************/
/*! exports provided: pluck */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pluck", function() { return pluck; });
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/** PURE_IMPORTS_START _map PURE_IMPORTS_END */

function pluck() {
    var properties = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        properties[_i] = arguments[_i];
    }
    var length = properties.length;
    if (length === 0) {
        throw new Error('list of properties cannot be empty.');
    }
    return function (source) { return Object(_map__WEBPACK_IMPORTED_MODULE_0__["map"])(plucker(properties, length))(source); };
}
function plucker(props, length) {
    var mapper = function (x) {
        var currentProp = x;
        for (var i = 0; i < length; i++) {
            var p = currentProp[props[i]];
            if (typeof p !== 'undefined') {
                currentProp = p;
            }
            else {
                return undefined;
            }
        }
        return currentProp;
    };
    return mapper;
}
//# sourceMappingURL=pluck.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/publish.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/publish.js ***!
  \***************************************************************/
/*! exports provided: publish */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "publish", function() { return publish; });
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multicast */ "./node_modules/rxjs/_esm5/internal/operators/multicast.js");
/** PURE_IMPORTS_START _Subject,_multicast PURE_IMPORTS_END */


function publish(selector) {
    return selector ?
        Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(function () { return new _Subject__WEBPACK_IMPORTED_MODULE_0__["Subject"](); }, selector) :
        Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(new _Subject__WEBPACK_IMPORTED_MODULE_0__["Subject"]());
}
//# sourceMappingURL=publish.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/publishBehavior.js":
/*!***********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/publishBehavior.js ***!
  \***********************************************************************/
/*! exports provided: publishBehavior */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "publishBehavior", function() { return publishBehavior; });
/* harmony import */ var _BehaviorSubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../BehaviorSubject */ "./node_modules/rxjs/_esm5/internal/BehaviorSubject.js");
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multicast */ "./node_modules/rxjs/_esm5/internal/operators/multicast.js");
/** PURE_IMPORTS_START _BehaviorSubject,_multicast PURE_IMPORTS_END */


function publishBehavior(value) {
    return function (source) { return Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(new _BehaviorSubject__WEBPACK_IMPORTED_MODULE_0__["BehaviorSubject"](value))(source); };
}
//# sourceMappingURL=publishBehavior.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/publishLast.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/publishLast.js ***!
  \*******************************************************************/
/*! exports provided: publishLast */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "publishLast", function() { return publishLast; });
/* harmony import */ var _AsyncSubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../AsyncSubject */ "./node_modules/rxjs/_esm5/internal/AsyncSubject.js");
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multicast */ "./node_modules/rxjs/_esm5/internal/operators/multicast.js");
/** PURE_IMPORTS_START _AsyncSubject,_multicast PURE_IMPORTS_END */


function publishLast() {
    return function (source) { return Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(new _AsyncSubject__WEBPACK_IMPORTED_MODULE_0__["AsyncSubject"]())(source); };
}
//# sourceMappingURL=publishLast.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/publishReplay.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/publishReplay.js ***!
  \*********************************************************************/
/*! exports provided: publishReplay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "publishReplay", function() { return publishReplay; });
/* harmony import */ var _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ReplaySubject */ "./node_modules/rxjs/_esm5/internal/ReplaySubject.js");
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multicast */ "./node_modules/rxjs/_esm5/internal/operators/multicast.js");
/** PURE_IMPORTS_START _ReplaySubject,_multicast PURE_IMPORTS_END */


function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {
    if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {
        scheduler = selectorOrScheduler;
    }
    var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;
    var subject = new _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__["ReplaySubject"](bufferSize, windowTime, scheduler);
    return function (source) { return Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(function () { return subject; }, selector)(source); };
}
//# sourceMappingURL=publishReplay.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/race.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/race.js ***!
  \************************************************************/
/*! exports provided: race */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "race", function() { return race; });
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _observable_race__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../observable/race */ "./node_modules/rxjs/_esm5/internal/observable/race.js");
/** PURE_IMPORTS_START _util_isArray,_observable_race PURE_IMPORTS_END */


function race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function raceOperatorFunction(source) {
        if (observables.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_0__["isArray"])(observables[0])) {
            observables = observables[0];
        }
        return source.lift.call(_observable_race__WEBPACK_IMPORTED_MODULE_1__["race"].apply(void 0, [source].concat(observables)));
    };
}
//# sourceMappingURL=race.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/reduce.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/reduce.js ***!
  \**************************************************************/
/*! exports provided: reduce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return reduce; });
/* harmony import */ var _scan__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scan */ "./node_modules/rxjs/_esm5/internal/operators/scan.js");
/* harmony import */ var _takeLast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./takeLast */ "./node_modules/rxjs/_esm5/internal/operators/takeLast.js");
/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaultIfEmpty */ "./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js");
/* harmony import */ var _util_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/pipe */ "./node_modules/rxjs/_esm5/internal/util/pipe.js");
/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */




function reduce(accumulator, seed) {
    if (arguments.length >= 2) {
        return function reduceOperatorFunctionWithSeed(source) {
            return Object(_util_pipe__WEBPACK_IMPORTED_MODULE_3__["pipe"])(Object(_scan__WEBPACK_IMPORTED_MODULE_0__["scan"])(accumulator, seed), Object(_takeLast__WEBPACK_IMPORTED_MODULE_1__["takeLast"])(1), Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_2__["defaultIfEmpty"])(seed))(source);
        };
    }
    return function reduceOperatorFunction(source) {
        return Object(_util_pipe__WEBPACK_IMPORTED_MODULE_3__["pipe"])(Object(_scan__WEBPACK_IMPORTED_MODULE_0__["scan"])(function (acc, value, index) { return accumulator(acc, value, index + 1); }), Object(_takeLast__WEBPACK_IMPORTED_MODULE_1__["takeLast"])(1))(source);
    };
}
//# sourceMappingURL=reduce.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/refCount.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/refCount.js ***!
  \****************************************************************/
/*! exports provided: refCount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "refCount", function() { return refCount; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function refCount() {
    return function refCountOperatorFunction(source) {
        return source.lift(new RefCountOperator(source));
    };
}
var RefCountOperator = /*@__PURE__*/ (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new RefCountSubscriber(subscriber, connectable);
        var subscription = source.subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var RefCountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        var _this = _super.call(this, destination) || this;
        _this.connectable = connectable;
        return _this;
    }
    RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=refCount.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/repeat.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/repeat.js ***!
  \**************************************************************/
/*! exports provided: repeat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "repeat", function() { return repeat; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */



function repeat(count) {
    if (count === void 0) {
        count = -1;
    }
    return function (source) {
        if (count === 0) {
            return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_2__["empty"])();
        }
        else if (count < 0) {
            return source.lift(new RepeatOperator(-1, source));
        }
        else {
            return source.lift(new RepeatOperator(count - 1, source));
        }
    };
}
var RepeatOperator = /*@__PURE__*/ (function () {
    function RepeatOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RepeatOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));
    };
    return RepeatOperator;
}());
var RepeatSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RepeatSubscriber, _super);
    function RepeatSubscriber(destination, count, source) {
        var _this = _super.call(this, destination) || this;
        _this.count = count;
        _this.source = source;
        return _this;
    }
    RepeatSubscriber.prototype.complete = function () {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.complete.call(this);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            source.subscribe(this._unsubscribeAndRecycle());
        }
    };
    return RepeatSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=repeat.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/repeatWhen.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/repeatWhen.js ***!
  \******************************************************************/
/*! exports provided: repeatWhen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "repeatWhen", function() { return repeatWhen; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function repeatWhen(notifier) {
    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };
}
var RepeatWhenOperator = /*@__PURE__*/ (function () {
    function RepeatWhenOperator(notifier) {
        this.notifier = notifier;
    }
    RepeatWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));
    };
    return RepeatWhenOperator;
}());
var RepeatWhenSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RepeatWhenSubscriber, _super);
    function RepeatWhenSubscriber(destination, notifier, source) {
        var _this = _super.call(this, destination) || this;
        _this.notifier = notifier;
        _this.source = source;
        _this.sourceIsBeingSubscribedTo = true;
        return _this;
    }
    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.sourceIsBeingSubscribedTo = true;
        this.source.subscribe(this);
    };
    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {
        if (this.sourceIsBeingSubscribedTo === false) {
            return _super.prototype.complete.call(this);
        }
    };
    RepeatWhenSubscriber.prototype.complete = function () {
        this.sourceIsBeingSubscribedTo = false;
        if (!this.isStopped) {
            if (!this.retries) {
                this.subscribeToRetries();
            }
            if (!this.retriesSubscription || this.retriesSubscription.closed) {
                return _super.prototype.complete.call(this);
            }
            this._unsubscribeAndRecycle();
            this.notifications.next();
        }
    };
    RepeatWhenSubscriber.prototype._unsubscribe = function () {
        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;
        if (notifications) {
            notifications.unsubscribe();
            this.notifications = null;
        }
        if (retriesSubscription) {
            retriesSubscription.unsubscribe();
            this.retriesSubscription = null;
        }
        this.retries = null;
    };
    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {
        var _unsubscribe = this._unsubscribe;
        this._unsubscribe = null;
        _super.prototype._unsubscribeAndRecycle.call(this);
        this._unsubscribe = _unsubscribe;
        return this;
    };
    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {
        this.notifications = new _Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        var retries;
        try {
            var notifier = this.notifier;
            retries = notifier(this.notifications);
        }
        catch (e) {
            return _super.prototype.complete.call(this);
        }
        this.retries = retries;
        this.retriesSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__["subscribeToResult"])(this, retries);
    };
    return RepeatWhenSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__["OuterSubscriber"]));
//# sourceMappingURL=repeatWhen.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/retry.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/retry.js ***!
  \*************************************************************/
/*! exports provided: retry */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "retry", function() { return retry; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function retry(count) {
    if (count === void 0) {
        count = -1;
    }
    return function (source) { return source.lift(new RetryOperator(count, source)); };
}
var RetryOperator = /*@__PURE__*/ (function () {
    function RetryOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RetryOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));
    };
    return RetryOperator;
}());
var RetrySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RetrySubscriber, _super);
    function RetrySubscriber(destination, count, source) {
        var _this = _super.call(this, destination) || this;
        _this.count = count;
        _this.source = source;
        return _this;
    }
    RetrySubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.error.call(this, err);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            source.subscribe(this._unsubscribeAndRecycle());
        }
    };
    return RetrySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=retry.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/retryWhen.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/retryWhen.js ***!
  \*****************************************************************/
/*! exports provided: retryWhen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "retryWhen", function() { return retryWhen; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function retryWhen(notifier) {
    return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };
}
var RetryWhenOperator = /*@__PURE__*/ (function () {
    function RetryWhenOperator(notifier, source) {
        this.notifier = notifier;
        this.source = source;
    }
    RetryWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));
    };
    return RetryWhenOperator;
}());
var RetryWhenSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RetryWhenSubscriber, _super);
    function RetryWhenSubscriber(destination, notifier, source) {
        var _this = _super.call(this, destination) || this;
        _this.notifier = notifier;
        _this.source = source;
        return _this;
    }
    RetryWhenSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var errors = this.errors;
            var retries = this.retries;
            var retriesSubscription = this.retriesSubscription;
            if (!retries) {
                errors = new _Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
                try {
                    var notifier = this.notifier;
                    retries = notifier(errors);
                }
                catch (e) {
                    return _super.prototype.error.call(this, e);
                }
                retriesSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__["subscribeToResult"])(this, retries);
            }
            else {
                this.errors = null;
                this.retriesSubscription = null;
            }
            this._unsubscribeAndRecycle();
            this.errors = errors;
            this.retries = retries;
            this.retriesSubscription = retriesSubscription;
            errors.next(err);
        }
    };
    RetryWhenSubscriber.prototype._unsubscribe = function () {
        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;
        if (errors) {
            errors.unsubscribe();
            this.errors = null;
        }
        if (retriesSubscription) {
            retriesSubscription.unsubscribe();
            this.retriesSubscription = null;
        }
        this.retries = null;
    };
    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _unsubscribe = this._unsubscribe;
        this._unsubscribe = null;
        this._unsubscribeAndRecycle();
        this._unsubscribe = _unsubscribe;
        this.source.subscribe(this);
    };
    return RetryWhenSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__["OuterSubscriber"]));
//# sourceMappingURL=retryWhen.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/sample.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/sample.js ***!
  \**************************************************************/
/*! exports provided: sample */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sample", function() { return sample; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function sample(notifier) {
    return function (source) { return source.lift(new SampleOperator(notifier)); };
}
var SampleOperator = /*@__PURE__*/ (function () {
    function SampleOperator(notifier) {
        this.notifier = notifier;
    }
    SampleOperator.prototype.call = function (subscriber, source) {
        var sampleSubscriber = new SampleSubscriber(subscriber);
        var subscription = source.subscribe(sampleSubscriber);
        subscription.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(sampleSubscriber, this.notifier));
        return subscription;
    };
    return SampleOperator;
}());
var SampleSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SampleSubscriber, _super);
    function SampleSubscriber() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.hasValue = false;
        return _this;
    }
    SampleSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
    };
    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.emitValue();
    };
    SampleSubscriber.prototype.notifyComplete = function () {
        this.emitValue();
    };
    SampleSubscriber.prototype.emitValue = function () {
        if (this.hasValue) {
            this.hasValue = false;
            this.destination.next(this.value);
        }
    };
    return SampleSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]));
//# sourceMappingURL=sample.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/sampleTime.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/sampleTime.js ***!
  \******************************************************************/
/*! exports provided: sampleTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sampleTime", function() { return sampleTime; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */



function sampleTime(period, scheduler) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_2__["async"];
    }
    return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };
}
var SampleTimeOperator = /*@__PURE__*/ (function () {
    function SampleTimeOperator(period, scheduler) {
        this.period = period;
        this.scheduler = scheduler;
    }
    SampleTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));
    };
    return SampleTimeOperator;
}());
var SampleTimeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SampleTimeSubscriber, _super);
    function SampleTimeSubscriber(destination, period, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.period = period;
        _this.scheduler = scheduler;
        _this.hasValue = false;
        _this.add(scheduler.schedule(dispatchNotification, period, { subscriber: _this, period: period }));
        return _this;
    }
    SampleTimeSubscriber.prototype._next = function (value) {
        this.lastValue = value;
        this.hasValue = true;
    };
    SampleTimeSubscriber.prototype.notifyNext = function () {
        if (this.hasValue) {
            this.hasValue = false;
            this.destination.next(this.lastValue);
        }
    };
    return SampleTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
function dispatchNotification(state) {
    var subscriber = state.subscriber, period = state.period;
    subscriber.notifyNext();
    this.schedule(state, period);
}
//# sourceMappingURL=sampleTime.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/scan.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/scan.js ***!
  \************************************************************/
/*! exports provided: scan */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return scan; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function scan(accumulator, seed) {
    var hasSeed = false;
    if (arguments.length >= 2) {
        hasSeed = true;
    }
    return function scanOperatorFunction(source) {
        return source.lift(new ScanOperator(accumulator, seed, hasSeed));
    };
}
var ScanOperator = /*@__PURE__*/ (function () {
    function ScanOperator(accumulator, seed, hasSeed) {
        if (hasSeed === void 0) {
            hasSeed = false;
        }
        this.accumulator = accumulator;
        this.seed = seed;
        this.hasSeed = hasSeed;
    }
    ScanOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));
    };
    return ScanOperator;
}());
var ScanSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ScanSubscriber, _super);
    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {
        var _this = _super.call(this, destination) || this;
        _this.accumulator = accumulator;
        _this._seed = _seed;
        _this.hasSeed = hasSeed;
        _this.index = 0;
        return _this;
    }
    Object.defineProperty(ScanSubscriber.prototype, "seed", {
        get: function () {
            return this._seed;
        },
        set: function (value) {
            this.hasSeed = true;
            this._seed = value;
        },
        enumerable: true,
        configurable: true
    });
    ScanSubscriber.prototype._next = function (value) {
        if (!this.hasSeed) {
            this.seed = value;
            this.destination.next(value);
        }
        else {
            return this._tryNext(value);
        }
    };
    ScanSubscriber.prototype._tryNext = function (value) {
        var index = this.index++;
        var result;
        try {
            result = this.accumulator(this.seed, value, index);
        }
        catch (err) {
            this.destination.error(err);
        }
        this.seed = result;
        this.destination.next(result);
    };
    return ScanSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=scan.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/sequenceEqual.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/sequenceEqual.js ***!
  \*********************************************************************/
/*! exports provided: sequenceEqual, SequenceEqualOperator, SequenceEqualSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequenceEqual", function() { return sequenceEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SequenceEqualOperator", function() { return SequenceEqualOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SequenceEqualSubscriber", function() { return SequenceEqualSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function sequenceEqual(compareTo, comparator) {
    return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparator)); };
}
var SequenceEqualOperator = /*@__PURE__*/ (function () {
    function SequenceEqualOperator(compareTo, comparator) {
        this.compareTo = compareTo;
        this.comparator = comparator;
    }
    SequenceEqualOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));
    };
    return SequenceEqualOperator;
}());

var SequenceEqualSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SequenceEqualSubscriber, _super);
    function SequenceEqualSubscriber(destination, compareTo, comparator) {
        var _this = _super.call(this, destination) || this;
        _this.compareTo = compareTo;
        _this.comparator = comparator;
        _this._a = [];
        _this._b = [];
        _this._oneComplete = false;
        _this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));
        return _this;
    }
    SequenceEqualSubscriber.prototype._next = function (value) {
        if (this._oneComplete && this._b.length === 0) {
            this.emit(false);
        }
        else {
            this._a.push(value);
            this.checkValues();
        }
    };
    SequenceEqualSubscriber.prototype._complete = function () {
        if (this._oneComplete) {
            this.emit(this._a.length === 0 && this._b.length === 0);
        }
        else {
            this._oneComplete = true;
        }
        this.unsubscribe();
    };
    SequenceEqualSubscriber.prototype.checkValues = function () {
        var _c = this, _a = _c._a, _b = _c._b, comparator = _c.comparator;
        while (_a.length > 0 && _b.length > 0) {
            var a = _a.shift();
            var b = _b.shift();
            var areEqual = false;
            try {
                areEqual = comparator ? comparator(a, b) : a === b;
            }
            catch (e) {
                this.destination.error(e);
            }
            if (!areEqual) {
                this.emit(false);
            }
        }
    };
    SequenceEqualSubscriber.prototype.emit = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
    };
    SequenceEqualSubscriber.prototype.nextB = function (value) {
        if (this._oneComplete && this._a.length === 0) {
            this.emit(false);
        }
        else {
            this._b.push(value);
            this.checkValues();
        }
    };
    SequenceEqualSubscriber.prototype.completeB = function () {
        if (this._oneComplete) {
            this.emit(this._a.length === 0 && this._b.length === 0);
        }
        else {
            this._oneComplete = true;
        }
    };
    return SequenceEqualSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

var SequenceEqualCompareToSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SequenceEqualCompareToSubscriber, _super);
    function SequenceEqualCompareToSubscriber(destination, parent) {
        var _this = _super.call(this, destination) || this;
        _this.parent = parent;
        return _this;
    }
    SequenceEqualCompareToSubscriber.prototype._next = function (value) {
        this.parent.nextB(value);
    };
    SequenceEqualCompareToSubscriber.prototype._error = function (err) {
        this.parent.error(err);
        this.unsubscribe();
    };
    SequenceEqualCompareToSubscriber.prototype._complete = function () {
        this.parent.completeB();
        this.unsubscribe();
    };
    return SequenceEqualCompareToSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=sequenceEqual.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/share.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/share.js ***!
  \*************************************************************/
/*! exports provided: share */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "share", function() { return share; });
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./multicast */ "./node_modules/rxjs/_esm5/internal/operators/multicast.js");
/* harmony import */ var _refCount__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./refCount */ "./node_modules/rxjs/_esm5/internal/operators/refCount.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */



function shareSubjectFactory() {
    return new _Subject__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
}
function share() {
    return function (source) { return Object(_refCount__WEBPACK_IMPORTED_MODULE_1__["refCount"])()(Object(_multicast__WEBPACK_IMPORTED_MODULE_0__["multicast"])(shareSubjectFactory)(source)); };
}
//# sourceMappingURL=share.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/shareReplay.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/shareReplay.js ***!
  \*******************************************************************/
/*! exports provided: shareReplay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shareReplay", function() { return shareReplay; });
/* harmony import */ var _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ReplaySubject */ "./node_modules/rxjs/_esm5/internal/ReplaySubject.js");
/** PURE_IMPORTS_START _ReplaySubject PURE_IMPORTS_END */

function shareReplay(configOrBufferSize, windowTime, scheduler) {
    var config;
    if (configOrBufferSize && typeof configOrBufferSize === 'object') {
        config = configOrBufferSize;
    }
    else {
        config = {
            bufferSize: configOrBufferSize,
            windowTime: windowTime,
            refCount: false,
            scheduler: scheduler
        };
    }
    return function (source) { return source.lift(shareReplayOperator(config)); };
}
function shareReplayOperator(_a) {
    var _b = _a.bufferSize, bufferSize = _b === void 0 ? Number.POSITIVE_INFINITY : _b, _c = _a.windowTime, windowTime = _c === void 0 ? Number.POSITIVE_INFINITY : _c, useRefCount = _a.refCount, scheduler = _a.scheduler;
    var subject;
    var refCount = 0;
    var subscription;
    var hasError = false;
    var isComplete = false;
    return function shareReplayOperation(source) {
        refCount++;
        if (!subject || hasError) {
            hasError = false;
            subject = new _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__["ReplaySubject"](bufferSize, windowTime, scheduler);
            subscription = source.subscribe({
                next: function (value) { subject.next(value); },
                error: function (err) {
                    hasError = true;
                    subject.error(err);
                },
                complete: function () {
                    isComplete = true;
                    subscription = undefined;
                    subject.complete();
                },
            });
        }
        var innerSub = subject.subscribe(this);
        this.add(function () {
            refCount--;
            innerSub.unsubscribe();
            if (subscription && !isComplete && useRefCount && refCount === 0) {
                subscription.unsubscribe();
                subscription = undefined;
                subject = undefined;
            }
        });
    };
}
//# sourceMappingURL=shareReplay.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/single.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/single.js ***!
  \**************************************************************/
/*! exports provided: single */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "single", function() { return single; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/EmptyError */ "./node_modules/rxjs/_esm5/internal/util/EmptyError.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_util_EmptyError PURE_IMPORTS_END */



function single(predicate) {
    return function (source) { return source.lift(new SingleOperator(predicate, source)); };
}
var SingleOperator = /*@__PURE__*/ (function () {
    function SingleOperator(predicate, source) {
        this.predicate = predicate;
        this.source = source;
    }
    SingleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));
    };
    return SingleOperator;
}());
var SingleSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SingleSubscriber, _super);
    function SingleSubscriber(destination, predicate, source) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.source = source;
        _this.seenValue = false;
        _this.index = 0;
        return _this;
    }
    SingleSubscriber.prototype.applySingleValue = function (value) {
        if (this.seenValue) {
            this.destination.error('Sequence contains more than one element');
        }
        else {
            this.seenValue = true;
            this.singleValue = value;
        }
    };
    SingleSubscriber.prototype._next = function (value) {
        var index = this.index++;
        if (this.predicate) {
            this.tryNext(value, index);
        }
        else {
            this.applySingleValue(value);
        }
    };
    SingleSubscriber.prototype.tryNext = function (value, index) {
        try {
            if (this.predicate(value, index, this.source)) {
                this.applySingleValue(value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    SingleSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (this.index > 0) {
            destination.next(this.seenValue ? this.singleValue : undefined);
            destination.complete();
        }
        else {
            destination.error(new _util_EmptyError__WEBPACK_IMPORTED_MODULE_2__["EmptyError"]);
        }
    };
    return SingleSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=single.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/skip.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/skip.js ***!
  \************************************************************/
/*! exports provided: skip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "skip", function() { return skip; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function skip(count) {
    return function (source) { return source.lift(new SkipOperator(count)); };
}
var SkipOperator = /*@__PURE__*/ (function () {
    function SkipOperator(total) {
        this.total = total;
    }
    SkipOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SkipSubscriber(subscriber, this.total));
    };
    return SkipOperator;
}());
var SkipSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SkipSubscriber, _super);
    function SkipSubscriber(destination, total) {
        var _this = _super.call(this, destination) || this;
        _this.total = total;
        _this.count = 0;
        return _this;
    }
    SkipSubscriber.prototype._next = function (x) {
        if (++this.count > this.total) {
            this.destination.next(x);
        }
    };
    return SkipSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=skip.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/skipLast.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/skipLast.js ***!
  \****************************************************************/
/*! exports provided: skipLast */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "skipLast", function() { return skipLast; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ArgumentOutOfRangeError */ "./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError PURE_IMPORTS_END */



function skipLast(count) {
    return function (source) { return source.lift(new SkipLastOperator(count)); };
}
var SkipLastOperator = /*@__PURE__*/ (function () {
    function SkipLastOperator(_skipCount) {
        this._skipCount = _skipCount;
        if (this._skipCount < 0) {
            throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__["ArgumentOutOfRangeError"];
        }
    }
    SkipLastOperator.prototype.call = function (subscriber, source) {
        if (this._skipCount === 0) {
            return source.subscribe(new _Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"](subscriber));
        }
        else {
            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));
        }
    };
    return SkipLastOperator;
}());
var SkipLastSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SkipLastSubscriber, _super);
    function SkipLastSubscriber(destination, _skipCount) {
        var _this = _super.call(this, destination) || this;
        _this._skipCount = _skipCount;
        _this._count = 0;
        _this._ring = new Array(_skipCount);
        return _this;
    }
    SkipLastSubscriber.prototype._next = function (value) {
        var skipCount = this._skipCount;
        var count = this._count++;
        if (count < skipCount) {
            this._ring[count] = value;
        }
        else {
            var currentIndex = count % skipCount;
            var ring = this._ring;
            var oldValue = ring[currentIndex];
            ring[currentIndex] = value;
            this.destination.next(oldValue);
        }
    };
    return SkipLastSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=skipLast.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/skipUntil.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/skipUntil.js ***!
  \*****************************************************************/
/*! exports provided: skipUntil */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "skipUntil", function() { return skipUntil; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../InnerSubscriber */ "./node_modules/rxjs/_esm5/internal/InnerSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function skipUntil(notifier) {
    return function (source) { return source.lift(new SkipUntilOperator(notifier)); };
}
var SkipUntilOperator = /*@__PURE__*/ (function () {
    function SkipUntilOperator(notifier) {
        this.notifier = notifier;
    }
    SkipUntilOperator.prototype.call = function (destination, source) {
        return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));
    };
    return SkipUntilOperator;
}());
var SkipUntilSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SkipUntilSubscriber, _super);
    function SkipUntilSubscriber(destination, notifier) {
        var _this = _super.call(this, destination) || this;
        _this.hasValue = false;
        var innerSubscriber = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_2__["InnerSubscriber"](_this, undefined, undefined);
        _this.add(innerSubscriber);
        _this.innerSubscription = innerSubscriber;
        var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__["subscribeToResult"])(_this, notifier, undefined, undefined, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            _this.add(innerSubscription);
            _this.innerSubscription = innerSubscription;
        }
        return _this;
    }
    SkipUntilSubscriber.prototype._next = function (value) {
        if (this.hasValue) {
            _super.prototype._next.call(this, value);
        }
    };
    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.hasValue = true;
        if (this.innerSubscription) {
            this.innerSubscription.unsubscribe();
        }
    };
    SkipUntilSubscriber.prototype.notifyComplete = function () {
    };
    return SkipUntilSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]));
//# sourceMappingURL=skipUntil.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/skipWhile.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/skipWhile.js ***!
  \*****************************************************************/
/*! exports provided: skipWhile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "skipWhile", function() { return skipWhile; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function skipWhile(predicate) {
    return function (source) { return source.lift(new SkipWhileOperator(predicate)); };
}
var SkipWhileOperator = /*@__PURE__*/ (function () {
    function SkipWhileOperator(predicate) {
        this.predicate = predicate;
    }
    SkipWhileOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));
    };
    return SkipWhileOperator;
}());
var SkipWhileSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SkipWhileSubscriber, _super);
    function SkipWhileSubscriber(destination, predicate) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.skipping = true;
        _this.index = 0;
        return _this;
    }
    SkipWhileSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        if (this.skipping) {
            this.tryCallPredicate(value);
        }
        if (!this.skipping) {
            destination.next(value);
        }
    };
    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {
        try {
            var result = this.predicate(value, this.index++);
            this.skipping = Boolean(result);
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    return SkipWhileSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=skipWhile.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/startWith.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/startWith.js ***!
  \*****************************************************************/
/*! exports provided: startWith */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "startWith", function() { return startWith; });
/* harmony import */ var _observable_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/concat */ "./node_modules/rxjs/_esm5/internal/observable/concat.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/** PURE_IMPORTS_START _observable_concat,_util_isScheduler PURE_IMPORTS_END */


function startWith() {
    var array = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        array[_i] = arguments[_i];
    }
    var scheduler = array[array.length - 1];
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__["isScheduler"])(scheduler)) {
        array.pop();
        return function (source) { return Object(_observable_concat__WEBPACK_IMPORTED_MODULE_0__["concat"])(array, source, scheduler); };
    }
    else {
        return function (source) { return Object(_observable_concat__WEBPACK_IMPORTED_MODULE_0__["concat"])(array, source); };
    }
}
//# sourceMappingURL=startWith.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/subscribeOn.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/subscribeOn.js ***!
  \*******************************************************************/
/*! exports provided: subscribeOn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeOn", function() { return subscribeOn; });
/* harmony import */ var _observable_SubscribeOnObservable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/SubscribeOnObservable */ "./node_modules/rxjs/_esm5/internal/observable/SubscribeOnObservable.js");
/** PURE_IMPORTS_START _observable_SubscribeOnObservable PURE_IMPORTS_END */

function subscribeOn(scheduler, delay) {
    if (delay === void 0) {
        delay = 0;
    }
    return function subscribeOnOperatorFunction(source) {
        return source.lift(new SubscribeOnOperator(scheduler, delay));
    };
}
var SubscribeOnOperator = /*@__PURE__*/ (function () {
    function SubscribeOnOperator(scheduler, delay) {
        this.scheduler = scheduler;
        this.delay = delay;
    }
    SubscribeOnOperator.prototype.call = function (subscriber, source) {
        return new _observable_SubscribeOnObservable__WEBPACK_IMPORTED_MODULE_0__["SubscribeOnObservable"](source, this.delay, this.scheduler).subscribe(subscriber);
    };
    return SubscribeOnOperator;
}());
//# sourceMappingURL=subscribeOn.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/switchAll.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/switchAll.js ***!
  \*****************************************************************/
/*! exports provided: switchAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "switchAll", function() { return switchAll; });
/* harmony import */ var _switchMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./switchMap */ "./node_modules/rxjs/_esm5/internal/operators/switchMap.js");
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/identity */ "./node_modules/rxjs/_esm5/internal/util/identity.js");
/** PURE_IMPORTS_START _switchMap,_util_identity PURE_IMPORTS_END */


function switchAll() {
    return Object(_switchMap__WEBPACK_IMPORTED_MODULE_0__["switchMap"])(_util_identity__WEBPACK_IMPORTED_MODULE_1__["identity"]);
}
//# sourceMappingURL=switchAll.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/switchMap.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/switchMap.js ***!
  \*****************************************************************/
/*! exports provided: switchMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "switchMap", function() { return switchMap; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../InnerSubscriber */ "./node_modules/rxjs/_esm5/internal/InnerSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../observable/from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */






function switchMap(project, resultSelector) {
    if (typeof resultSelector === 'function') {
        return function (source) { return source.pipe(switchMap(function (a, i) { return Object(_observable_from__WEBPACK_IMPORTED_MODULE_5__["from"])(project(a, i)).pipe(Object(_map__WEBPACK_IMPORTED_MODULE_4__["map"])(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };
    }
    return function (source) { return source.lift(new SwitchMapOperator(project)); };
}
var SwitchMapOperator = /*@__PURE__*/ (function () {
    function SwitchMapOperator(project) {
        this.project = project;
    }
    SwitchMapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));
    };
    return SwitchMapOperator;
}());
var SwitchMapSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SwitchMapSubscriber, _super);
    function SwitchMapSubscriber(destination, project) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.index = 0;
        return _this;
    }
    SwitchMapSubscriber.prototype._next = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (error) {
            this.destination.error(error);
            return;
        }
        this._innerSub(result, value, index);
    };
    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {
        var innerSubscription = this.innerSubscription;
        if (innerSubscription) {
            innerSubscription.unsubscribe();
        }
        var innerSubscriber = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_2__["InnerSubscriber"](this, value, index);
        var destination = this.destination;
        destination.add(innerSubscriber);
        this.innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__["subscribeToResult"])(this, result, undefined, undefined, innerSubscriber);
        if (this.innerSubscription !== innerSubscriber) {
            destination.add(this.innerSubscription);
        }
    };
    SwitchMapSubscriber.prototype._complete = function () {
        var innerSubscription = this.innerSubscription;
        if (!innerSubscription || innerSubscription.closed) {
            _super.prototype._complete.call(this);
        }
        this.unsubscribe();
    };
    SwitchMapSubscriber.prototype._unsubscribe = function () {
        this.innerSubscription = null;
    };
    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {
        var destination = this.destination;
        destination.remove(innerSub);
        this.innerSubscription = null;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    return SwitchMapSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]));
//# sourceMappingURL=switchMap.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/switchMapTo.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/switchMapTo.js ***!
  \*******************************************************************/
/*! exports provided: switchMapTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "switchMapTo", function() { return switchMapTo; });
/* harmony import */ var _switchMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./switchMap */ "./node_modules/rxjs/_esm5/internal/operators/switchMap.js");
/** PURE_IMPORTS_START _switchMap PURE_IMPORTS_END */

function switchMapTo(innerObservable, resultSelector) {
    return resultSelector ? Object(_switchMap__WEBPACK_IMPORTED_MODULE_0__["switchMap"])(function () { return innerObservable; }, resultSelector) : Object(_switchMap__WEBPACK_IMPORTED_MODULE_0__["switchMap"])(function () { return innerObservable; });
}
//# sourceMappingURL=switchMapTo.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/take.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/take.js ***!
  \************************************************************/
/*! exports provided: take */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "take", function() { return take; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ArgumentOutOfRangeError */ "./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js");
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../observable/empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */




function take(count) {
    return function (source) {
        if (count === 0) {
            return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_3__["empty"])();
        }
        else {
            return source.lift(new TakeOperator(count));
        }
    };
}
var TakeOperator = /*@__PURE__*/ (function () {
    function TakeOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__["ArgumentOutOfRangeError"];
        }
    }
    TakeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeSubscriber(subscriber, this.total));
    };
    return TakeOperator;
}());
var TakeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TakeSubscriber, _super);
    function TakeSubscriber(destination, total) {
        var _this = _super.call(this, destination) || this;
        _this.total = total;
        _this.count = 0;
        return _this;
    }
    TakeSubscriber.prototype._next = function (value) {
        var total = this.total;
        var count = ++this.count;
        if (count <= total) {
            this.destination.next(value);
            if (count === total) {
                this.destination.complete();
                this.unsubscribe();
            }
        }
    };
    return TakeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=take.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/takeLast.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/takeLast.js ***!
  \****************************************************************/
/*! exports provided: takeLast */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "takeLast", function() { return takeLast; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ArgumentOutOfRangeError */ "./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js");
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../observable/empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */




function takeLast(count) {
    return function takeLastOperatorFunction(source) {
        if (count === 0) {
            return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_3__["empty"])();
        }
        else {
            return source.lift(new TakeLastOperator(count));
        }
    };
}
var TakeLastOperator = /*@__PURE__*/ (function () {
    function TakeLastOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__["ArgumentOutOfRangeError"];
        }
    }
    TakeLastOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));
    };
    return TakeLastOperator;
}());
var TakeLastSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TakeLastSubscriber, _super);
    function TakeLastSubscriber(destination, total) {
        var _this = _super.call(this, destination) || this;
        _this.total = total;
        _this.ring = new Array();
        _this.count = 0;
        return _this;
    }
    TakeLastSubscriber.prototype._next = function (value) {
        var ring = this.ring;
        var total = this.total;
        var count = this.count++;
        if (ring.length < total) {
            ring.push(value);
        }
        else {
            var index = count % total;
            ring[index] = value;
        }
    };
    TakeLastSubscriber.prototype._complete = function () {
        var destination = this.destination;
        var count = this.count;
        if (count > 0) {
            var total = this.count >= this.total ? this.total : this.count;
            var ring = this.ring;
            for (var i = 0; i < total; i++) {
                var idx = (count++) % total;
                destination.next(ring[idx]);
            }
        }
        destination.complete();
    };
    return TakeLastSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=takeLast.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/takeUntil.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/takeUntil.js ***!
  \*****************************************************************/
/*! exports provided: takeUntil */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "takeUntil", function() { return takeUntil; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function takeUntil(notifier) {
    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };
}
var TakeUntilOperator = /*@__PURE__*/ (function () {
    function TakeUntilOperator(notifier) {
        this.notifier = notifier;
    }
    TakeUntilOperator.prototype.call = function (subscriber, source) {
        var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);
        var notifierSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(takeUntilSubscriber, this.notifier);
        if (notifierSubscription && !takeUntilSubscriber.seenValue) {
            takeUntilSubscriber.add(notifierSubscription);
            return source.subscribe(takeUntilSubscriber);
        }
        return takeUntilSubscriber;
    };
    return TakeUntilOperator;
}());
var TakeUntilSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TakeUntilSubscriber, _super);
    function TakeUntilSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.seenValue = false;
        return _this;
    }
    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.seenValue = true;
        this.complete();
    };
    TakeUntilSubscriber.prototype.notifyComplete = function () {
    };
    return TakeUntilSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]));
//# sourceMappingURL=takeUntil.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/takeWhile.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/takeWhile.js ***!
  \*****************************************************************/
/*! exports provided: takeWhile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "takeWhile", function() { return takeWhile; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function takeWhile(predicate, inclusive) {
    if (inclusive === void 0) {
        inclusive = false;
    }
    return function (source) {
        return source.lift(new TakeWhileOperator(predicate, inclusive));
    };
}
var TakeWhileOperator = /*@__PURE__*/ (function () {
    function TakeWhileOperator(predicate, inclusive) {
        this.predicate = predicate;
        this.inclusive = inclusive;
    }
    TakeWhileOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));
    };
    return TakeWhileOperator;
}());
var TakeWhileSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TakeWhileSubscriber, _super);
    function TakeWhileSubscriber(destination, predicate, inclusive) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.inclusive = inclusive;
        _this.index = 0;
        return _this;
    }
    TakeWhileSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        var result;
        try {
            result = this.predicate(value, this.index++);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        this.nextOrComplete(value, result);
    };
    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {
        var destination = this.destination;
        if (Boolean(predicateResult)) {
            destination.next(value);
        }
        else {
            if (this.inclusive) {
                destination.next(value);
            }
            destination.complete();
        }
    };
    return TakeWhileSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=takeWhile.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/tap.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/tap.js ***!
  \***********************************************************/
/*! exports provided: tap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tap", function() { return tap; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _util_noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/noop */ "./node_modules/rxjs/_esm5/internal/util/noop.js");
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isFunction */ "./node_modules/rxjs/_esm5/internal/util/isFunction.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_util_noop,_util_isFunction PURE_IMPORTS_END */




function tap(nextOrObserver, error, complete) {
    return function tapOperatorFunction(source) {
        return source.lift(new DoOperator(nextOrObserver, error, complete));
    };
}
var DoOperator = /*@__PURE__*/ (function () {
    function DoOperator(nextOrObserver, error, complete) {
        this.nextOrObserver = nextOrObserver;
        this.error = error;
        this.complete = complete;
    }
    DoOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));
    };
    return DoOperator;
}());
var TapSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TapSubscriber, _super);
    function TapSubscriber(destination, observerOrNext, error, complete) {
        var _this = _super.call(this, destination) || this;
        _this._tapNext = _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
        _this._tapError = _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
        _this._tapComplete = _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
        _this._tapError = error || _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
        _this._tapComplete = complete || _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
        if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(observerOrNext)) {
            _this._context = _this;
            _this._tapNext = observerOrNext;
        }
        else if (observerOrNext) {
            _this._context = observerOrNext;
            _this._tapNext = observerOrNext.next || _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
            _this._tapError = observerOrNext.error || _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
            _this._tapComplete = observerOrNext.complete || _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
        }
        return _this;
    }
    TapSubscriber.prototype._next = function (value) {
        try {
            this._tapNext.call(this._context, value);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(value);
    };
    TapSubscriber.prototype._error = function (err) {
        try {
            this._tapError.call(this._context, err);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.error(err);
    };
    TapSubscriber.prototype._complete = function () {
        try {
            this._tapComplete.call(this._context);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        return this.destination.complete();
    };
    return TapSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=tap.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/throttle.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/throttle.js ***!
  \****************************************************************/
/*! exports provided: defaultThrottleConfig, throttle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultThrottleConfig", function() { return defaultThrottleConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throttle", function() { return throttle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



var defaultThrottleConfig = {
    leading: true,
    trailing: false
};
function throttle(durationSelector, config) {
    if (config === void 0) {
        config = defaultThrottleConfig;
    }
    return function (source) { return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing)); };
}
var ThrottleOperator = /*@__PURE__*/ (function () {
    function ThrottleOperator(durationSelector, leading, trailing) {
        this.durationSelector = durationSelector;
        this.leading = leading;
        this.trailing = trailing;
    }
    ThrottleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));
    };
    return ThrottleOperator;
}());
var ThrottleSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ThrottleSubscriber, _super);
    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.durationSelector = durationSelector;
        _this._leading = _leading;
        _this._trailing = _trailing;
        _this._hasValue = false;
        return _this;
    }
    ThrottleSubscriber.prototype._next = function (value) {
        this._hasValue = true;
        this._sendValue = value;
        if (!this._throttled) {
            if (this._leading) {
                this.send();
            }
            else {
                this.throttle(value);
            }
        }
    };
    ThrottleSubscriber.prototype.send = function () {
        var _a = this, _hasValue = _a._hasValue, _sendValue = _a._sendValue;
        if (_hasValue) {
            this.destination.next(_sendValue);
            this.throttle(_sendValue);
        }
        this._hasValue = false;
        this._sendValue = null;
    };
    ThrottleSubscriber.prototype.throttle = function (value) {
        var duration = this.tryDurationSelector(value);
        if (!!duration) {
            this.add(this._throttled = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(this, duration));
        }
    };
    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {
        try {
            return this.durationSelector(value);
        }
        catch (err) {
            this.destination.error(err);
            return null;
        }
    };
    ThrottleSubscriber.prototype.throttlingDone = function () {
        var _a = this, _throttled = _a._throttled, _trailing = _a._trailing;
        if (_throttled) {
            _throttled.unsubscribe();
        }
        this._throttled = null;
        if (_trailing) {
            this.send();
        }
    };
    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.throttlingDone();
    };
    ThrottleSubscriber.prototype.notifyComplete = function () {
        this.throttlingDone();
    };
    return ThrottleSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]));
//# sourceMappingURL=throttle.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/throttleTime.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/throttleTime.js ***!
  \********************************************************************/
/*! exports provided: throttleTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throttleTime", function() { return throttleTime; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _throttle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./throttle */ "./node_modules/rxjs/_esm5/internal/operators/throttle.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async,_throttle PURE_IMPORTS_END */




function throttleTime(duration, scheduler, config) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_2__["async"];
    }
    if (config === void 0) {
        config = _throttle__WEBPACK_IMPORTED_MODULE_3__["defaultThrottleConfig"];
    }
    return function (source) { return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing)); };
}
var ThrottleTimeOperator = /*@__PURE__*/ (function () {
    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {
        this.duration = duration;
        this.scheduler = scheduler;
        this.leading = leading;
        this.trailing = trailing;
    }
    ThrottleTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));
    };
    return ThrottleTimeOperator;
}());
var ThrottleTimeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ThrottleTimeSubscriber, _super);
    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {
        var _this = _super.call(this, destination) || this;
        _this.duration = duration;
        _this.scheduler = scheduler;
        _this.leading = leading;
        _this.trailing = trailing;
        _this._hasTrailingValue = false;
        _this._trailingValue = null;
        return _this;
    }
    ThrottleTimeSubscriber.prototype._next = function (value) {
        if (this.throttled) {
            if (this.trailing) {
                this._trailingValue = value;
                this._hasTrailingValue = true;
            }
        }
        else {
            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));
            if (this.leading) {
                this.destination.next(value);
            }
            else if (this.trailing) {
                this._trailingValue = value;
                this._hasTrailingValue = true;
            }
        }
    };
    ThrottleTimeSubscriber.prototype._complete = function () {
        if (this._hasTrailingValue) {
            this.destination.next(this._trailingValue);
            this.destination.complete();
        }
        else {
            this.destination.complete();
        }
    };
    ThrottleTimeSubscriber.prototype.clearThrottle = function () {
        var throttled = this.throttled;
        if (throttled) {
            if (this.trailing && this._hasTrailingValue) {
                this.destination.next(this._trailingValue);
                this._trailingValue = null;
                this._hasTrailingValue = false;
            }
            throttled.unsubscribe();
            this.remove(throttled);
            this.throttled = null;
        }
    };
    return ThrottleTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
function dispatchNext(arg) {
    var subscriber = arg.subscriber;
    subscriber.clearThrottle();
}
//# sourceMappingURL=throttleTime.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js ***!
  \********************************************************************/
/*! exports provided: throwIfEmpty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throwIfEmpty", function() { return throwIfEmpty; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/EmptyError */ "./node_modules/rxjs/_esm5/internal/util/EmptyError.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_util_EmptyError,_Subscriber PURE_IMPORTS_END */



function throwIfEmpty(errorFactory) {
    if (errorFactory === void 0) {
        errorFactory = defaultErrorFactory;
    }
    return function (source) {
        return source.lift(new ThrowIfEmptyOperator(errorFactory));
    };
}
var ThrowIfEmptyOperator = /*@__PURE__*/ (function () {
    function ThrowIfEmptyOperator(errorFactory) {
        this.errorFactory = errorFactory;
    }
    ThrowIfEmptyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));
    };
    return ThrowIfEmptyOperator;
}());
var ThrowIfEmptySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ThrowIfEmptySubscriber, _super);
    function ThrowIfEmptySubscriber(destination, errorFactory) {
        var _this = _super.call(this, destination) || this;
        _this.errorFactory = errorFactory;
        _this.hasValue = false;
        return _this;
    }
    ThrowIfEmptySubscriber.prototype._next = function (value) {
        this.hasValue = true;
        this.destination.next(value);
    };
    ThrowIfEmptySubscriber.prototype._complete = function () {
        if (!this.hasValue) {
            var err = void 0;
            try {
                err = this.errorFactory();
            }
            catch (e) {
                err = e;
            }
            this.destination.error(err);
        }
        else {
            return this.destination.complete();
        }
    };
    return ThrowIfEmptySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_2__["Subscriber"]));
function defaultErrorFactory() {
    return new _util_EmptyError__WEBPACK_IMPORTED_MODULE_1__["EmptyError"]();
}
//# sourceMappingURL=throwIfEmpty.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/timeInterval.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/timeInterval.js ***!
  \********************************************************************/
/*! exports provided: timeInterval, TimeInterval */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return timeInterval; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeInterval", function() { return TimeInterval; });
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _scan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scan */ "./node_modules/rxjs/_esm5/internal/operators/scan.js");
/* harmony import */ var _observable_defer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/defer */ "./node_modules/rxjs/_esm5/internal/observable/defer.js");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/** PURE_IMPORTS_START _scheduler_async,_scan,_observable_defer,_map PURE_IMPORTS_END */




function timeInterval(scheduler) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__["async"];
    }
    return function (source) {
        return Object(_observable_defer__WEBPACK_IMPORTED_MODULE_2__["defer"])(function () {
            return source.pipe(Object(_scan__WEBPACK_IMPORTED_MODULE_1__["scan"])(function (_a, value) {
                var current = _a.current;
                return ({ value: value, current: scheduler.now(), last: current });
            }, { current: scheduler.now(), value: undefined, last: undefined }), Object(_map__WEBPACK_IMPORTED_MODULE_3__["map"])(function (_a) {
                var current = _a.current, last = _a.last, value = _a.value;
                return new TimeInterval(value, current - last);
            }));
        });
    };
}
var TimeInterval = /*@__PURE__*/ (function () {
    function TimeInterval(value, interval) {
        this.value = value;
        this.interval = interval;
    }
    return TimeInterval;
}());

//# sourceMappingURL=timeInterval.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/timeout.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/timeout.js ***!
  \***************************************************************/
/*! exports provided: timeout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeout", function() { return timeout; });
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _util_TimeoutError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/TimeoutError */ "./node_modules/rxjs/_esm5/internal/util/TimeoutError.js");
/* harmony import */ var _timeoutWith__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timeoutWith */ "./node_modules/rxjs/_esm5/internal/operators/timeoutWith.js");
/* harmony import */ var _observable_throwError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../observable/throwError */ "./node_modules/rxjs/_esm5/internal/observable/throwError.js");
/** PURE_IMPORTS_START _scheduler_async,_util_TimeoutError,_timeoutWith,_observable_throwError PURE_IMPORTS_END */




function timeout(due, scheduler) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__["async"];
    }
    return Object(_timeoutWith__WEBPACK_IMPORTED_MODULE_2__["timeoutWith"])(due, Object(_observable_throwError__WEBPACK_IMPORTED_MODULE_3__["throwError"])(new _util_TimeoutError__WEBPACK_IMPORTED_MODULE_1__["TimeoutError"]()), scheduler);
}
//# sourceMappingURL=timeout.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/timeoutWith.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/timeoutWith.js ***!
  \*******************************************************************/
/*! exports provided: timeoutWith */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeoutWith", function() { return timeoutWith; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _util_isDate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isDate */ "./node_modules/rxjs/_esm5/internal/util/isDate.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function timeoutWith(due, withObservable, scheduler) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
    }
    return function (source) {
        var absoluteTimeout = Object(_util_isDate__WEBPACK_IMPORTED_MODULE_2__["isDate"])(due);
        var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);
        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));
    };
}
var TimeoutWithOperator = /*@__PURE__*/ (function () {
    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {
        this.waitFor = waitFor;
        this.absoluteTimeout = absoluteTimeout;
        this.withObservable = withObservable;
        this.scheduler = scheduler;
    }
    TimeoutWithOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));
    };
    return TimeoutWithOperator;
}());
var TimeoutWithSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TimeoutWithSubscriber, _super);
    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.absoluteTimeout = absoluteTimeout;
        _this.waitFor = waitFor;
        _this.withObservable = withObservable;
        _this.scheduler = scheduler;
        _this.action = null;
        _this.scheduleTimeout();
        return _this;
    }
    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {
        var withObservable = subscriber.withObservable;
        subscriber._unsubscribeAndRecycle();
        subscriber.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(subscriber, withObservable));
    };
    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {
        var action = this.action;
        if (action) {
            this.action = action.schedule(this, this.waitFor);
        }
        else {
            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));
        }
    };
    TimeoutWithSubscriber.prototype._next = function (value) {
        if (!this.absoluteTimeout) {
            this.scheduleTimeout();
        }
        _super.prototype._next.call(this, value);
    };
    TimeoutWithSubscriber.prototype._unsubscribe = function () {
        this.action = null;
        this.scheduler = null;
        this.withObservable = null;
    };
    return TimeoutWithSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]));
//# sourceMappingURL=timeoutWith.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/timestamp.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/timestamp.js ***!
  \*****************************************************************/
/*! exports provided: timestamp, Timestamp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timestamp", function() { return timestamp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Timestamp", function() { return Timestamp; });
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/** PURE_IMPORTS_START _scheduler_async,_map PURE_IMPORTS_END */


function timestamp(scheduler) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__["async"];
    }
    return Object(_map__WEBPACK_IMPORTED_MODULE_1__["map"])(function (value) { return new Timestamp(value, scheduler.now()); });
}
var Timestamp = /*@__PURE__*/ (function () {
    function Timestamp(value, timestamp) {
        this.value = value;
        this.timestamp = timestamp;
    }
    return Timestamp;
}());

//# sourceMappingURL=timestamp.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/toArray.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/toArray.js ***!
  \***************************************************************/
/*! exports provided: toArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return toArray; });
/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reduce */ "./node_modules/rxjs/_esm5/internal/operators/reduce.js");
/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */

function toArrayReducer(arr, item, index) {
    if (index === 0) {
        return [item];
    }
    arr.push(item);
    return arr;
}
function toArray() {
    return Object(_reduce__WEBPACK_IMPORTED_MODULE_0__["reduce"])(toArrayReducer, []);
}
//# sourceMappingURL=toArray.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/window.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/window.js ***!
  \**************************************************************/
/*! exports provided: window */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "window", function() { return window; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function window(windowBoundaries) {
    return function windowOperatorFunction(source) {
        return source.lift(new WindowOperator(windowBoundaries));
    };
}
var WindowOperator = /*@__PURE__*/ (function () {
    function WindowOperator(windowBoundaries) {
        this.windowBoundaries = windowBoundaries;
    }
    WindowOperator.prototype.call = function (subscriber, source) {
        var windowSubscriber = new WindowSubscriber(subscriber);
        var sourceSubscription = source.subscribe(windowSubscriber);
        if (!sourceSubscription.closed) {
            windowSubscriber.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__["subscribeToResult"])(windowSubscriber, this.windowBoundaries));
        }
        return sourceSubscription;
    };
    return WindowOperator;
}());
var WindowSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WindowSubscriber, _super);
    function WindowSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.window = new _Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        destination.next(_this.window);
        return _this;
    }
    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openWindow();
    };
    WindowSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    WindowSubscriber.prototype.notifyComplete = function (innerSub) {
        this._complete();
    };
    WindowSubscriber.prototype._next = function (value) {
        this.window.next(value);
    };
    WindowSubscriber.prototype._error = function (err) {
        this.window.error(err);
        this.destination.error(err);
    };
    WindowSubscriber.prototype._complete = function () {
        this.window.complete();
        this.destination.complete();
    };
    WindowSubscriber.prototype._unsubscribe = function () {
        this.window = null;
    };
    WindowSubscriber.prototype.openWindow = function () {
        var prevWindow = this.window;
        if (prevWindow) {
            prevWindow.complete();
        }
        var destination = this.destination;
        var newWindow = this.window = new _Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        destination.next(newWindow);
    };
    return WindowSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__["OuterSubscriber"]));
//# sourceMappingURL=window.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/windowCount.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/windowCount.js ***!
  \*******************************************************************/
/*! exports provided: windowCount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowCount", function() { return windowCount; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */



function windowCount(windowSize, startWindowEvery) {
    if (startWindowEvery === void 0) {
        startWindowEvery = 0;
    }
    return function windowCountOperatorFunction(source) {
        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));
    };
}
var WindowCountOperator = /*@__PURE__*/ (function () {
    function WindowCountOperator(windowSize, startWindowEvery) {
        this.windowSize = windowSize;
        this.startWindowEvery = startWindowEvery;
    }
    WindowCountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));
    };
    return WindowCountOperator;
}());
var WindowCountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WindowCountSubscriber, _super);
    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.windowSize = windowSize;
        _this.startWindowEvery = startWindowEvery;
        _this.windows = [new _Subject__WEBPACK_IMPORTED_MODULE_2__["Subject"]()];
        _this.count = 0;
        destination.next(_this.windows[0]);
        return _this;
    }
    WindowCountSubscriber.prototype._next = function (value) {
        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;
        var destination = this.destination;
        var windowSize = this.windowSize;
        var windows = this.windows;
        var len = windows.length;
        for (var i = 0; i < len && !this.closed; i++) {
            windows[i].next(value);
        }
        var c = this.count - windowSize + 1;
        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {
            windows.shift().complete();
        }
        if (++this.count % startWindowEvery === 0 && !this.closed) {
            var window_1 = new _Subject__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
            windows.push(window_1);
            destination.next(window_1);
        }
    };
    WindowCountSubscriber.prototype._error = function (err) {
        var windows = this.windows;
        if (windows) {
            while (windows.length > 0 && !this.closed) {
                windows.shift().error(err);
            }
        }
        this.destination.error(err);
    };
    WindowCountSubscriber.prototype._complete = function () {
        var windows = this.windows;
        if (windows) {
            while (windows.length > 0 && !this.closed) {
                windows.shift().complete();
            }
        }
        this.destination.complete();
    };
    WindowCountSubscriber.prototype._unsubscribe = function () {
        this.count = 0;
        this.windows = null;
    };
    return WindowCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=windowCount.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/windowTime.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/windowTime.js ***!
  \******************************************************************/
/*! exports provided: windowTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowTime", function() { return windowTime; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/isNumeric */ "./node_modules/rxjs/_esm5/internal/util/isNumeric.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/** PURE_IMPORTS_START tslib,_Subject,_scheduler_async,_Subscriber,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */






function windowTime(windowTimeSpan) {
    var scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_2__["async"];
    var windowCreationInterval = null;
    var maxWindowSize = Number.POSITIVE_INFINITY;
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_5__["isScheduler"])(arguments[3])) {
        scheduler = arguments[3];
    }
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_5__["isScheduler"])(arguments[2])) {
        scheduler = arguments[2];
    }
    else if (Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_4__["isNumeric"])(arguments[2])) {
        maxWindowSize = arguments[2];
    }
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_5__["isScheduler"])(arguments[1])) {
        scheduler = arguments[1];
    }
    else if (Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_4__["isNumeric"])(arguments[1])) {
        windowCreationInterval = arguments[1];
    }
    return function windowTimeOperatorFunction(source) {
        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));
    };
}
var WindowTimeOperator = /*@__PURE__*/ (function () {
    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
        this.windowTimeSpan = windowTimeSpan;
        this.windowCreationInterval = windowCreationInterval;
        this.maxWindowSize = maxWindowSize;
        this.scheduler = scheduler;
    }
    WindowTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));
    };
    return WindowTimeOperator;
}());
var CountedSubject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](CountedSubject, _super);
    function CountedSubject() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._numberOfNextedValues = 0;
        return _this;
    }
    CountedSubject.prototype.next = function (value) {
        this._numberOfNextedValues++;
        _super.prototype.next.call(this, value);
    };
    Object.defineProperty(CountedSubject.prototype, "numberOfNextedValues", {
        get: function () {
            return this._numberOfNextedValues;
        },
        enumerable: true,
        configurable: true
    });
    return CountedSubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]));
var WindowTimeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WindowTimeSubscriber, _super);
    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.windowTimeSpan = windowTimeSpan;
        _this.windowCreationInterval = windowCreationInterval;
        _this.maxWindowSize = maxWindowSize;
        _this.scheduler = scheduler;
        _this.windows = [];
        var window = _this.openWindow();
        if (windowCreationInterval !== null && windowCreationInterval >= 0) {
            var closeState = { subscriber: _this, window: window, context: null };
            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: _this, scheduler: scheduler };
            _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));
            _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));
        }
        else {
            var timeSpanOnlyState = { subscriber: _this, window: window, windowTimeSpan: windowTimeSpan };
            _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));
        }
        return _this;
    }
    WindowTimeSubscriber.prototype._next = function (value) {
        var windows = this.windows;
        var len = windows.length;
        for (var i = 0; i < len; i++) {
            var window_1 = windows[i];
            if (!window_1.closed) {
                window_1.next(value);
                if (window_1.numberOfNextedValues >= this.maxWindowSize) {
                    this.closeWindow(window_1);
                }
            }
        }
    };
    WindowTimeSubscriber.prototype._error = function (err) {
        var windows = this.windows;
        while (windows.length > 0) {
            windows.shift().error(err);
        }
        this.destination.error(err);
    };
    WindowTimeSubscriber.prototype._complete = function () {
        var windows = this.windows;
        while (windows.length > 0) {
            var window_2 = windows.shift();
            if (!window_2.closed) {
                window_2.complete();
            }
        }
        this.destination.complete();
    };
    WindowTimeSubscriber.prototype.openWindow = function () {
        var window = new CountedSubject();
        this.windows.push(window);
        var destination = this.destination;
        destination.next(window);
        return window;
    };
    WindowTimeSubscriber.prototype.closeWindow = function (window) {
        window.complete();
        var windows = this.windows;
        windows.splice(windows.indexOf(window), 1);
    };
    return WindowTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__["Subscriber"]));
function dispatchWindowTimeSpanOnly(state) {
    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;
    if (window) {
        subscriber.closeWindow(window);
    }
    state.window = subscriber.openWindow();
    this.schedule(state, windowTimeSpan);
}
function dispatchWindowCreation(state) {
    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;
    var window = subscriber.openWindow();
    var action = this;
    var context = { action: action, subscription: null };
    var timeSpanState = { subscriber: subscriber, window: window, context: context };
    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);
    action.add(context.subscription);
    action.schedule(state, windowCreationInterval);
}
function dispatchWindowClose(state) {
    var subscriber = state.subscriber, window = state.window, context = state.context;
    if (context && context.action && context.subscription) {
        context.action.remove(context.subscription);
    }
    subscriber.closeWindow(window);
}
//# sourceMappingURL=windowTime.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/windowToggle.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/windowToggle.js ***!
  \********************************************************************/
/*! exports provided: windowToggle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowToggle", function() { return windowToggle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function windowToggle(openings, closingSelector) {
    return function (source) { return source.lift(new WindowToggleOperator(openings, closingSelector)); };
}
var WindowToggleOperator = /*@__PURE__*/ (function () {
    function WindowToggleOperator(openings, closingSelector) {
        this.openings = openings;
        this.closingSelector = closingSelector;
    }
    WindowToggleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));
    };
    return WindowToggleOperator;
}());
var WindowToggleSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WindowToggleSubscriber, _super);
    function WindowToggleSubscriber(destination, openings, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.openings = openings;
        _this.closingSelector = closingSelector;
        _this.contexts = [];
        _this.add(_this.openSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(_this, openings, openings));
        return _this;
    }
    WindowToggleSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        if (contexts) {
            var len = contexts.length;
            for (var i = 0; i < len; i++) {
                contexts[i].window.next(value);
            }
        }
    };
    WindowToggleSubscriber.prototype._error = function (err) {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context_1 = contexts[index];
                context_1.window.error(err);
                context_1.subscription.unsubscribe();
            }
        }
        _super.prototype._error.call(this, err);
    };
    WindowToggleSubscriber.prototype._complete = function () {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context_2 = contexts[index];
                context_2.window.complete();
                context_2.subscription.unsubscribe();
            }
        }
        _super.prototype._complete.call(this);
    };
    WindowToggleSubscriber.prototype._unsubscribe = function () {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context_3 = contexts[index];
                context_3.window.unsubscribe();
                context_3.subscription.unsubscribe();
            }
        }
    };
    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (outerValue === this.openings) {
            var closingNotifier = void 0;
            try {
                var closingSelector = this.closingSelector;
                closingNotifier = closingSelector(innerValue);
            }
            catch (e) {
                return this.error(e);
            }
            var window_1 = new _Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
            var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"]();
            var context_4 = { window: window_1, subscription: subscription };
            this.contexts.push(context_4);
            var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(this, closingNotifier, context_4);
            if (innerSubscription.closed) {
                this.closeWindow(this.contexts.length - 1);
            }
            else {
                innerSubscription.context = context_4;
                subscription.add(innerSubscription);
            }
            this.destination.next(window_1);
        }
        else {
            this.closeWindow(this.contexts.indexOf(outerValue));
        }
    };
    WindowToggleSubscriber.prototype.notifyError = function (err) {
        this.error(err);
    };
    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {
        if (inner !== this.openSubscription) {
            this.closeWindow(this.contexts.indexOf(inner.context));
        }
    };
    WindowToggleSubscriber.prototype.closeWindow = function (index) {
        if (index === -1) {
            return;
        }
        var contexts = this.contexts;
        var context = contexts[index];
        var window = context.window, subscription = context.subscription;
        contexts.splice(index, 1);
        window.complete();
        subscription.unsubscribe();
    };
    return WindowToggleSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]));
//# sourceMappingURL=windowToggle.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/windowWhen.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/windowWhen.js ***!
  \******************************************************************/
/*! exports provided: windowWhen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowWhen", function() { return windowWhen; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function windowWhen(closingSelector) {
    return function windowWhenOperatorFunction(source) {
        return source.lift(new WindowOperator(closingSelector));
    };
}
var WindowOperator = /*@__PURE__*/ (function () {
    function WindowOperator(closingSelector) {
        this.closingSelector = closingSelector;
    }
    WindowOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));
    };
    return WindowOperator;
}());
var WindowSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WindowSubscriber, _super);
    function WindowSubscriber(destination, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.closingSelector = closingSelector;
        _this.openWindow();
        return _this;
    }
    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openWindow(innerSub);
    };
    WindowSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    WindowSubscriber.prototype.notifyComplete = function (innerSub) {
        this.openWindow(innerSub);
    };
    WindowSubscriber.prototype._next = function (value) {
        this.window.next(value);
    };
    WindowSubscriber.prototype._error = function (err) {
        this.window.error(err);
        this.destination.error(err);
        this.unsubscribeClosingNotification();
    };
    WindowSubscriber.prototype._complete = function () {
        this.window.complete();
        this.destination.complete();
        this.unsubscribeClosingNotification();
    };
    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {
        if (this.closingNotification) {
            this.closingNotification.unsubscribe();
        }
    };
    WindowSubscriber.prototype.openWindow = function (innerSub) {
        if (innerSub === void 0) {
            innerSub = null;
        }
        if (innerSub) {
            this.remove(innerSub);
            innerSub.unsubscribe();
        }
        var prevWindow = this.window;
        if (prevWindow) {
            prevWindow.complete();
        }
        var window = this.window = new _Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        this.destination.next(window);
        var closingNotifier;
        try {
            var closingSelector = this.closingSelector;
            closingNotifier = closingSelector();
        }
        catch (e) {
            this.destination.error(e);
            this.window.error(e);
            return;
        }
        this.add(this.closingNotification = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__["subscribeToResult"])(this, closingNotifier));
    };
    return WindowSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__["OuterSubscriber"]));
//# sourceMappingURL=windowWhen.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/withLatestFrom.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/withLatestFrom.js ***!
  \**********************************************************************/
/*! exports provided: withLatestFrom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "withLatestFrom", function() { return withLatestFrom; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function withLatestFrom() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return function (source) {
        var project;
        if (typeof args[args.length - 1] === 'function') {
            project = args.pop();
        }
        var observables = args;
        return source.lift(new WithLatestFromOperator(observables, project));
    };
}
var WithLatestFromOperator = /*@__PURE__*/ (function () {
    function WithLatestFromOperator(observables, project) {
        this.observables = observables;
        this.project = project;
    }
    WithLatestFromOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));
    };
    return WithLatestFromOperator;
}());
var WithLatestFromSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WithLatestFromSubscriber, _super);
    function WithLatestFromSubscriber(destination, observables, project) {
        var _this = _super.call(this, destination) || this;
        _this.observables = observables;
        _this.project = project;
        _this.toRespond = [];
        var len = observables.length;
        _this.values = new Array(len);
        for (var i = 0; i < len; i++) {
            _this.toRespond.push(i);
        }
        for (var i = 0; i < len; i++) {
            var observable = observables[i];
            _this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(_this, observable, observable, i));
        }
        return _this;
    }
    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values[outerIndex] = innerValue;
        var toRespond = this.toRespond;
        if (toRespond.length > 0) {
            var found = toRespond.indexOf(outerIndex);
            if (found !== -1) {
                toRespond.splice(found, 1);
            }
        }
    };
    WithLatestFromSubscriber.prototype.notifyComplete = function () {
    };
    WithLatestFromSubscriber.prototype._next = function (value) {
        if (this.toRespond.length === 0) {
            var args = [value].concat(this.values);
            if (this.project) {
                this._tryProject(args);
            }
            else {
                this.destination.next(args);
            }
        }
    };
    WithLatestFromSubscriber.prototype._tryProject = function (args) {
        var result;
        try {
            result = this.project.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return WithLatestFromSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]));
//# sourceMappingURL=withLatestFrom.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/zip.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/zip.js ***!
  \***********************************************************/
/*! exports provided: zip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return zip; });
/* harmony import */ var _observable_zip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/zip */ "./node_modules/rxjs/_esm5/internal/observable/zip.js");
/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */

function zip() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function zipOperatorFunction(source) {
        return source.lift.call(_observable_zip__WEBPACK_IMPORTED_MODULE_0__["zip"].apply(void 0, [source].concat(observables)));
    };
}
//# sourceMappingURL=zip.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/zipAll.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/zipAll.js ***!
  \**************************************************************/
/*! exports provided: zipAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zipAll", function() { return zipAll; });
/* harmony import */ var _observable_zip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/zip */ "./node_modules/rxjs/_esm5/internal/observable/zip.js");
/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */

function zipAll(project) {
    return function (source) { return source.lift(new _observable_zip__WEBPACK_IMPORTED_MODULE_0__["ZipOperator"](project)); };
}
//# sourceMappingURL=zipAll.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js ***!
  \*********************************************************************/
/*! exports provided: scheduleArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheduleArray", function() { return scheduleArray; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */


function scheduleArray(input, scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
        var i = 0;
        sub.add(scheduler.schedule(function () {
            if (i === input.length) {
                subscriber.complete();
                return;
            }
            subscriber.next(input[i++]);
            if (!subscriber.closed) {
                sub.add(this.schedule());
            }
        }));
        return sub;
    });
}
//# sourceMappingURL=scheduleArray.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js":
/*!************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js ***!
  \************************************************************************/
/*! exports provided: scheduleIterable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheduleIterable", function() { return scheduleIterable; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../symbol/iterator */ "./node_modules/rxjs/_esm5/internal/symbol/iterator.js");
/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator PURE_IMPORTS_END */



function scheduleIterable(input, scheduler) {
    if (!input) {
        throw new Error('Iterable cannot be null');
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
        var iterator;
        sub.add(function () {
            if (iterator && typeof iterator.return === 'function') {
                iterator.return();
            }
        });
        sub.add(scheduler.schedule(function () {
            iterator = input[_symbol_iterator__WEBPACK_IMPORTED_MODULE_2__["iterator"]]();
            sub.add(scheduler.schedule(function () {
                if (subscriber.closed) {
                    return;
                }
                var value;
                var done;
                try {
                    var result = iterator.next();
                    value = result.value;
                    done = result.done;
                }
                catch (err) {
                    subscriber.error(err);
                    return;
                }
                if (done) {
                    subscriber.complete();
                }
                else {
                    subscriber.next(value);
                    this.schedule();
                }
            }));
        }));
        return sub;
    });
}
//# sourceMappingURL=scheduleIterable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js":
/*!**************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js ***!
  \**************************************************************************/
/*! exports provided: scheduleObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheduleObservable", function() { return scheduleObservable; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../symbol/observable */ "./node_modules/rxjs/_esm5/internal/symbol/observable.js");
/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable PURE_IMPORTS_END */



function scheduleObservable(input, scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
        sub.add(scheduler.schedule(function () {
            var observable = input[_symbol_observable__WEBPACK_IMPORTED_MODULE_2__["observable"]]();
            sub.add(observable.subscribe({
                next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },
                error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },
                complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },
            }));
        }));
        return sub;
    });
}
//# sourceMappingURL=scheduleObservable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js":
/*!***********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js ***!
  \***********************************************************************/
/*! exports provided: schedulePromise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "schedulePromise", function() { return schedulePromise; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */


function schedulePromise(input, scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
        sub.add(scheduler.schedule(function () {
            return input.then(function (value) {
                sub.add(scheduler.schedule(function () {
                    subscriber.next(value);
                    sub.add(scheduler.schedule(function () { return subscriber.complete(); }));
                }));
            }, function (err) {
                sub.add(scheduler.schedule(function () { return subscriber.error(err); }));
            });
        }));
        return sub;
    });
}
//# sourceMappingURL=schedulePromise.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js ***!
  \*****************************************************************/
/*! exports provided: scheduled */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheduled", function() { return scheduled; });
/* harmony import */ var _scheduleObservable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scheduleObservable */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js");
/* harmony import */ var _schedulePromise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schedulePromise */ "./node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js");
/* harmony import */ var _scheduleArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scheduleArray */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js");
/* harmony import */ var _scheduleIterable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scheduleIterable */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js");
/* harmony import */ var _util_isInteropObservable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/isInteropObservable */ "./node_modules/rxjs/_esm5/internal/util/isInteropObservable.js");
/* harmony import */ var _util_isPromise__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isPromise */ "./node_modules/rxjs/_esm5/internal/util/isPromise.js");
/* harmony import */ var _util_isArrayLike__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/isArrayLike */ "./node_modules/rxjs/_esm5/internal/util/isArrayLike.js");
/* harmony import */ var _util_isIterable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/isIterable */ "./node_modules/rxjs/_esm5/internal/util/isIterable.js");
/** PURE_IMPORTS_START _scheduleObservable,_schedulePromise,_scheduleArray,_scheduleIterable,_util_isInteropObservable,_util_isPromise,_util_isArrayLike,_util_isIterable PURE_IMPORTS_END */








function scheduled(input, scheduler) {
    if (input != null) {
        if (Object(_util_isInteropObservable__WEBPACK_IMPORTED_MODULE_4__["isInteropObservable"])(input)) {
            return Object(_scheduleObservable__WEBPACK_IMPORTED_MODULE_0__["scheduleObservable"])(input, scheduler);
        }
        else if (Object(_util_isPromise__WEBPACK_IMPORTED_MODULE_5__["isPromise"])(input)) {
            return Object(_schedulePromise__WEBPACK_IMPORTED_MODULE_1__["schedulePromise"])(input, scheduler);
        }
        else if (Object(_util_isArrayLike__WEBPACK_IMPORTED_MODULE_6__["isArrayLike"])(input)) {
            return Object(_scheduleArray__WEBPACK_IMPORTED_MODULE_2__["scheduleArray"])(input, scheduler);
        }
        else if (Object(_util_isIterable__WEBPACK_IMPORTED_MODULE_7__["isIterable"])(input) || typeof input === 'string') {
            return Object(_scheduleIterable__WEBPACK_IMPORTED_MODULE_3__["scheduleIterable"])(input, scheduler);
        }
    }
    throw new TypeError((input !== null && typeof input || input) + ' is not observable');
}
//# sourceMappingURL=scheduled.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/Action.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/Action.js ***!
  \**************************************************************/
/*! exports provided: Action */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Action", function() { return Action; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */


var Action = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Action, _super);
    function Action(scheduler, work) {
        return _super.call(this) || this;
    }
    Action.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        return this;
    };
    return Action;
}(_Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]));

//# sourceMappingURL=Action.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js ***!
  \******************************************************************/
/*! exports provided: AsapAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsapAction", function() { return AsapAction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util_Immediate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Immediate */ "./node_modules/rxjs/_esm5/internal/util/Immediate.js");
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AsyncAction */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js");
/** PURE_IMPORTS_START tslib,_util_Immediate,_AsyncAction PURE_IMPORTS_END */



var AsapAction = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsapAction, _super);
    function AsapAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        scheduler.actions.push(this);
        return scheduler.scheduled || (scheduler.scheduled = _util_Immediate__WEBPACK_IMPORTED_MODULE_1__["Immediate"].setImmediate(scheduler.flush.bind(scheduler, null)));
    };
    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        if (scheduler.actions.length === 0) {
            _util_Immediate__WEBPACK_IMPORTED_MODULE_1__["Immediate"].clearImmediate(id);
            scheduler.scheduled = undefined;
        }
        return undefined;
    };
    return AsapAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_2__["AsyncAction"]));

//# sourceMappingURL=AsapAction.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js ***!
  \*********************************************************************/
/*! exports provided: AsapScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsapScheduler", function() { return AsapScheduler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js");
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */


var AsapScheduler = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsapScheduler, _super);
    function AsapScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AsapScheduler.prototype.flush = function (action) {
        this.active = true;
        this.scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        var count = actions.length;
        action = action || actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsapScheduler;
}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__["AsyncScheduler"]));

//# sourceMappingURL=AsapScheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js ***!
  \*******************************************************************/
/*! exports provided: AsyncAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncAction", function() { return AsyncAction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Action__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Action */ "./node_modules/rxjs/_esm5/internal/scheduler/Action.js");
/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */


var AsyncAction = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsyncAction, _super);
    function AsyncAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        _this.pending = false;
        return _this;
    }
    AsyncAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (this.closed) {
            return this;
        }
        this.state = state;
        var id = this.id;
        var scheduler = this.scheduler;
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, delay);
        }
        this.pending = true;
        this.delay = delay;
        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);
        return this;
    };
    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        return setInterval(scheduler.flush.bind(scheduler, this), delay);
    };
    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay !== null && this.delay === delay && this.pending === false) {
            return id;
        }
        clearInterval(id);
        return undefined;
    };
    AsyncAction.prototype.execute = function (state, delay) {
        if (this.closed) {
            return new Error('executing a cancelled action');
        }
        this.pending = false;
        var error = this._execute(state, delay);
        if (error) {
            return error;
        }
        else if (this.pending === false && this.id != null) {
            this.id = this.recycleAsyncId(this.scheduler, this.id, null);
        }
    };
    AsyncAction.prototype._execute = function (state, delay) {
        var errored = false;
        var errorValue = undefined;
        try {
            this.work(state);
        }
        catch (e) {
            errored = true;
            errorValue = !!e && e || new Error(e);
        }
        if (errored) {
            this.unsubscribe();
            return errorValue;
        }
    };
    AsyncAction.prototype._unsubscribe = function () {
        var id = this.id;
        var scheduler = this.scheduler;
        var actions = scheduler.actions;
        var index = actions.indexOf(this);
        this.work = null;
        this.state = null;
        this.pending = false;
        this.scheduler = null;
        if (index !== -1) {
            actions.splice(index, 1);
        }
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, null);
        }
        this.delay = null;
    };
    return AsyncAction;
}(_Action__WEBPACK_IMPORTED_MODULE_1__["Action"]));

//# sourceMappingURL=AsyncAction.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js ***!
  \**********************************************************************/
/*! exports provided: AsyncScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncScheduler", function() { return AsyncScheduler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Scheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Scheduler */ "./node_modules/rxjs/_esm5/internal/Scheduler.js");
/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */


var AsyncScheduler = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsyncScheduler, _super);
    function AsyncScheduler(SchedulerAction, now) {
        if (now === void 0) {
            now = _Scheduler__WEBPACK_IMPORTED_MODULE_1__["Scheduler"].now;
        }
        var _this = _super.call(this, SchedulerAction, function () {
            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {
                return AsyncScheduler.delegate.now();
            }
            else {
                return now();
            }
        }) || this;
        _this.actions = [];
        _this.active = false;
        _this.scheduled = undefined;
        return _this;
    }
    AsyncScheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) {
            delay = 0;
        }
        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {
            return AsyncScheduler.delegate.schedule(work, delay, state);
        }
        else {
            return _super.prototype.schedule.call(this, work, delay, state);
        }
    };
    AsyncScheduler.prototype.flush = function (action) {
        var actions = this.actions;
        if (this.active) {
            actions.push(action);
            return;
        }
        var error;
        this.active = true;
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (action = actions.shift());
        this.active = false;
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsyncScheduler;
}(_Scheduler__WEBPACK_IMPORTED_MODULE_1__["Scheduler"]));

//# sourceMappingURL=AsyncScheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js ***!
  \*******************************************************************/
/*! exports provided: QueueAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueueAction", function() { return QueueAction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncAction */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js");
/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */


var QueueAction = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](QueueAction, _super);
    function QueueAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    QueueAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay > 0) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        this.delay = delay;
        this.state = state;
        this.scheduler.flush(this);
        return this;
    };
    QueueAction.prototype.execute = function (state, delay) {
        return (delay > 0 || this.closed) ?
            _super.prototype.execute.call(this, state, delay) :
            this._execute(state, delay);
    };
    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        return scheduler.flush(this);
    };
    return QueueAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_1__["AsyncAction"]));

//# sourceMappingURL=QueueAction.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js ***!
  \**********************************************************************/
/*! exports provided: QueueScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueueScheduler", function() { return QueueScheduler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js");
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */


var QueueScheduler = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](QueueScheduler, _super);
    function QueueScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return QueueScheduler;
}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__["AsyncScheduler"]));

//# sourceMappingURL=QueueScheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/asap.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/asap.js ***!
  \************************************************************/
/*! exports provided: asap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asap", function() { return asap; });
/* harmony import */ var _AsapAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AsapAction */ "./node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js");
/* harmony import */ var _AsapScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsapScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js");
/** PURE_IMPORTS_START _AsapAction,_AsapScheduler PURE_IMPORTS_END */


var asap = /*@__PURE__*/ new _AsapScheduler__WEBPACK_IMPORTED_MODULE_1__["AsapScheduler"](_AsapAction__WEBPACK_IMPORTED_MODULE_0__["AsapAction"]);
//# sourceMappingURL=asap.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/async.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/async.js ***!
  \*************************************************************/
/*! exports provided: async */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "async", function() { return async; });
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AsyncAction */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js");
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js");
/** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */


var async = /*@__PURE__*/ new _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__["AsyncScheduler"](_AsyncAction__WEBPACK_IMPORTED_MODULE_0__["AsyncAction"]);
//# sourceMappingURL=async.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/queue.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/queue.js ***!
  \*************************************************************/
/*! exports provided: queue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queue", function() { return queue; });
/* harmony import */ var _QueueAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./QueueAction */ "./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js");
/* harmony import */ var _QueueScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./QueueScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js");
/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */


var queue = /*@__PURE__*/ new _QueueScheduler__WEBPACK_IMPORTED_MODULE_1__["QueueScheduler"](_QueueAction__WEBPACK_IMPORTED_MODULE_0__["QueueAction"]);
//# sourceMappingURL=queue.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/symbol/iterator.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/symbol/iterator.js ***!
  \*************************************************************/
/*! exports provided: getSymbolIterator, iterator, $$iterator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSymbolIterator", function() { return getSymbolIterator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iterator", function() { return iterator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$$iterator", function() { return $$iterator; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function getSymbolIterator() {
    if (typeof Symbol !== 'function' || !Symbol.iterator) {
        return '@@iterator';
    }
    return Symbol.iterator;
}
var iterator = /*@__PURE__*/ getSymbolIterator();
var $$iterator = iterator;
//# sourceMappingURL=iterator.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/symbol/observable.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/symbol/observable.js ***!
  \***************************************************************/
/*! exports provided: observable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "observable", function() { return observable; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var observable = /*@__PURE__*/ (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();
//# sourceMappingURL=observable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js ***!
  \*****************************************************************/
/*! exports provided: rxSubscriber, $$rxSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rxSubscriber", function() { return rxSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$$rxSubscriber", function() { return $$rxSubscriber; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var rxSubscriber = /*@__PURE__*/ (function () {
    return typeof Symbol === 'function'
        ? /*@__PURE__*/ Symbol('rxSubscriber')
        : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();
})();
var $$rxSubscriber = rxSubscriber;
//# sourceMappingURL=rxSubscriber.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js":
/*!**************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js ***!
  \**************************************************************************/
/*! exports provided: ArgumentOutOfRangeError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArgumentOutOfRangeError", function() { return ArgumentOutOfRangeError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var ArgumentOutOfRangeErrorImpl = /*@__PURE__*/ (function () {
    function ArgumentOutOfRangeErrorImpl() {
        Error.call(this);
        this.message = 'argument out of range';
        this.name = 'ArgumentOutOfRangeError';
        return this;
    }
    ArgumentOutOfRangeErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return ArgumentOutOfRangeErrorImpl;
})();
var ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;
//# sourceMappingURL=ArgumentOutOfRangeError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/EmptyError.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/EmptyError.js ***!
  \*************************************************************/
/*! exports provided: EmptyError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmptyError", function() { return EmptyError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var EmptyErrorImpl = /*@__PURE__*/ (function () {
    function EmptyErrorImpl() {
        Error.call(this);
        this.message = 'no elements in sequence';
        this.name = 'EmptyError';
        return this;
    }
    EmptyErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return EmptyErrorImpl;
})();
var EmptyError = EmptyErrorImpl;
//# sourceMappingURL=EmptyError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/Immediate.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/Immediate.js ***!
  \************************************************************/
/*! exports provided: Immediate, TestTools */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Immediate", function() { return Immediate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TestTools", function() { return TestTools; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var nextHandle = 1;
var RESOLVED = /*@__PURE__*/ (function () { return /*@__PURE__*/ Promise.resolve(); })();
var activeHandles = {};
function findAndClearHandle(handle) {
    if (handle in activeHandles) {
        delete activeHandles[handle];
        return true;
    }
    return false;
}
var Immediate = {
    setImmediate: function (cb) {
        var handle = nextHandle++;
        activeHandles[handle] = true;
        RESOLVED.then(function () { return findAndClearHandle(handle) && cb(); });
        return handle;
    },
    clearImmediate: function (handle) {
        findAndClearHandle(handle);
    },
};
var TestTools = {
    pending: function () {
        return Object.keys(activeHandles).length;
    }
};
//# sourceMappingURL=Immediate.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js":
/*!**************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js ***!
  \**************************************************************************/
/*! exports provided: ObjectUnsubscribedError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObjectUnsubscribedError", function() { return ObjectUnsubscribedError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var ObjectUnsubscribedErrorImpl = /*@__PURE__*/ (function () {
    function ObjectUnsubscribedErrorImpl() {
        Error.call(this);
        this.message = 'object unsubscribed';
        this.name = 'ObjectUnsubscribedError';
        return this;
    }
    ObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return ObjectUnsubscribedErrorImpl;
})();
var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;
//# sourceMappingURL=ObjectUnsubscribedError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/TimeoutError.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/TimeoutError.js ***!
  \***************************************************************/
/*! exports provided: TimeoutError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeoutError", function() { return TimeoutError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var TimeoutErrorImpl = /*@__PURE__*/ (function () {
    function TimeoutErrorImpl() {
        Error.call(this);
        this.message = 'Timeout has occurred';
        this.name = 'TimeoutError';
        return this;
    }
    TimeoutErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return TimeoutErrorImpl;
})();
var TimeoutError = TimeoutErrorImpl;
//# sourceMappingURL=TimeoutError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js ***!
  \**********************************************************************/
/*! exports provided: UnsubscriptionError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnsubscriptionError", function() { return UnsubscriptionError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var UnsubscriptionErrorImpl = /*@__PURE__*/ (function () {
    function UnsubscriptionErrorImpl(errors) {
        Error.call(this);
        this.message = errors ?
            errors.length + " errors occurred during unsubscription:\n" + errors.map(function (err, i) { return i + 1 + ") " + err.toString(); }).join('\n  ') : '';
        this.name = 'UnsubscriptionError';
        this.errors = errors;
        return this;
    }
    UnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return UnsubscriptionErrorImpl;
})();
var UnsubscriptionError = UnsubscriptionErrorImpl;
//# sourceMappingURL=UnsubscriptionError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/canReportError.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/canReportError.js ***!
  \*****************************************************************/
/*! exports provided: canReportError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "canReportError", function() { return canReportError; });
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */

function canReportError(observer) {
    while (observer) {
        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;
        if (closed_1 || isStopped) {
            return false;
        }
        else if (destination && destination instanceof _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"]) {
            observer = destination;
        }
        else {
            observer = null;
        }
    }
    return true;
}
//# sourceMappingURL=canReportError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/hostReportError.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/hostReportError.js ***!
  \******************************************************************/
/*! exports provided: hostReportError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hostReportError", function() { return hostReportError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function hostReportError(err) {
    setTimeout(function () { throw err; }, 0);
}
//# sourceMappingURL=hostReportError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/identity.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/identity.js ***!
  \***********************************************************/
/*! exports provided: identity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function identity(x) {
    return x;
}
//# sourceMappingURL=identity.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isArray.js":
/*!**********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isArray.js ***!
  \**********************************************************/
/*! exports provided: isArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return isArray; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var isArray = /*@__PURE__*/ (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();
//# sourceMappingURL=isArray.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isArrayLike.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isArrayLike.js ***!
  \**************************************************************/
/*! exports provided: isArrayLike */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArrayLike", function() { return isArrayLike; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });
//# sourceMappingURL=isArrayLike.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isDate.js":
/*!*********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isDate.js ***!
  \*********************************************************/
/*! exports provided: isDate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDate", function() { return isDate; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isDate(value) {
    return value instanceof Date && !isNaN(+value);
}
//# sourceMappingURL=isDate.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isFunction.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isFunction.js ***!
  \*************************************************************/
/*! exports provided: isFunction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return isFunction; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isFunction(x) {
    return typeof x === 'function';
}
//# sourceMappingURL=isFunction.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isInteropObservable.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isInteropObservable.js ***!
  \**********************************************************************/
/*! exports provided: isInteropObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isInteropObservable", function() { return isInteropObservable; });
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/observable */ "./node_modules/rxjs/_esm5/internal/symbol/observable.js");
/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */

function isInteropObservable(input) {
    return input && typeof input[_symbol_observable__WEBPACK_IMPORTED_MODULE_0__["observable"]] === 'function';
}
//# sourceMappingURL=isInteropObservable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isIterable.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isIterable.js ***!
  \*************************************************************/
/*! exports provided: isIterable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIterable", function() { return isIterable; });
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/iterator */ "./node_modules/rxjs/_esm5/internal/symbol/iterator.js");
/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */

function isIterable(input) {
    return input && typeof input[_symbol_iterator__WEBPACK_IMPORTED_MODULE_0__["iterator"]] === 'function';
}
//# sourceMappingURL=isIterable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isNumeric.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isNumeric.js ***!
  \************************************************************/
/*! exports provided: isNumeric */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumeric", function() { return isNumeric; });
/* harmony import */ var _isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */

function isNumeric(val) {
    return !Object(_isArray__WEBPACK_IMPORTED_MODULE_0__["isArray"])(val) && (val - parseFloat(val) + 1) >= 0;
}
//# sourceMappingURL=isNumeric.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isObject.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isObject.js ***!
  \***********************************************************/
/*! exports provided: isObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return isObject; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isObject(x) {
    return x !== null && typeof x === 'object';
}
//# sourceMappingURL=isObject.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isPromise.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isPromise.js ***!
  \************************************************************/
/*! exports provided: isPromise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPromise", function() { return isPromise; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isPromise(value) {
    return !!value && typeof value.subscribe !== 'function' && typeof value.then === 'function';
}
//# sourceMappingURL=isPromise.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isScheduler.js ***!
  \**************************************************************/
/*! exports provided: isScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isScheduler", function() { return isScheduler; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isScheduler(value) {
    return value && typeof value.schedule === 'function';
}
//# sourceMappingURL=isScheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/noop.js":
/*!*******************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/noop.js ***!
  \*******************************************************/
/*! exports provided: noop */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noop", function() { return noop; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function noop() { }
//# sourceMappingURL=noop.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/not.js":
/*!******************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/not.js ***!
  \******************************************************/
/*! exports provided: not */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "not", function() { return not; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function not(pred, thisArg) {
    function notPred() {
        return !(notPred.pred.apply(notPred.thisArg, arguments));
    }
    notPred.pred = pred;
    notPred.thisArg = thisArg;
    return notPred;
}
//# sourceMappingURL=not.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/pipe.js":
/*!*******************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/pipe.js ***!
  \*******************************************************/
/*! exports provided: pipe, pipeFromArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pipe", function() { return pipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pipeFromArray", function() { return pipeFromArray; });
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity */ "./node_modules/rxjs/_esm5/internal/util/identity.js");
/** PURE_IMPORTS_START _identity PURE_IMPORTS_END */

function pipe() {
    var fns = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i] = arguments[_i];
    }
    return pipeFromArray(fns);
}
function pipeFromArray(fns) {
    if (fns.length === 0) {
        return _identity__WEBPACK_IMPORTED_MODULE_0__["identity"];
    }
    if (fns.length === 1) {
        return fns[0];
    }
    return function piped(input) {
        return fns.reduce(function (prev, fn) { return fn(prev); }, input);
    };
}
//# sourceMappingURL=pipe.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/subscribeTo.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeTo.js ***!
  \**************************************************************/
/*! exports provided: subscribeTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeTo", function() { return subscribeTo; });
/* harmony import */ var _subscribeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribeToArray */ "./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js");
/* harmony import */ var _subscribeToPromise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./subscribeToPromise */ "./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js");
/* harmony import */ var _subscribeToIterable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./subscribeToIterable */ "./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js");
/* harmony import */ var _subscribeToObservable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./subscribeToObservable */ "./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js");
/* harmony import */ var _isArrayLike__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./isArrayLike */ "./node_modules/rxjs/_esm5/internal/util/isArrayLike.js");
/* harmony import */ var _isPromise__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./isPromise */ "./node_modules/rxjs/_esm5/internal/util/isPromise.js");
/* harmony import */ var _isObject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./isObject */ "./node_modules/rxjs/_esm5/internal/util/isObject.js");
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../symbol/iterator */ "./node_modules/rxjs/_esm5/internal/symbol/iterator.js");
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../symbol/observable */ "./node_modules/rxjs/_esm5/internal/symbol/observable.js");
/** PURE_IMPORTS_START _subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */









var subscribeTo = function (result) {
    if (!!result && typeof result[_symbol_observable__WEBPACK_IMPORTED_MODULE_8__["observable"]] === 'function') {
        return Object(_subscribeToObservable__WEBPACK_IMPORTED_MODULE_3__["subscribeToObservable"])(result);
    }
    else if (Object(_isArrayLike__WEBPACK_IMPORTED_MODULE_4__["isArrayLike"])(result)) {
        return Object(_subscribeToArray__WEBPACK_IMPORTED_MODULE_0__["subscribeToArray"])(result);
    }
    else if (Object(_isPromise__WEBPACK_IMPORTED_MODULE_5__["isPromise"])(result)) {
        return Object(_subscribeToPromise__WEBPACK_IMPORTED_MODULE_1__["subscribeToPromise"])(result);
    }
    else if (!!result && typeof result[_symbol_iterator__WEBPACK_IMPORTED_MODULE_7__["iterator"]] === 'function') {
        return Object(_subscribeToIterable__WEBPACK_IMPORTED_MODULE_2__["subscribeToIterable"])(result);
    }
    else {
        var value = Object(_isObject__WEBPACK_IMPORTED_MODULE_6__["isObject"])(result) ? 'an invalid object' : "'" + result + "'";
        var msg = "You provided " + value + " where a stream was expected."
            + ' You can provide an Observable, Promise, Array, or Iterable.';
        throw new TypeError(msg);
    }
};
//# sourceMappingURL=subscribeTo.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js ***!
  \*******************************************************************/
/*! exports provided: subscribeToArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToArray", function() { return subscribeToArray; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var subscribeToArray = function (array) {
    return function (subscriber) {
        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {
            subscriber.next(array[i]);
        }
        subscriber.complete();
    };
};
//# sourceMappingURL=subscribeToArray.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js ***!
  \**********************************************************************/
/*! exports provided: subscribeToIterable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToIterable", function() { return subscribeToIterable; });
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/iterator */ "./node_modules/rxjs/_esm5/internal/symbol/iterator.js");
/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */

var subscribeToIterable = function (iterable) {
    return function (subscriber) {
        var iterator = iterable[_symbol_iterator__WEBPACK_IMPORTED_MODULE_0__["iterator"]]();
        do {
            var item = iterator.next();
            if (item.done) {
                subscriber.complete();
                break;
            }
            subscriber.next(item.value);
            if (subscriber.closed) {
                break;
            }
        } while (true);
        if (typeof iterator.return === 'function') {
            subscriber.add(function () {
                if (iterator.return) {
                    iterator.return();
                }
            });
        }
        return subscriber;
    };
};
//# sourceMappingURL=subscribeToIterable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js":
/*!************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js ***!
  \************************************************************************/
/*! exports provided: subscribeToObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToObservable", function() { return subscribeToObservable; });
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/observable */ "./node_modules/rxjs/_esm5/internal/symbol/observable.js");
/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */

var subscribeToObservable = function (obj) {
    return function (subscriber) {
        var obs = obj[_symbol_observable__WEBPACK_IMPORTED_MODULE_0__["observable"]]();
        if (typeof obs.subscribe !== 'function') {
            throw new TypeError('Provided object does not correctly implement Symbol.observable');
        }
        else {
            return obs.subscribe(subscriber);
        }
    };
};
//# sourceMappingURL=subscribeToObservable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js ***!
  \*********************************************************************/
/*! exports provided: subscribeToPromise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToPromise", function() { return subscribeToPromise; });
/* harmony import */ var _hostReportError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hostReportError */ "./node_modules/rxjs/_esm5/internal/util/hostReportError.js");
/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */

var subscribeToPromise = function (promise) {
    return function (subscriber) {
        promise.then(function (value) {
            if (!subscriber.closed) {
                subscriber.next(value);
                subscriber.complete();
            }
        }, function (err) { return subscriber.error(err); })
            .then(null, _hostReportError__WEBPACK_IMPORTED_MODULE_0__["hostReportError"]);
        return subscriber;
    };
};
//# sourceMappingURL=subscribeToPromise.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js ***!
  \********************************************************************/
/*! exports provided: subscribeToResult */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToResult", function() { return subscribeToResult; });
/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../InnerSubscriber */ "./node_modules/rxjs/_esm5/internal/InnerSubscriber.js");
/* harmony import */ var _subscribeTo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./subscribeTo */ "./node_modules/rxjs/_esm5/internal/util/subscribeTo.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo,_Observable PURE_IMPORTS_END */



function subscribeToResult(outerSubscriber, result, outerValue, outerIndex, innerSubscriber) {
    if (innerSubscriber === void 0) {
        innerSubscriber = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_0__["InnerSubscriber"](outerSubscriber, outerValue, outerIndex);
    }
    if (innerSubscriber.closed) {
        return undefined;
    }
    if (result instanceof _Observable__WEBPACK_IMPORTED_MODULE_2__["Observable"]) {
        return result.subscribe(innerSubscriber);
    }
    return Object(_subscribeTo__WEBPACK_IMPORTED_MODULE_1__["subscribeTo"])(result)(innerSubscriber);
}
//# sourceMappingURL=subscribeToResult.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/toSubscriber.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/toSubscriber.js ***!
  \***************************************************************/
/*! exports provided: toSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toSubscriber", function() { return toSubscriber; });
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../symbol/rxSubscriber */ "./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js");
/* harmony import */ var _Observer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Observer */ "./node_modules/rxjs/_esm5/internal/Observer.js");
/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */



function toSubscriber(nextOrObserver, error, complete) {
    if (nextOrObserver) {
        if (nextOrObserver instanceof _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"]) {
            return nextOrObserver;
        }
        if (nextOrObserver[_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__["rxSubscriber"]]) {
            return nextOrObserver[_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__["rxSubscriber"]]();
        }
    }
    if (!nextOrObserver && !error && !complete) {
        return new _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"](_Observer__WEBPACK_IMPORTED_MODULE_2__["empty"]);
    }
    return new _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"](nextOrObserver, error, complete);
}
//# sourceMappingURL=toSubscriber.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/operators/index.js":
/*!****************************************************!*\
  !*** ./node_modules/rxjs/_esm5/operators/index.js ***!
  \****************************************************/
/*! exports provided: audit, auditTime, buffer, bufferCount, bufferTime, bufferToggle, bufferWhen, catchError, combineAll, combineLatest, concat, concatAll, concatMap, concatMapTo, count, debounce, debounceTime, defaultIfEmpty, delay, delayWhen, dematerialize, distinct, distinctUntilChanged, distinctUntilKeyChanged, elementAt, endWith, every, exhaust, exhaustMap, expand, filter, finalize, find, findIndex, first, groupBy, ignoreElements, isEmpty, last, map, mapTo, materialize, max, merge, mergeAll, mergeMap, flatMap, mergeMapTo, mergeScan, min, multicast, observeOn, onErrorResumeNext, pairwise, partition, pluck, publish, publishBehavior, publishLast, publishReplay, race, reduce, repeat, repeatWhen, retry, retryWhen, refCount, sample, sampleTime, scan, sequenceEqual, share, shareReplay, single, skip, skipLast, skipUntil, skipWhile, startWith, subscribeOn, switchAll, switchMap, switchMapTo, take, takeLast, takeUntil, takeWhile, tap, throttle, throttleTime, throwIfEmpty, timeInterval, timeout, timeoutWith, timestamp, toArray, window, windowCount, windowTime, windowToggle, windowWhen, withLatestFrom, zip, zipAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _internal_operators_audit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/operators/audit */ "./node_modules/rxjs/_esm5/internal/operators/audit.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "audit", function() { return _internal_operators_audit__WEBPACK_IMPORTED_MODULE_0__["audit"]; });

/* harmony import */ var _internal_operators_auditTime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/operators/auditTime */ "./node_modules/rxjs/_esm5/internal/operators/auditTime.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "auditTime", function() { return _internal_operators_auditTime__WEBPACK_IMPORTED_MODULE_1__["auditTime"]; });

/* harmony import */ var _internal_operators_buffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/operators/buffer */ "./node_modules/rxjs/_esm5/internal/operators/buffer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "buffer", function() { return _internal_operators_buffer__WEBPACK_IMPORTED_MODULE_2__["buffer"]; });

/* harmony import */ var _internal_operators_bufferCount__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/operators/bufferCount */ "./node_modules/rxjs/_esm5/internal/operators/bufferCount.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bufferCount", function() { return _internal_operators_bufferCount__WEBPACK_IMPORTED_MODULE_3__["bufferCount"]; });

/* harmony import */ var _internal_operators_bufferTime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/operators/bufferTime */ "./node_modules/rxjs/_esm5/internal/operators/bufferTime.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bufferTime", function() { return _internal_operators_bufferTime__WEBPACK_IMPORTED_MODULE_4__["bufferTime"]; });

/* harmony import */ var _internal_operators_bufferToggle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../internal/operators/bufferToggle */ "./node_modules/rxjs/_esm5/internal/operators/bufferToggle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bufferToggle", function() { return _internal_operators_bufferToggle__WEBPACK_IMPORTED_MODULE_5__["bufferToggle"]; });

/* harmony import */ var _internal_operators_bufferWhen__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../internal/operators/bufferWhen */ "./node_modules/rxjs/_esm5/internal/operators/bufferWhen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bufferWhen", function() { return _internal_operators_bufferWhen__WEBPACK_IMPORTED_MODULE_6__["bufferWhen"]; });

/* harmony import */ var _internal_operators_catchError__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../internal/operators/catchError */ "./node_modules/rxjs/_esm5/internal/operators/catchError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "catchError", function() { return _internal_operators_catchError__WEBPACK_IMPORTED_MODULE_7__["catchError"]; });

/* harmony import */ var _internal_operators_combineAll__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../internal/operators/combineAll */ "./node_modules/rxjs/_esm5/internal/operators/combineAll.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combineAll", function() { return _internal_operators_combineAll__WEBPACK_IMPORTED_MODULE_8__["combineAll"]; });

/* harmony import */ var _internal_operators_combineLatest__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../internal/operators/combineLatest */ "./node_modules/rxjs/_esm5/internal/operators/combineLatest.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return _internal_operators_combineLatest__WEBPACK_IMPORTED_MODULE_9__["combineLatest"]; });

/* harmony import */ var _internal_operators_concat__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../internal/operators/concat */ "./node_modules/rxjs/_esm5/internal/operators/concat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return _internal_operators_concat__WEBPACK_IMPORTED_MODULE_10__["concat"]; });

/* harmony import */ var _internal_operators_concatAll__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../internal/operators/concatAll */ "./node_modules/rxjs/_esm5/internal/operators/concatAll.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concatAll", function() { return _internal_operators_concatAll__WEBPACK_IMPORTED_MODULE_11__["concatAll"]; });

/* harmony import */ var _internal_operators_concatMap__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../internal/operators/concatMap */ "./node_modules/rxjs/_esm5/internal/operators/concatMap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concatMap", function() { return _internal_operators_concatMap__WEBPACK_IMPORTED_MODULE_12__["concatMap"]; });

/* harmony import */ var _internal_operators_concatMapTo__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../internal/operators/concatMapTo */ "./node_modules/rxjs/_esm5/internal/operators/concatMapTo.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concatMapTo", function() { return _internal_operators_concatMapTo__WEBPACK_IMPORTED_MODULE_13__["concatMapTo"]; });

/* harmony import */ var _internal_operators_count__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../internal/operators/count */ "./node_modules/rxjs/_esm5/internal/operators/count.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "count", function() { return _internal_operators_count__WEBPACK_IMPORTED_MODULE_14__["count"]; });

/* harmony import */ var _internal_operators_debounce__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../internal/operators/debounce */ "./node_modules/rxjs/_esm5/internal/operators/debounce.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return _internal_operators_debounce__WEBPACK_IMPORTED_MODULE_15__["debounce"]; });

/* harmony import */ var _internal_operators_debounceTime__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../internal/operators/debounceTime */ "./node_modules/rxjs/_esm5/internal/operators/debounceTime.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debounceTime", function() { return _internal_operators_debounceTime__WEBPACK_IMPORTED_MODULE_16__["debounceTime"]; });

/* harmony import */ var _internal_operators_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../internal/operators/defaultIfEmpty */ "./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultIfEmpty", function() { return _internal_operators_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_17__["defaultIfEmpty"]; });

/* harmony import */ var _internal_operators_delay__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../internal/operators/delay */ "./node_modules/rxjs/_esm5/internal/operators/delay.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "delay", function() { return _internal_operators_delay__WEBPACK_IMPORTED_MODULE_18__["delay"]; });

/* harmony import */ var _internal_operators_delayWhen__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../internal/operators/delayWhen */ "./node_modules/rxjs/_esm5/internal/operators/delayWhen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "delayWhen", function() { return _internal_operators_delayWhen__WEBPACK_IMPORTED_MODULE_19__["delayWhen"]; });

/* harmony import */ var _internal_operators_dematerialize__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../internal/operators/dematerialize */ "./node_modules/rxjs/_esm5/internal/operators/dematerialize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dematerialize", function() { return _internal_operators_dematerialize__WEBPACK_IMPORTED_MODULE_20__["dematerialize"]; });

/* harmony import */ var _internal_operators_distinct__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../internal/operators/distinct */ "./node_modules/rxjs/_esm5/internal/operators/distinct.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "distinct", function() { return _internal_operators_distinct__WEBPACK_IMPORTED_MODULE_21__["distinct"]; });

/* harmony import */ var _internal_operators_distinctUntilChanged__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../internal/operators/distinctUntilChanged */ "./node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "distinctUntilChanged", function() { return _internal_operators_distinctUntilChanged__WEBPACK_IMPORTED_MODULE_22__["distinctUntilChanged"]; });

/* harmony import */ var _internal_operators_distinctUntilKeyChanged__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../internal/operators/distinctUntilKeyChanged */ "./node_modules/rxjs/_esm5/internal/operators/distinctUntilKeyChanged.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "distinctUntilKeyChanged", function() { return _internal_operators_distinctUntilKeyChanged__WEBPACK_IMPORTED_MODULE_23__["distinctUntilKeyChanged"]; });

/* harmony import */ var _internal_operators_elementAt__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../internal/operators/elementAt */ "./node_modules/rxjs/_esm5/internal/operators/elementAt.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "elementAt", function() { return _internal_operators_elementAt__WEBPACK_IMPORTED_MODULE_24__["elementAt"]; });

/* harmony import */ var _internal_operators_endWith__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../internal/operators/endWith */ "./node_modules/rxjs/_esm5/internal/operators/endWith.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endWith", function() { return _internal_operators_endWith__WEBPACK_IMPORTED_MODULE_25__["endWith"]; });

/* harmony import */ var _internal_operators_every__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../internal/operators/every */ "./node_modules/rxjs/_esm5/internal/operators/every.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "every", function() { return _internal_operators_every__WEBPACK_IMPORTED_MODULE_26__["every"]; });

/* harmony import */ var _internal_operators_exhaust__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../internal/operators/exhaust */ "./node_modules/rxjs/_esm5/internal/operators/exhaust.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "exhaust", function() { return _internal_operators_exhaust__WEBPACK_IMPORTED_MODULE_27__["exhaust"]; });

/* harmony import */ var _internal_operators_exhaustMap__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../internal/operators/exhaustMap */ "./node_modules/rxjs/_esm5/internal/operators/exhaustMap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "exhaustMap", function() { return _internal_operators_exhaustMap__WEBPACK_IMPORTED_MODULE_28__["exhaustMap"]; });

/* harmony import */ var _internal_operators_expand__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../internal/operators/expand */ "./node_modules/rxjs/_esm5/internal/operators/expand.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expand", function() { return _internal_operators_expand__WEBPACK_IMPORTED_MODULE_29__["expand"]; });

/* harmony import */ var _internal_operators_filter__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../internal/operators/filter */ "./node_modules/rxjs/_esm5/internal/operators/filter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return _internal_operators_filter__WEBPACK_IMPORTED_MODULE_30__["filter"]; });

/* harmony import */ var _internal_operators_finalize__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../internal/operators/finalize */ "./node_modules/rxjs/_esm5/internal/operators/finalize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "finalize", function() { return _internal_operators_finalize__WEBPACK_IMPORTED_MODULE_31__["finalize"]; });

/* harmony import */ var _internal_operators_find__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../internal/operators/find */ "./node_modules/rxjs/_esm5/internal/operators/find.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "find", function() { return _internal_operators_find__WEBPACK_IMPORTED_MODULE_32__["find"]; });

/* harmony import */ var _internal_operators_findIndex__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../internal/operators/findIndex */ "./node_modules/rxjs/_esm5/internal/operators/findIndex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findIndex", function() { return _internal_operators_findIndex__WEBPACK_IMPORTED_MODULE_33__["findIndex"]; });

/* harmony import */ var _internal_operators_first__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../internal/operators/first */ "./node_modules/rxjs/_esm5/internal/operators/first.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "first", function() { return _internal_operators_first__WEBPACK_IMPORTED_MODULE_34__["first"]; });

/* harmony import */ var _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../internal/operators/groupBy */ "./node_modules/rxjs/_esm5/internal/operators/groupBy.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "groupBy", function() { return _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_35__["groupBy"]; });

/* harmony import */ var _internal_operators_ignoreElements__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../internal/operators/ignoreElements */ "./node_modules/rxjs/_esm5/internal/operators/ignoreElements.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ignoreElements", function() { return _internal_operators_ignoreElements__WEBPACK_IMPORTED_MODULE_36__["ignoreElements"]; });

/* harmony import */ var _internal_operators_isEmpty__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../internal/operators/isEmpty */ "./node_modules/rxjs/_esm5/internal/operators/isEmpty.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEmpty", function() { return _internal_operators_isEmpty__WEBPACK_IMPORTED_MODULE_37__["isEmpty"]; });

/* harmony import */ var _internal_operators_last__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../internal/operators/last */ "./node_modules/rxjs/_esm5/internal/operators/last.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "last", function() { return _internal_operators_last__WEBPACK_IMPORTED_MODULE_38__["last"]; });

/* harmony import */ var _internal_operators_map__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../internal/operators/map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "map", function() { return _internal_operators_map__WEBPACK_IMPORTED_MODULE_39__["map"]; });

/* harmony import */ var _internal_operators_mapTo__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../internal/operators/mapTo */ "./node_modules/rxjs/_esm5/internal/operators/mapTo.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mapTo", function() { return _internal_operators_mapTo__WEBPACK_IMPORTED_MODULE_40__["mapTo"]; });

/* harmony import */ var _internal_operators_materialize__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../internal/operators/materialize */ "./node_modules/rxjs/_esm5/internal/operators/materialize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "materialize", function() { return _internal_operators_materialize__WEBPACK_IMPORTED_MODULE_41__["materialize"]; });

/* harmony import */ var _internal_operators_max__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ../internal/operators/max */ "./node_modules/rxjs/_esm5/internal/operators/max.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return _internal_operators_max__WEBPACK_IMPORTED_MODULE_42__["max"]; });

/* harmony import */ var _internal_operators_merge__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../internal/operators/merge */ "./node_modules/rxjs/_esm5/internal/operators/merge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _internal_operators_merge__WEBPACK_IMPORTED_MODULE_43__["merge"]; });

/* harmony import */ var _internal_operators_mergeAll__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../internal/operators/mergeAll */ "./node_modules/rxjs/_esm5/internal/operators/mergeAll.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeAll", function() { return _internal_operators_mergeAll__WEBPACK_IMPORTED_MODULE_44__["mergeAll"]; });

/* harmony import */ var _internal_operators_mergeMap__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../internal/operators/mergeMap */ "./node_modules/rxjs/_esm5/internal/operators/mergeMap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeMap", function() { return _internal_operators_mergeMap__WEBPACK_IMPORTED_MODULE_45__["mergeMap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatMap", function() { return _internal_operators_mergeMap__WEBPACK_IMPORTED_MODULE_45__["mergeMap"]; });

/* harmony import */ var _internal_operators_mergeMapTo__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../internal/operators/mergeMapTo */ "./node_modules/rxjs/_esm5/internal/operators/mergeMapTo.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeMapTo", function() { return _internal_operators_mergeMapTo__WEBPACK_IMPORTED_MODULE_46__["mergeMapTo"]; });

/* harmony import */ var _internal_operators_mergeScan__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../internal/operators/mergeScan */ "./node_modules/rxjs/_esm5/internal/operators/mergeScan.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeScan", function() { return _internal_operators_mergeScan__WEBPACK_IMPORTED_MODULE_47__["mergeScan"]; });

/* harmony import */ var _internal_operators_min__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../internal/operators/min */ "./node_modules/rxjs/_esm5/internal/operators/min.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return _internal_operators_min__WEBPACK_IMPORTED_MODULE_48__["min"]; });

/* harmony import */ var _internal_operators_multicast__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ../internal/operators/multicast */ "./node_modules/rxjs/_esm5/internal/operators/multicast.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multicast", function() { return _internal_operators_multicast__WEBPACK_IMPORTED_MODULE_49__["multicast"]; });

/* harmony import */ var _internal_operators_observeOn__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ../internal/operators/observeOn */ "./node_modules/rxjs/_esm5/internal/operators/observeOn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "observeOn", function() { return _internal_operators_observeOn__WEBPACK_IMPORTED_MODULE_50__["observeOn"]; });

/* harmony import */ var _internal_operators_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ../internal/operators/onErrorResumeNext */ "./node_modules/rxjs/_esm5/internal/operators/onErrorResumeNext.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return _internal_operators_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_51__["onErrorResumeNext"]; });

/* harmony import */ var _internal_operators_pairwise__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ../internal/operators/pairwise */ "./node_modules/rxjs/_esm5/internal/operators/pairwise.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pairwise", function() { return _internal_operators_pairwise__WEBPACK_IMPORTED_MODULE_52__["pairwise"]; });

/* harmony import */ var _internal_operators_partition__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ../internal/operators/partition */ "./node_modules/rxjs/_esm5/internal/operators/partition.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return _internal_operators_partition__WEBPACK_IMPORTED_MODULE_53__["partition"]; });

/* harmony import */ var _internal_operators_pluck__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ../internal/operators/pluck */ "./node_modules/rxjs/_esm5/internal/operators/pluck.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pluck", function() { return _internal_operators_pluck__WEBPACK_IMPORTED_MODULE_54__["pluck"]; });

/* harmony import */ var _internal_operators_publish__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ../internal/operators/publish */ "./node_modules/rxjs/_esm5/internal/operators/publish.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "publish", function() { return _internal_operators_publish__WEBPACK_IMPORTED_MODULE_55__["publish"]; });

/* harmony import */ var _internal_operators_publishBehavior__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ../internal/operators/publishBehavior */ "./node_modules/rxjs/_esm5/internal/operators/publishBehavior.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "publishBehavior", function() { return _internal_operators_publishBehavior__WEBPACK_IMPORTED_MODULE_56__["publishBehavior"]; });

/* harmony import */ var _internal_operators_publishLast__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ../internal/operators/publishLast */ "./node_modules/rxjs/_esm5/internal/operators/publishLast.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "publishLast", function() { return _internal_operators_publishLast__WEBPACK_IMPORTED_MODULE_57__["publishLast"]; });

/* harmony import */ var _internal_operators_publishReplay__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ../internal/operators/publishReplay */ "./node_modules/rxjs/_esm5/internal/operators/publishReplay.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "publishReplay", function() { return _internal_operators_publishReplay__WEBPACK_IMPORTED_MODULE_58__["publishReplay"]; });

/* harmony import */ var _internal_operators_race__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ../internal/operators/race */ "./node_modules/rxjs/_esm5/internal/operators/race.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "race", function() { return _internal_operators_race__WEBPACK_IMPORTED_MODULE_59__["race"]; });

/* harmony import */ var _internal_operators_reduce__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ../internal/operators/reduce */ "./node_modules/rxjs/_esm5/internal/operators/reduce.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return _internal_operators_reduce__WEBPACK_IMPORTED_MODULE_60__["reduce"]; });

/* harmony import */ var _internal_operators_repeat__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ../internal/operators/repeat */ "./node_modules/rxjs/_esm5/internal/operators/repeat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "repeat", function() { return _internal_operators_repeat__WEBPACK_IMPORTED_MODULE_61__["repeat"]; });

/* harmony import */ var _internal_operators_repeatWhen__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ../internal/operators/repeatWhen */ "./node_modules/rxjs/_esm5/internal/operators/repeatWhen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "repeatWhen", function() { return _internal_operators_repeatWhen__WEBPACK_IMPORTED_MODULE_62__["repeatWhen"]; });

/* harmony import */ var _internal_operators_retry__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ../internal/operators/retry */ "./node_modules/rxjs/_esm5/internal/operators/retry.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "retry", function() { return _internal_operators_retry__WEBPACK_IMPORTED_MODULE_63__["retry"]; });

/* harmony import */ var _internal_operators_retryWhen__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ../internal/operators/retryWhen */ "./node_modules/rxjs/_esm5/internal/operators/retryWhen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "retryWhen", function() { return _internal_operators_retryWhen__WEBPACK_IMPORTED_MODULE_64__["retryWhen"]; });

/* harmony import */ var _internal_operators_refCount__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ../internal/operators/refCount */ "./node_modules/rxjs/_esm5/internal/operators/refCount.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "refCount", function() { return _internal_operators_refCount__WEBPACK_IMPORTED_MODULE_65__["refCount"]; });

/* harmony import */ var _internal_operators_sample__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ../internal/operators/sample */ "./node_modules/rxjs/_esm5/internal/operators/sample.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sample", function() { return _internal_operators_sample__WEBPACK_IMPORTED_MODULE_66__["sample"]; });

/* harmony import */ var _internal_operators_sampleTime__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ../internal/operators/sampleTime */ "./node_modules/rxjs/_esm5/internal/operators/sampleTime.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sampleTime", function() { return _internal_operators_sampleTime__WEBPACK_IMPORTED_MODULE_67__["sampleTime"]; });

/* harmony import */ var _internal_operators_scan__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ../internal/operators/scan */ "./node_modules/rxjs/_esm5/internal/operators/scan.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return _internal_operators_scan__WEBPACK_IMPORTED_MODULE_68__["scan"]; });

/* harmony import */ var _internal_operators_sequenceEqual__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ../internal/operators/sequenceEqual */ "./node_modules/rxjs/_esm5/internal/operators/sequenceEqual.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sequenceEqual", function() { return _internal_operators_sequenceEqual__WEBPACK_IMPORTED_MODULE_69__["sequenceEqual"]; });

/* harmony import */ var _internal_operators_share__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ../internal/operators/share */ "./node_modules/rxjs/_esm5/internal/operators/share.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "share", function() { return _internal_operators_share__WEBPACK_IMPORTED_MODULE_70__["share"]; });

/* harmony import */ var _internal_operators_shareReplay__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ../internal/operators/shareReplay */ "./node_modules/rxjs/_esm5/internal/operators/shareReplay.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shareReplay", function() { return _internal_operators_shareReplay__WEBPACK_IMPORTED_MODULE_71__["shareReplay"]; });

/* harmony import */ var _internal_operators_single__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ../internal/operators/single */ "./node_modules/rxjs/_esm5/internal/operators/single.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "single", function() { return _internal_operators_single__WEBPACK_IMPORTED_MODULE_72__["single"]; });

/* harmony import */ var _internal_operators_skip__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ../internal/operators/skip */ "./node_modules/rxjs/_esm5/internal/operators/skip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "skip", function() { return _internal_operators_skip__WEBPACK_IMPORTED_MODULE_73__["skip"]; });

/* harmony import */ var _internal_operators_skipLast__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ../internal/operators/skipLast */ "./node_modules/rxjs/_esm5/internal/operators/skipLast.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "skipLast", function() { return _internal_operators_skipLast__WEBPACK_IMPORTED_MODULE_74__["skipLast"]; });

/* harmony import */ var _internal_operators_skipUntil__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ../internal/operators/skipUntil */ "./node_modules/rxjs/_esm5/internal/operators/skipUntil.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "skipUntil", function() { return _internal_operators_skipUntil__WEBPACK_IMPORTED_MODULE_75__["skipUntil"]; });

/* harmony import */ var _internal_operators_skipWhile__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ../internal/operators/skipWhile */ "./node_modules/rxjs/_esm5/internal/operators/skipWhile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "skipWhile", function() { return _internal_operators_skipWhile__WEBPACK_IMPORTED_MODULE_76__["skipWhile"]; });

/* harmony import */ var _internal_operators_startWith__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ../internal/operators/startWith */ "./node_modules/rxjs/_esm5/internal/operators/startWith.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startWith", function() { return _internal_operators_startWith__WEBPACK_IMPORTED_MODULE_77__["startWith"]; });

/* harmony import */ var _internal_operators_subscribeOn__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ../internal/operators/subscribeOn */ "./node_modules/rxjs/_esm5/internal/operators/subscribeOn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subscribeOn", function() { return _internal_operators_subscribeOn__WEBPACK_IMPORTED_MODULE_78__["subscribeOn"]; });

/* harmony import */ var _internal_operators_switchAll__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ../internal/operators/switchAll */ "./node_modules/rxjs/_esm5/internal/operators/switchAll.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "switchAll", function() { return _internal_operators_switchAll__WEBPACK_IMPORTED_MODULE_79__["switchAll"]; });

/* harmony import */ var _internal_operators_switchMap__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ../internal/operators/switchMap */ "./node_modules/rxjs/_esm5/internal/operators/switchMap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "switchMap", function() { return _internal_operators_switchMap__WEBPACK_IMPORTED_MODULE_80__["switchMap"]; });

/* harmony import */ var _internal_operators_switchMapTo__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ../internal/operators/switchMapTo */ "./node_modules/rxjs/_esm5/internal/operators/switchMapTo.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "switchMapTo", function() { return _internal_operators_switchMapTo__WEBPACK_IMPORTED_MODULE_81__["switchMapTo"]; });

/* harmony import */ var _internal_operators_take__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ../internal/operators/take */ "./node_modules/rxjs/_esm5/internal/operators/take.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "take", function() { return _internal_operators_take__WEBPACK_IMPORTED_MODULE_82__["take"]; });

/* harmony import */ var _internal_operators_takeLast__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ../internal/operators/takeLast */ "./node_modules/rxjs/_esm5/internal/operators/takeLast.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "takeLast", function() { return _internal_operators_takeLast__WEBPACK_IMPORTED_MODULE_83__["takeLast"]; });

/* harmony import */ var _internal_operators_takeUntil__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ../internal/operators/takeUntil */ "./node_modules/rxjs/_esm5/internal/operators/takeUntil.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "takeUntil", function() { return _internal_operators_takeUntil__WEBPACK_IMPORTED_MODULE_84__["takeUntil"]; });

/* harmony import */ var _internal_operators_takeWhile__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ../internal/operators/takeWhile */ "./node_modules/rxjs/_esm5/internal/operators/takeWhile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "takeWhile", function() { return _internal_operators_takeWhile__WEBPACK_IMPORTED_MODULE_85__["takeWhile"]; });

/* harmony import */ var _internal_operators_tap__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ../internal/operators/tap */ "./node_modules/rxjs/_esm5/internal/operators/tap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tap", function() { return _internal_operators_tap__WEBPACK_IMPORTED_MODULE_86__["tap"]; });

/* harmony import */ var _internal_operators_throttle__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ../internal/operators/throttle */ "./node_modules/rxjs/_esm5/internal/operators/throttle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throttle", function() { return _internal_operators_throttle__WEBPACK_IMPORTED_MODULE_87__["throttle"]; });

/* harmony import */ var _internal_operators_throttleTime__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ../internal/operators/throttleTime */ "./node_modules/rxjs/_esm5/internal/operators/throttleTime.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throttleTime", function() { return _internal_operators_throttleTime__WEBPACK_IMPORTED_MODULE_88__["throttleTime"]; });

/* harmony import */ var _internal_operators_throwIfEmpty__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ../internal/operators/throwIfEmpty */ "./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throwIfEmpty", function() { return _internal_operators_throwIfEmpty__WEBPACK_IMPORTED_MODULE_89__["throwIfEmpty"]; });

/* harmony import */ var _internal_operators_timeInterval__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ../internal/operators/timeInterval */ "./node_modules/rxjs/_esm5/internal/operators/timeInterval.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return _internal_operators_timeInterval__WEBPACK_IMPORTED_MODULE_90__["timeInterval"]; });

/* harmony import */ var _internal_operators_timeout__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ../internal/operators/timeout */ "./node_modules/rxjs/_esm5/internal/operators/timeout.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeout", function() { return _internal_operators_timeout__WEBPACK_IMPORTED_MODULE_91__["timeout"]; });

/* harmony import */ var _internal_operators_timeoutWith__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ../internal/operators/timeoutWith */ "./node_modules/rxjs/_esm5/internal/operators/timeoutWith.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeoutWith", function() { return _internal_operators_timeoutWith__WEBPACK_IMPORTED_MODULE_92__["timeoutWith"]; });

/* harmony import */ var _internal_operators_timestamp__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ../internal/operators/timestamp */ "./node_modules/rxjs/_esm5/internal/operators/timestamp.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timestamp", function() { return _internal_operators_timestamp__WEBPACK_IMPORTED_MODULE_93__["timestamp"]; });

/* harmony import */ var _internal_operators_toArray__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ../internal/operators/toArray */ "./node_modules/rxjs/_esm5/internal/operators/toArray.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return _internal_operators_toArray__WEBPACK_IMPORTED_MODULE_94__["toArray"]; });

/* harmony import */ var _internal_operators_window__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ../internal/operators/window */ "./node_modules/rxjs/_esm5/internal/operators/window.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "window", function() { return _internal_operators_window__WEBPACK_IMPORTED_MODULE_95__["window"]; });

/* harmony import */ var _internal_operators_windowCount__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ../internal/operators/windowCount */ "./node_modules/rxjs/_esm5/internal/operators/windowCount.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "windowCount", function() { return _internal_operators_windowCount__WEBPACK_IMPORTED_MODULE_96__["windowCount"]; });

/* harmony import */ var _internal_operators_windowTime__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ../internal/operators/windowTime */ "./node_modules/rxjs/_esm5/internal/operators/windowTime.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "windowTime", function() { return _internal_operators_windowTime__WEBPACK_IMPORTED_MODULE_97__["windowTime"]; });

/* harmony import */ var _internal_operators_windowToggle__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ../internal/operators/windowToggle */ "./node_modules/rxjs/_esm5/internal/operators/windowToggle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "windowToggle", function() { return _internal_operators_windowToggle__WEBPACK_IMPORTED_MODULE_98__["windowToggle"]; });

/* harmony import */ var _internal_operators_windowWhen__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ../internal/operators/windowWhen */ "./node_modules/rxjs/_esm5/internal/operators/windowWhen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "windowWhen", function() { return _internal_operators_windowWhen__WEBPACK_IMPORTED_MODULE_99__["windowWhen"]; });

/* harmony import */ var _internal_operators_withLatestFrom__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ../internal/operators/withLatestFrom */ "./node_modules/rxjs/_esm5/internal/operators/withLatestFrom.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "withLatestFrom", function() { return _internal_operators_withLatestFrom__WEBPACK_IMPORTED_MODULE_100__["withLatestFrom"]; });

/* harmony import */ var _internal_operators_zip__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ../internal/operators/zip */ "./node_modules/rxjs/_esm5/internal/operators/zip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return _internal_operators_zip__WEBPACK_IMPORTED_MODULE_101__["zip"]; });

/* harmony import */ var _internal_operators_zipAll__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ../internal/operators/zipAll */ "./node_modules/rxjs/_esm5/internal/operators/zipAll.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zipAll", function() { return _internal_operators_zipAll__WEBPACK_IMPORTED_MODULE_102__["zipAll"]; });

/** PURE_IMPORTS_START  PURE_IMPORTS_END */








































































































//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __createBinding, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__createBinding", function() { return __createBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function() { return __classPrivateFieldGet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function() { return __classPrivateFieldSet; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ "./src/R.ts":
/*!******************!*\
  !*** ./src/R.ts ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.R = void 0;
//! Declares com.lightningkite.khrysalistemplate.R
var R;
(function (R) {
    let DefaultStrings;
    (function (DefaultStrings) {
        DefaultStrings.empty = "";
        DefaultStrings.app_name = "Khrysalis Template";
        DefaultStrings.back = "Back";
        DefaultStrings.ok = "OK";
        DefaultStrings.cancel = "Cancel";
        DefaultStrings.welcome_to_switch_town = "Welcome to Switch Town!";
        DefaultStrings.i_m_a_switch = "I\'m a switch!";
        DefaultStrings.go_to_another_screen = "Go to Another Screen";
        DefaultStrings.you_made_it_to_another_screen = "You made it to another screen!";
        DefaultStrings.welcome = "Welcome!";
        DefaultStrings.welcome_message = "This is the template for a Khrysalis project. This screen exists to help you figure out stuff about it.";
        DefaultStrings.increment_the_number = "Increment the Number";
        DefaultStrings.text_field = "Text Field";
        DefaultStrings.select_demo = "Select Demo";
        DefaultStrings.username = "Username";
        DefaultStrings.password = "Password";
        DefaultStrings.i_agree = "I Agree to the Terms of Service";
        DefaultStrings.submit = "Submit";
        DefaultStrings.mustAgree = "You must agree to the terms of service.";
        DefaultStrings.verify_password = "Verify Password";
        DefaultStrings.gallery = "Gallery";
        DefaultStrings.camera = "Camera";
        DefaultStrings.get_location = "Get Location";
        DefaultStrings.check_out_my_multiple_rows = "Check out my multiple rows";
        DefaultStrings.lorem_ipsum = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum. ";
        DefaultStrings.lorem_pixel = "Lorem Pixel";
        DefaultStrings.connect = "Connect";
        DefaultStrings.this_data_is_loaded_from_json_placeholder_typicode = "This data is loaded from JSON Placeholder Typicode. ";
    })(DefaultStrings = R.DefaultStrings || (R.DefaultStrings = {}));
    R._string = DefaultStrings;
})(R = exports.R || (exports.R = {}));


/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const MainVG_shared_1 = __webpack_require__(/*! ./vg/MainVG.shared */ "./src/vg/MainVG.shared.ts");
const vg = new MainVG_shared_1.MainVG();
const view = vg.generate(window);
document.body.appendChild(view);


/***/ }),

/***/ "./src/layout/ComponentTestXml.ts":
/*!****************************************!*\
  !*** ./src/layout/ComponentTestXml.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComponentTestXml = void 0;
//
// ComponentTestXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const component_test_html_1 = __importDefault(__webpack_require__(/*! ./component_test.html */ "./src/layout/component_test.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.ComponentTestXml
class ComponentTestXml {
    loadHtmlString() {
        return component_test_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.label = html_1.getViewById(view, "label");
        this.button = html_1.getViewById(view, "button");
        return view;
    }
}
exports.ComponentTestXml = ComponentTestXml;


/***/ }),

/***/ "./src/layout/ComponentTextXml.ts":
/*!****************************************!*\
  !*** ./src/layout/ComponentTextXml.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComponentTextXml = void 0;
//
// ComponentTextXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const component_text_html_1 = __importDefault(__webpack_require__(/*! ./component_text.html */ "./src/layout/component_text.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.ComponentTextXml
class ComponentTextXml {
    loadHtmlString() {
        return component_text_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.label = html_1.getViewById(view, "label");
        return view;
    }
}
exports.ComponentTextXml = ComponentTextXml;


/***/ }),

/***/ "./src/layout/ControlsDemoXml.ts":
/*!***************************************!*\
  !*** ./src/layout/ControlsDemoXml.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ControlsDemoXml = void 0;
//
// ControlsDemoXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const controls_demo_html_1 = __importDefault(__webpack_require__(/*! ./controls_demo.html */ "./src/layout/controls_demo.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml
class ControlsDemoXml {
    loadHtmlString() {
        return controls_demo_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.editableText = html_1.getViewById(view, "editableText");
        this.numberText = html_1.getViewById(view, "numberText");
        this.editableAutoText = html_1.getViewById(view, "editableAutoText");
        this.editableTextCopy = html_1.getViewById(view, "editableTextCopy");
        this.editableTextBig = html_1.getViewById(view, "editableTextBig");
        this.spinner = html_1.getViewById(view, "spinner");
        return view;
    }
}
exports.ControlsDemoXml = ControlsDemoXml;


/***/ }),

/***/ "./src/layout/DateButtonDemoXml.ts":
/*!*****************************************!*\
  !*** ./src/layout/DateButtonDemoXml.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DateButtonDemoXml = void 0;
//
// DateButtonDemoXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const date_button_demo_html_1 = __importDefault(__webpack_require__(/*! ./date_button_demo.html */ "./src/layout/date_button_demo.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.DateButtonDemoXml
class DateButtonDemoXml {
    loadHtmlString() {
        return date_button_demo_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.text = html_1.getViewById(view, "text");
        this.dateButton = html_1.getViewById(view, "dateButton");
        this.timeButton = html_1.getViewById(view, "timeButton");
        return view;
    }
}
exports.DateButtonDemoXml = DateButtonDemoXml;


/***/ }),

/***/ "./src/layout/DateRangeDemoXml.ts":
/*!****************************************!*\
  !*** ./src/layout/DateRangeDemoXml.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DateRangeDemoXml = void 0;
//
// DateRangeDemoXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const CustomView_actual_1 = __webpack_require__(/*! khrysalis/dist/views/CustomView.actual */ "../../khrysalis/web/dist/views/CustomView.actual.js");
const MonthCVD_shared_1 = __webpack_require__(/*! khrysalis/dist/views/MonthCVD.shared */ "../../khrysalis/web/dist/views/MonthCVD.shared.js");
const SelectDateMonthCVD_shared_1 = __webpack_require__(/*! khrysalis/dist/views/SelectDateMonthCVD.shared */ "../../khrysalis/web/dist/views/SelectDateMonthCVD.shared.js");
const SelectDateRangeMonthCVD_shared_1 = __webpack_require__(/*! khrysalis/dist/views/SelectDateRangeMonthCVD.shared */ "../../khrysalis/web/dist/views/SelectDateRangeMonthCVD.shared.js");
const SelectMultipleDatesMonthCVD_shared_1 = __webpack_require__(/*! khrysalis/dist/views/SelectMultipleDatesMonthCVD.shared */ "../../khrysalis/web/dist/views/SelectMultipleDatesMonthCVD.shared.js");
const date_range_demo_html_1 = __importDefault(__webpack_require__(/*! ./date_range_demo.html */ "./src/layout/date_range_demo.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.DateRangeDemoXml
class DateRangeDemoXml {
    loadHtmlString() {
        return date_range_demo_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.month = html_1.getViewById(view, "month");
        this.month2 = html_1.getViewById(view, "month2");
        this.month3 = html_1.getViewById(view, "month3");
        this.month4 = html_1.getViewById(view, "month4");
        if (this.month) {
            this.monthDelegate = new MonthCVD_shared_1.MonthCVD();
            CustomView_actual_1.customViewSetDelegate(this.month, this.monthDelegate);
        }
        if (this.month2) {
            this.month2Delegate = new SelectDateMonthCVD_shared_1.SelectDateMonthCVD();
            CustomView_actual_1.customViewSetDelegate(this.month2, this.month2Delegate);
        }
        if (this.month3) {
            this.month3Delegate = new SelectDateRangeMonthCVD_shared_1.SelectDateRangeMonthCVD();
            CustomView_actual_1.customViewSetDelegate(this.month3, this.month3Delegate);
        }
        if (this.month4) {
            this.month4Delegate = new SelectMultipleDatesMonthCVD_shared_1.SelectMultipleDatesMonthCVD();
            CustomView_actual_1.customViewSetDelegate(this.month4, this.month4Delegate);
        }
        return view;
    }
}
exports.DateRangeDemoXml = DateRangeDemoXml;


/***/ }),

/***/ "./src/layout/DrawableDemoXml.ts":
/*!***************************************!*\
  !*** ./src/layout/DrawableDemoXml.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DrawableDemoXml = void 0;
//
// DrawableDemoXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const drawable_demo_html_1 = __importDefault(__webpack_require__(/*! ./drawable_demo.html */ "./src/layout/drawable_demo.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.DrawableDemoXml
class DrawableDemoXml {
    loadHtmlString() {
        return drawable_demo_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        return view;
    }
}
exports.DrawableDemoXml = DrawableDemoXml;


/***/ }),

/***/ "./src/layout/ExampleContentXml.ts":
/*!*****************************************!*\
  !*** ./src/layout/ExampleContentXml.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExampleContentXml = void 0;
//
// ExampleContentXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const example_content_html_1 = __importDefault(__webpack_require__(/*! ./example_content.html */ "./src/layout/example_content.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.ExampleContentXml
class ExampleContentXml {
    loadHtmlString() {
        return example_content_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.scrollView = html_1.getViewById(view, "scrollView");
        this.exampleContentNumber = html_1.getViewById(view, "exampleContentNumber");
        this.exampleContentIncrement = html_1.getViewById(view, "exampleContentIncrement");
        this.chainedNumber = html_1.getViewById(view, "chainedNumber");
        this.chainedIncrement = html_1.getViewById(view, "chainedIncrement");
        this.scrollToTop = html_1.getViewById(view, "scrollToTop");
        return view;
    }
}
exports.ExampleContentXml = ExampleContentXml;


/***/ }),

/***/ "./src/layout/ExternalTestXml.ts":
/*!***************************************!*\
  !*** ./src/layout/ExternalTestXml.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExternalTestXml = void 0;
//
// ExternalTestXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const external_test_html_1 = __importDefault(__webpack_require__(/*! ./external_test.html */ "./src/layout/external_test.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.ExternalTestXml
class ExternalTestXml {
    loadHtmlString() {
        return external_test_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.scrollView = html_1.getViewById(view, "scrollView");
        this.openMap = html_1.getViewById(view, "openMap");
        this.openWeb = html_1.getViewById(view, "openWeb");
        this.openEvent = html_1.getViewById(view, "openEvent");
        return view;
    }
}
exports.ExternalTestXml = ExternalTestXml;


/***/ }),

/***/ "./src/layout/FloatingHexagonsDemoXml.ts":
/*!***********************************************!*\
  !*** ./src/layout/FloatingHexagonsDemoXml.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FloatingHexagonsDemoXml = void 0;
//
// FloatingHexagonsDemoXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const CustomView_actual_1 = __webpack_require__(/*! khrysalis/dist/views/CustomView.actual */ "../../khrysalis/web/dist/views/CustomView.actual.js");
const FloatingHexagonsDemoVG_shared_1 = __webpack_require__(/*! ../vg/FloatingHexagonsDemoVG.shared */ "./src/vg/FloatingHexagonsDemoVG.shared.ts");
const floating_hexagons_demo_html_1 = __importDefault(__webpack_require__(/*! ./floating_hexagons_demo.html */ "./src/layout/floating_hexagons_demo.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.FloatingHexagonsDemoXml
class FloatingHexagonsDemoXml {
    loadHtmlString() {
        return floating_hexagons_demo_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.customView = html_1.getViewById(view, "customView");
        if (this.customView) {
            this.customViewDelegate = new FloatingHexagonsDemoVG_shared_1.FloatingHexagonsDelegate();
            CustomView_actual_1.customViewSetDelegate(this.customView, this.customViewDelegate);
        }
        return view;
    }
}
exports.FloatingHexagonsDemoXml = FloatingHexagonsDemoXml;


/***/ }),

/***/ "./src/layout/HttpDemoXml.ts":
/*!***********************************!*\
  !*** ./src/layout/HttpDemoXml.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpDemoXml = void 0;
//
// HttpDemoXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const http_demo_html_1 = __importDefault(__webpack_require__(/*! ./http_demo.html */ "./src/layout/http_demo.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.HttpDemoXml
class HttpDemoXml {
    loadHtmlString() {
        return http_demo_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.items = html_1.getViewById(view, "items");
        return view;
    }
}
exports.HttpDemoXml = HttpDemoXml;


/***/ }),

/***/ "./src/layout/LoadImageDemoXml.ts":
/*!****************************************!*\
  !*** ./src/layout/LoadImageDemoXml.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoadImageDemoXml = void 0;
//
// LoadImageDemoXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const load_image_demo_html_1 = __importDefault(__webpack_require__(/*! ./load_image_demo.html */ "./src/layout/load_image_demo.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.LoadImageDemoXml
class LoadImageDemoXml {
    loadHtmlString() {
        return load_image_demo_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.gallery = html_1.getViewById(view, "gallery");
        this.galleryMultiple = html_1.getViewById(view, "galleryMultiple");
        this.camera = html_1.getViewById(view, "camera");
        this.loremPixel = html_1.getViewById(view, "lorem_pixel");
        this.image = html_1.getViewById(view, "image");
        return view;
    }
}
exports.LoadImageDemoXml = LoadImageDemoXml;


/***/ }),

/***/ "./src/layout/LocationDemoXml.ts":
/*!***************************************!*\
  !*** ./src/layout/LocationDemoXml.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationDemoXml = void 0;
//
// LocationDemoXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const location_demo_html_1 = __importDefault(__webpack_require__(/*! ./location_demo.html */ "./src/layout/location_demo.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.LocationDemoXml
class LocationDemoXml {
    loadHtmlString() {
        return location_demo_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.getLocation = html_1.getViewById(view, "get_location");
        this.locationDisplay = html_1.getViewById(view, "location_display");
        return view;
    }
}
exports.LocationDemoXml = LocationDemoXml;


/***/ }),

/***/ "./src/layout/LoginDemoXml.ts":
/*!************************************!*\
  !*** ./src/layout/LoginDemoXml.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoginDemoXml = void 0;
//
// LoginDemoXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const login_demo_html_1 = __importDefault(__webpack_require__(/*! ./login_demo.html */ "./src/layout/login_demo.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.LoginDemoXml
class LoginDemoXml {
    loadHtmlString() {
        return login_demo_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.username = html_1.getViewById(view, "username");
        this.password = html_1.getViewById(view, "password");
        this.verifyPassword = html_1.getViewById(view, "verifyPassword");
        this.agree = html_1.getViewById(view, "agree");
        this.submitLoading = html_1.getViewById(view, "submitLoading");
        this.submit = html_1.getViewById(view, "submit");
        return view;
    }
}
exports.LoginDemoXml = LoginDemoXml;


/***/ }),

/***/ "./src/layout/MainXml.ts":
/*!*******************************!*\
  !*** ./src/layout/MainXml.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MainXml = void 0;
//
// MainXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const main_html_1 = __importDefault(__webpack_require__(/*! ./main.html */ "./src/layout/main.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.MainXml
class MainXml {
    loadHtmlString() {
        return main_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.topBar = html_1.getViewById(view, "topBar");
        this.mainBack = html_1.getViewById(view, "mainBack");
        this.title = html_1.getViewById(view, "title");
        this.mainContent = html_1.getViewById(view, "mainContent");
        this.bottom0 = html_1.getViewById(view, "bottom0");
        return view;
    }
}
exports.MainXml = MainXml;


/***/ }),

/***/ "./src/layout/MarginTestXml.ts":
/*!*************************************!*\
  !*** ./src/layout/MarginTestXml.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MarginTestXml = void 0;
//
// MarginTestXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const margin_test_html_1 = __importDefault(__webpack_require__(/*! ./margin_test.html */ "./src/layout/margin_test.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.MarginTestXml
class MarginTestXml {
    loadHtmlString() {
        return margin_test_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.scrollView = html_1.getViewById(view, "scrollView");
        this.scrollToTop = html_1.getViewById(view, "scrollToTop");
        return view;
    }
}
exports.MarginTestXml = MarginTestXml;


/***/ }),

/***/ "./src/layout/MultipleDemoXml.ts":
/*!***************************************!*\
  !*** ./src/layout/MultipleDemoXml.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MultipleDemoXml = void 0;
//
// MultipleDemoXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const multiple_demo_html_1 = __importDefault(__webpack_require__(/*! ./multiple_demo.html */ "./src/layout/multiple_demo.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.MultipleDemoXml
class MultipleDemoXml {
    loadHtmlString() {
        return multiple_demo_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.list = html_1.getViewById(view, "list");
        return view;
    }
}
exports.MultipleDemoXml = MultipleDemoXml;


/***/ }),

/***/ "./src/layout/PongDemoXml.ts":
/*!***********************************!*\
  !*** ./src/layout/PongDemoXml.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PongDemoXml = void 0;
//
// PongDemoXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const CustomView_actual_1 = __webpack_require__(/*! khrysalis/dist/views/CustomView.actual */ "../../khrysalis/web/dist/views/CustomView.actual.js");
const PongDemoVG_shared_1 = __webpack_require__(/*! ../vg/PongDemoVG.shared */ "./src/vg/PongDemoVG.shared.ts");
const pong_demo_html_1 = __importDefault(__webpack_require__(/*! ./pong_demo.html */ "./src/layout/pong_demo.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.PongDemoXml
class PongDemoXml {
    loadHtmlString() {
        return pong_demo_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.customView = html_1.getViewById(view, "customView");
        if (this.customView) {
            this.customViewDelegate = new PongDemoVG_shared_1.PongDelegate();
            CustomView_actual_1.customViewSetDelegate(this.customView, this.customViewDelegate);
        }
        return view;
    }
}
exports.PongDemoXml = PongDemoXml;


/***/ }),

/***/ "./src/layout/PreviewXml.ts":
/*!**********************************!*\
  !*** ./src/layout/PreviewXml.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PreviewXml = void 0;
//
// PreviewXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const preview_html_1 = __importDefault(__webpack_require__(/*! ./preview.html */ "./src/layout/preview.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.PreviewXml
class PreviewXml {
    loadHtmlString() {
        return preview_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.viewName = html_1.getViewById(view, "viewName");
        this.pager = html_1.getViewById(view, "pager");
        return view;
    }
}
exports.PreviewXml = PreviewXml;


/***/ }),

/***/ "./src/layout/SegmentedControlDemoXml.ts":
/*!***********************************************!*\
  !*** ./src/layout/SegmentedControlDemoXml.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SegmentedControlDemoXml = void 0;
//
// SegmentedControlDemoXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const segmented_control_demo_html_1 = __importDefault(__webpack_require__(/*! ./segmented_control_demo.html */ "./src/layout/segmented_control_demo.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.SegmentedControlDemoXml
class SegmentedControlDemoXml {
    loadHtmlString() {
        return segmented_control_demo_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.tabs = html_1.getViewById(view, "tabs");
        this.tabs2 = html_1.getViewById(view, "tabs2");
        return view;
    }
}
exports.SegmentedControlDemoXml = SegmentedControlDemoXml;


/***/ }),

/***/ "./src/layout/SelectDemoXml.ts":
/*!*************************************!*\
  !*** ./src/layout/SelectDemoXml.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SelectDemoXml = void 0;
//
// SelectDemoXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const select_demo_html_1 = __importDefault(__webpack_require__(/*! ./select_demo.html */ "./src/layout/select_demo.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.SelectDemoXml
class SelectDemoXml {
    loadHtmlString() {
        return select_demo_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.list = html_1.getViewById(view, "list");
        return view;
    }
}
exports.SelectDemoXml = SelectDemoXml;


/***/ }),

/***/ "./src/layout/SliderDemoXml.ts":
/*!*************************************!*\
  !*** ./src/layout/SliderDemoXml.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SliderDemoXml = void 0;
//
// SliderDemoXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const slider_demo_html_1 = __importDefault(__webpack_require__(/*! ./slider_demo.html */ "./src/layout/slider_demo.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.SliderDemoXml
class SliderDemoXml {
    loadHtmlString() {
        return slider_demo_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.slider = html_1.getViewById(view, "slider");
        this.valueDisplay = html_1.getViewById(view, "valueDisplay");
        this.rating = html_1.getViewById(view, "rating");
        this.ratingDisplayStars = html_1.getViewById(view, "ratingDisplayStars");
        this.ratingDisplayStarsSmall = html_1.getViewById(view, "ratingDisplayStarsSmall");
        this.ratingDisplayNumber = html_1.getViewById(view, "ratingDisplayNumber");
        this.ratingFloat = html_1.getViewById(view, "ratingFloat");
        this.ratingDisplayStarsFloat = html_1.getViewById(view, "ratingDisplayStarsFloat");
        this.ratingDisplayStarsSmallFloat = html_1.getViewById(view, "ratingDisplayStarsSmallFloat");
        this.ratingDisplayNumberFloat = html_1.getViewById(view, "ratingDisplayNumberFloat");
        return view;
    }
}
exports.SliderDemoXml = SliderDemoXml;


/***/ }),

/***/ "./src/layout/ViewPagerDemoXml.ts":
/*!****************************************!*\
  !*** ./src/layout/ViewPagerDemoXml.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ViewPagerDemoXml = void 0;
//
// ViewPagerDemoXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const view_pager_demo_html_1 = __importDefault(__webpack_require__(/*! ./view_pager_demo.html */ "./src/layout/view_pager_demo.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.ViewPagerDemoXml
class ViewPagerDemoXml {
    loadHtmlString() {
        return view_pager_demo_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.viewPager = html_1.getViewById(view, "viewPager");
        this.viewPagerIndicator = html_1.getViewById(view, "viewPagerIndicator");
        return view;
    }
}
exports.ViewPagerDemoXml = ViewPagerDemoXml;


/***/ }),

/***/ "./src/layout/WebsocketDemoXml.ts":
/*!****************************************!*\
  !*** ./src/layout/WebsocketDemoXml.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebsocketDemoXml = void 0;
//
// WebsocketDemoXml.ts
// Created by Khrysalis XML Typescript
//
const html_1 = __webpack_require__(/*! khrysalis/dist/views/html */ "../../khrysalis/web/dist/views/html.js");
const websocket_demo_html_1 = __importDefault(__webpack_require__(/*! ./websocket_demo.html */ "./src/layout/websocket_demo.html"));
//! Declares com.lightningkite.khrysalistemplate.layouts.WebsocketDemoXml
class WebsocketDemoXml {
    loadHtmlString() {
        return websocket_demo_html_1.default;
    }
    setup(dependency) {
        const view = html_1.loadHtmlFromString(this.loadHtmlString());
        this.xmlRoot = view;
        this.items = html_1.getViewById(view, "items");
        this.input = html_1.getViewById(view, "input");
        this.submit = html_1.getViewById(view, "submit");
        return view;
    }
}
exports.WebsocketDemoXml = WebsocketDemoXml;


/***/ }),

/***/ "./src/layout/component_test.html":
/*!****************************************!*\
  !*** ./src/layout/component_test.html ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div style=\"padding:8px;flex-direction:row;display:flex;justify-content:center;align-items:center;text-align:center\"><div style=\"padding:8px;flex-shrink:1;width:0px;flex-grow:1\"><div class=\"id-label\"style=\"color:#222222;width:100%;font-size:16pt;text-align:left\">Welcome to Switch Town!</div></div><div style=\"padding:8px\"><button class=\"drawable-button-primary id-button\"style=\"padding:8px;text-transform:none;color:#FFFFFF;font-size:16pt\">OK</button></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/component_text.html":
/*!****************************************!*\
  !*** ./src/layout/component_text.html ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div style=\"position:relative\"><div style=\"padding:8px;top:0;left:0;width:100%;position:relative\"><div class=\"id-label\"style=\"padding:8px;color:#222222;width:100%;font-size:16pt;text-align:left\">Some Text</div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/controls_demo.html":
/*!***************************************!*\
  !*** ./src/layout/controls_demo.html ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div class=\"khrysalis-scroll-view\"style=\"overflow-x:hidden;overflow-y:scroll;position:relative\"><div style=\"top:0;left:0;width:100%;position:relative\"><div style=\"padding:8px;flex-direction:column;display:flex;width:100%\"><div style=\"padding:8px\"><div style=\"color:#000000;font-size:24pt;text-align:left\">Welcome to Switch Town!</div></div><div style=\"padding:8px;width:100%\"><label class=\"khrysalis-switch\"style=\"width:100%;align-items:flex-start\"for=\"id1\" ><div >Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum<br>        has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type<br>        and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into<br>        electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of<br>        Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus<br>        PageMaker including versions of Lorem Ipsum.<br>    </div><input id=\"id1\" type=\"checkbox\" value=\"id1\" ></input><div class=\"khrysalis-switch-back\"><span class=\"khrysalis-switch-front\"></span></div></label></div><div style=\"padding:8px;width:100%\"><label style=\"flex-direction:row;display:flex;width:100%;align-items:flex-start\"for=\"id2\" ><input id=\"id2\" type=\"checkbox\" value=\"id2\" ></input><div style=\"flex-grow:1\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum<br>        has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type<br>        and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into<br>        electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of<br>        Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus<br>        PageMaker including versions of Lorem Ipsum.<br>    </div></label></div><div style=\"padding:8px\"><div style=\"color:#222222;font-size:16pt;text-align:left\">Text Field</div></div><div style=\"padding:8px;width:100%\"><input class=\"drawable-border id-editableText\"style=\"padding:8px;color:#222222;width:100%;font-size:16pt;min-height:40px\"type=\"text\" ></input></div><div style=\"padding:8px;width:100%\"><input class=\"drawable-border id-numberText\"style=\"padding:8px;color:#222222;width:100%;font-size:16pt;min-height:40px\"type=\"text\" ></input></div><div style=\"padding:8px;width:100%\"><div class=\"khrysalis-autocomplete drawable-border\"style=\"padding:8px;color:#222222;width:100%;font-size:16pt;min-height:40px\"><input class=\"id-editableAutoText\"style=\"font-size:12pt\"type=\"text\" ></input></div></div><div style=\"padding:8px\"><div class=\"id-editableTextCopy\"style=\"padding:8px;color:#222222;font-size:16pt;text-align:left\"></div></div><div style=\"padding:8px;width:100%\"><textarea class=\"drawable-border id-editableTextBig\"style=\"padding:8px;color:#222222;width:100%;font-size:16pt;height:100px\"type=\"text\" ></textarea></div><div style=\"padding:8px;width:100%\"><select class=\"id-spinner drawable-border\"style=\"width:100%\"></select></div></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/date_button_demo.html":
/*!******************************************!*\
  !*** ./src/layout/date_button_demo.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div class=\"khrysalis-scroll-view\"style=\"overflow-x:hidden;overflow-y:scroll;position:relative\"><div style=\"top:0;left:0;width:100%;position:relative\"><div style=\"padding:8px;flex-direction:column;display:flex;width:100%\"><div style=\"padding:8px;width:100%\"><div class=\"id-text\"style=\"color:#222222;width:100%;font-size:16pt;text-align:left\"></div></div><div style=\"padding:8px;width:100%\"><input class=\"drawable-button-primary id-dateButton\"style=\"padding:8px;text-transform:none;color:#FFFFFF;width:100%;font-size:16pt\"type=\"date\" ></input></div><div style=\"padding:8px;width:100%\"><input class=\"drawable-button-primary id-timeButton\"style=\"padding:8px;text-transform:none;color:#FFFFFF;width:100%;font-size:16pt\"type=\"time\" ></input></div></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/date_range_demo.html":
/*!*****************************************!*\
  !*** ./src/layout/date_range_demo.html ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div class=\"khrysalis-scroll-view\"style=\"overflow-x:hidden;overflow-y:scroll;position:relative\"><div style=\"top:0;left:0;width:100%;position:relative\"><div style=\"flex-direction:column;display:flex;width:100%\"><div style=\"width:100%;padding-right:40px\"><div class=\"khrysalis-com.lightningkite.khrysalis.views.-custom-view id-month\"style=\"background-color:var(--color-white);width:100%;height:350px\"></div></div><div style=\"width:100%;padding-right:40px\"><div class=\"khrysalis-com.lightningkite.khrysalis.views.-custom-view id-month2\"style=\"background-color:var(--color-white);width:100%;height:350px\"></div></div><div style=\"width:100%;padding-right:40px\"><div class=\"khrysalis-com.lightningkite.khrysalis.views.-custom-view id-month3\"style=\"background-color:var(--color-white);width:100%;height:350px\"></div></div><div style=\"width:100%;padding-right:40px\"><div class=\"khrysalis-com.lightningkite.khrysalis.views.-custom-view id-month4\"style=\"background-color:var(--color-white);width:100%;height:350px\"></div></div></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/drawable_demo.html":
/*!***************************************!*\
  !*** ./src/layout/drawable_demo.html ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div class=\"khrysalis-scroll-view\"style=\"overflow-x:hidden;overflow-y:scroll;position:relative\"><div style=\"top:0;left:0;width:100%;position:relative\"><div style=\"padding:8px;flex-direction:column;display:flex;width:100%\"><div style=\"padding:8px\"><div style=\"color:#000000;font-size:24pt;text-align:left\">Welcome!</div></div><div style=\"width:100%\"><div style=\"flex-direction:row;display:flex;width:100%;justify-content:center;align-items:center;text-align:center\"><div style=\"padding:8px;flex-shrink:1;width:0px;height:50px;flex-grow:1\"><button class=\"drawable-button-accent\"style=\"width:100%;height:100%\">OK</button></div><div style=\"padding:8px;flex-shrink:1;width:0px;height:50px;flex-grow:1\"><button class=\"drawable-button-disabled\"style=\"width:100%;height:100%\">OK</button></div><div style=\"padding:8px;flex-shrink:1;width:0px;height:50px;flex-grow:1\"><button class=\"drawable-button-primary\"style=\"width:100%;height:100%\">OK</button></div></div></div><div style=\"width:100%\"><div style=\"flex-direction:row;display:flex;width:100%;justify-content:center;align-items:center;text-align:center\"><div style=\"padding:8px;flex-shrink:1;width:0px;height:50px;flex-grow:1\"><image style=\"width:100%;height:100%\"src=\"src/images/reason-expertise.png\" ></image></div><div style=\"padding:8px;flex-shrink:1;width:0px;height:50px;flex-grow:1\"><button class=\"drawable-border\"style=\"width:100%;height:100%\">OK</button></div><div style=\"padding:8px;flex-shrink:1;width:0px;height:50px;flex-grow:1\"><image style=\"background-color:var(--color-color-primary);width:100%;height:100%\"src=\"src/images/ic-arrow-back-white-24dp.svg\" ></image></div></div></div><div style=\"width:100%\"><div style=\"flex-direction:row;display:flex;width:100%;justify-content:center;align-items:center;text-align:center\"><div style=\"padding:8px;flex-shrink:1;width:0px;height:50px;flex-grow:1\"><image style=\"width:100%;height:100%\"src=\"src/images/ic-android-black-24dp.svg\" ></image></div><div style=\"padding:8px;flex-shrink:1;width:0px;height:50px;flex-grow:1\"><image style=\"width:100%;height:100%\"src=\"src/images/ic-beach-access-black-24dp.svg\" ></image></div><div style=\"padding:8px;flex-shrink:1;width:0px;height:50px;flex-grow:1\"><image style=\"width:100%;height:100%\"src=\"src/images/ic-exposure-black-24dp.svg\" ></image></div></div></div></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/example_content.html":
/*!*****************************************!*\
  !*** ./src/layout/example_content.html ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div class=\"khrysalis-scroll-view id-scrollView\"style=\"overflow-x:hidden;overflow-y:scroll;position:relative\"><div style=\"top:0;left:0;width:100%;position:relative\"><div style=\"padding:8px;flex-direction:column;display:flex;width:100%\"><div style=\"padding:8px\"><div style=\"color:#000000;font-size:24pt;text-align:left\">Welcome!</div></div><div style=\"padding:8px\"><div style=\"color:#222222;font-size:16pt;text-align:left\">This is the template for a Khrysalis project. This screen exists to help you figure out stuff about it.</div></div><div style=\"width:100%\"><div style=\"flex-direction:row;display:flex;width:100%;justify-content:center;align-items:center;text-align:center\"><div style=\"padding:8px;flex-shrink:1;width:0px;flex-grow:1\"><div class=\"id-exampleContentNumber\"style=\"color:#222222;width:100%;font-size:16pt;text-align:left\">0</div></div><div style=\"padding:8px\"><button class=\"drawable-button-primary id-exampleContentIncrement\"style=\"padding:8px;text-transform:none;color:#FFFFFF;font-size:16pt\">Increment the Number</button></div></div></div><div style=\"width:100%\"><div style=\"flex-direction:row;display:flex;width:100%;justify-content:center;align-items:center;text-align:center\"><div style=\"padding:8px;flex-shrink:1;width:0px;flex-grow:1\"><div class=\"id-chainedNumber\"style=\"color:#222222;width:100%;font-size:16pt;text-align:left\">0</div></div><div style=\"padding:8px\"><button class=\"drawable-button-primary id-chainedIncrement\"style=\"padding:8px;text-transform:none;color:#FFFFFF;font-size:16pt\">Increment the Number</button></div></div></div><div ><image style=\"width:100px;height:50px\"src=\"src/images/reason-expertise.png\" ></image></div><div style=\"padding:8px\"><button class=\"drawable-button-primary id-scrollToTop\"style=\"padding:8px;text-transform:none;color:#FFFFFF;font-size:16pt\">Scroll to Top</button></div></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/external_test.html":
/*!***************************************!*\
  !*** ./src/layout/external_test.html ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div class=\"khrysalis-scroll-view id-scrollView\"style=\"overflow-x:hidden;overflow-y:scroll;position:relative\"><div style=\"top:0;left:0;width:100%;position:relative\"><div style=\"padding:8px;flex-direction:column;display:flex;width:100%\"><div style=\"padding:8px\"><button class=\"drawable-button-primary id-openMap\"style=\"padding:8px;text-transform:none;color:#FFFFFF;font-size:16pt\">Show me Lightning Kite's Location</button></div><div style=\"padding:8px\"><button class=\"drawable-button-primary id-openWeb\"style=\"padding:8px;text-transform:none;color:#FFFFFF;font-size:16pt\">Show me Lightning Kite's Website</button></div><div style=\"padding:8px\"><button class=\"drawable-button-primary id-openEvent\"style=\"padding:8px;text-transform:none;color:#FFFFFF;font-size:16pt\">Show me a future event</button></div></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/floating_hexagons_demo.html":
/*!************************************************!*\
  !*** ./src/layout/floating_hexagons_demo.html ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div style=\"position:relative\"><div style=\"transform:translateX(-50%) translateY(-50%);top:50%;left:50%;width:100%;position:relative;height:100%\"><div class=\"khrysalis-com.lightningkite.khrysalis.views.-custom-view id-customView\"style=\"background-color:var(--color-black);width:100%;height:100%\"></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/http_demo.html":
/*!***********************************!*\
  !*** ./src/layout/http_demo.html ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div style=\"padding:8px;flex-direction:column;display:flex\"><div style=\"width:100%\"><div style=\"color:#222222;width:100%;font-size:16pt;text-align:left\">This data is loaded from JSON Placeholder<br>        Typicode.<br>    </div></div><div style=\"flex-shrink:1;width:100%;height:0px;flex-grow:1\"><div class=\"khrysalis-recycler id-items\"style=\"width:100%;height:100%\"id=\"list_e003d98f7d6d429d9d17d195568560dc\" ><script >prototypePopulateList(document.getElementById('list_e003d98f7d6d429d9d17d195568560dc'), 'component_text')</script></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/load_image_demo.html":
/*!*****************************************!*\
  !*** ./src/layout/load_image_demo.html ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div style=\"padding:8px;flex-direction:column;display:flex\"><div style=\"padding:8px;width:100%\"><button class=\"drawable-button-primary id-gallery\"style=\"padding:8px;text-transform:none;color:#FFFFFF;width:100%;font-size:16pt\">Gallery</button></div><div style=\"padding:8px;width:100%\"><button class=\"drawable-button-primary id-galleryMultiple\"style=\"padding:8px;text-transform:none;color:#FFFFFF;width:100%;font-size:16pt\">Multiple Gallery</button></div><div style=\"padding:8px;width:100%\"><button class=\"drawable-button-primary id-camera\"style=\"padding:8px;text-transform:none;color:#FFFFFF;width:100%;font-size:16pt\">Camera</button></div><div style=\"padding:8px;width:100%\"><button class=\"drawable-button-primary id-lorem_pixel\"style=\"padding:8px;text-transform:none;color:#FFFFFF;width:100%;font-size:16pt\">Lorem Pixel</button></div><div style=\"padding:8px;width:100%\"><image class=\"id-image\"style=\"background-color:#888;width:100%;height:200px\"></image></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/location_demo.html":
/*!***************************************!*\
  !*** ./src/layout/location_demo.html ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div style=\"padding:8px;flex-direction:column;display:flex\"><div style=\"padding:8px;width:100%\"><button class=\"drawable-button-primary id-get_location\"style=\"padding:8px;text-transform:none;color:#FFFFFF;width:100%;font-size:16pt\">Get Location</button></div><div style=\"padding:8px;width:100%\"><div class=\"id-location_display\"style=\"color:#222222;width:100%;font-size:16pt;text-align:left\">Camera</div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/login_demo.html":
/*!************************************!*\
  !*** ./src/layout/login_demo.html ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div class=\"khrysalis-scroll-view\"style=\"overflow-x:hidden;overflow-y:scroll;position:relative\"><div style=\"top:0;left:0;width:100%;position:relative\"><div style=\"padding:8px;flex-direction:column;display:flex;width:100%\"><div style=\"padding:8px\"><div style=\"color:#000000;font-size:24pt;text-align:left\">Welcome to Switch Town!</div></div><div style=\"padding:8px;width:100%\"><input class=\"id-username drawable-border\"style=\"padding:8px;color:#222222;width:100%;font-size:16pt;min-height:40px\"type=\"text\" ></input></div><div style=\"padding:8px;width:100%\"><input class=\"id-password drawable-border\"style=\"padding:8px;color:#222222;width:100%;font-size:16pt;min-height:40px\"type=\"text\" ></input></div><div style=\"padding:8px;width:100%\"><input class=\"drawable-border id-verifyPassword\"style=\"padding:8px;color:#222222;width:100%;font-size:16pt;min-height:40px\"type=\"text\" ></input></div><div style=\"padding:8px;width:100%\"><label style=\"flex-direction:row;display:flex;width:100%;align-items:center\"for=\"id0\" ><input class=\"id-agree\"id=\"id0\" type=\"checkbox\" value=\"id0\" ></input><div style=\"flex-grow:1\">I Agree to the Terms of Service</div></label></div><div style=\"width:100%\"><div class=\"id-submitLoading khrysalis-view-flipper\"style=\"width:100%;position:relative\"><div style=\"top:0;left:0;width:100%;position:relative\"><button class=\"drawable-button-primary id-submit\"style=\"padding:8px;text-transform:none;color:#FFFFFF;width:100%;font-size:16pt\">Submit</button></div></div></div></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/main.html":
/*!******************************!*\
  !*** ./src/layout/main.html ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div style=\"background-color:#0F0;flex-direction:column;display:flex\"><div style=\"width:100%\"><div class=\"id-topBar\"style=\"background-color:var(--color-color-primary);flex-direction:row;display:flex;padding-left:8px;width:100%;justify-content:center;align-items:center;padding-right:8px;text-align:center\"><div ><button class=\"id-mainBack\"style=\"background-color:#0000;padding:8px\"><image class=\"id-mainBack\"style=\"background-color:#0000;padding:8px\"src=\"src/images/ic-arrow-back-white-24dp.svg\" ></image></button></div><div style=\"flex-shrink:1;width:0px;flex-grow:1\"><div class=\"id-title\"style=\"padding:4px;color:#ffffff;width:100%;font-size:18pt;text-align:left\">Khrysalis Template</div></div></div></div><div style=\"flex-shrink:1;width:100%;height:0px;flex-grow:1\"><div class=\"khrysalis-swap id-mainContent\"style=\"background-color:#FFF;width:100%;height:100%\"></div></div><div style=\"width:100%\"><div class=\"id-bottom0 khrysalis-view\"style=\"background-color:var(--color-color-primary);width:100%;height:0px\"></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/margin_test.html":
/*!*************************************!*\
  !*** ./src/layout/margin_test.html ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div class=\"khrysalis-scroll-view id-scrollView\"style=\"overflow-x:hidden;overflow-y:scroll;position:relative\"><div style=\"top:0;left:0;width:100%;position:relative\"><div style=\"padding:8px;flex-direction:column;display:flex;width:100%\"><div style=\"width:100%\"><div style=\"width:100%;position:relative;height:200px\"><div style=\"padding:8px;top:0;left:0;position:relative\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left\">left|top</div></div><div style=\"padding:8px;left:0;bottom:0;position:absolute\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left\">left|bottom</div></div><div style=\"padding:8px;transform:translateY(-50%);top:50%;left:0;position:absolute\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left\">left|cv</div></div><div style=\"padding:8px;transform:translateX(-50%);top:0;left:50%;position:absolute\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left\">ch|top</div></div><div style=\"padding:8px;transform:translateX(-50%);left:50%;bottom:0;position:absolute\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left\">ch|bottom</div></div><div style=\"padding:8px;transform:translateX(-50%) translateY(-50%);top:50%;left:50%;position:absolute\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left\">ch|cv</div></div><div style=\"padding:8px;top:0;position:absolute;right:0\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left\">right|top</div></div><div style=\"padding:8px;bottom:0;position:absolute;right:0\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left\">right|bottom</div></div><div style=\"padding:8px;transform:translateY(-50%);top:50%;position:absolute;right:0\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left\">right|cv</div></div></div></div><div style=\"width:100%\"><div style=\"width:100%;position:relative;height:200px\"><div style=\"padding:8px;top:0;left:0;width:100%;position:relative\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;width:100%;font-size:16pt;text-align:left\">top</div></div><div style=\"padding:8px;left:0;bottom:0;width:100%;position:absolute\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;width:100%;font-size:16pt;text-align:left\">bottom</div></div><div style=\"padding:8px;transform:translateY(-50%);top:50%;left:0;width:100%;position:absolute\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;width:100%;font-size:16pt;text-align:left\">cv</div></div></div></div><div style=\"width:100%\"><div style=\"width:100%;position:relative;height:200px\"><div style=\"padding:8px;transform:translateY(-50%);top:50%;left:0;position:relative;height:100%\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left;height:100%\">left</div></div><div style=\"padding:8px;transform:translateY(-50%);top:50%;position:absolute;right:0;height:100%\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left;height:100%\">right</div></div><div style=\"padding:8px;transform:translateX(-50%) translateY(-50%);top:50%;left:50%;position:absolute;height:100%\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left;height:100%\">ch</div></div></div></div><div style=\"width:100%\"><div style=\"width:100%;position:relative;height:200px\"><div style=\"padding:8px;top:0;left:0;width:100%;position:relative;height:100%\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;width:100%;font-size:16pt;text-align:left;height:100%\">fill</div></div></div></div><div style=\"width:100%\"><div style=\"flex-direction:row;display:flex;width:100%;height:200px\"><div style=\"padding:8px;height:100%\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left;height:100%\">a</div></div><div style=\"padding:8px;height:100%\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left;height:100%\">b</div></div><div style=\"padding:8px;height:100%\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left;height:100%\">c</div></div><div style=\"padding:8px;height:100%\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left;height:100%\">d</div></div></div></div><div style=\"width:100%\"><div style=\"width:100%;position:relative;height:200px\"><div style=\"padding:8px;top:0;left:0;position:relative\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;font-size:16pt\">left|top</button></div><div style=\"padding:8px;left:0;bottom:0;position:absolute\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;font-size:16pt\">left|bottom</button></div><div style=\"padding:8px;transform:translateY(-50%);top:50%;left:0;position:absolute\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;font-size:16pt\">left|cv</button></div><div style=\"padding:8px;transform:translateX(-50%);top:0;left:50%;position:absolute\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;font-size:16pt\">ch|top</button></div><div style=\"padding:8px;transform:translateX(-50%);left:50%;bottom:0;position:absolute\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;font-size:16pt\">ch|bottom</button></div><div style=\"padding:8px;transform:translateX(-50%) translateY(-50%);top:50%;left:50%;position:absolute\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;font-size:16pt\">ch|cv</button></div><div style=\"padding:8px;top:0;position:absolute;right:0\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;font-size:16pt\">right|top</button></div><div style=\"padding:8px;bottom:0;position:absolute;right:0\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;font-size:16pt\">right|bottom</button></div><div style=\"padding:8px;transform:translateY(-50%);top:50%;position:absolute;right:0\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;font-size:16pt\">right|cv</button></div></div></div><div style=\"width:100%\"><div style=\"width:100%;position:relative;height:200px\"><div style=\"padding:8px;top:0;left:0;width:100%;position:relative\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;width:100%;font-size:16pt\">top</button></div><div style=\"padding:8px;left:0;bottom:0;width:100%;position:absolute\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;width:100%;font-size:16pt\">bottom</button></div><div style=\"padding:8px;transform:translateY(-50%);top:50%;left:0;width:100%;position:absolute\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;width:100%;font-size:16pt\">cv</button></div></div></div><div style=\"width:100%\"><div style=\"width:100%;position:relative;height:200px\"><div style=\"padding:8px;transform:translateY(-50%);top:50%;left:0;position:relative;height:100%\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;font-size:16pt;height:100%\">left</button></div><div style=\"padding:8px;transform:translateY(-50%);top:50%;position:absolute;right:0;height:100%\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;font-size:16pt;height:100%\">right</button></div><div style=\"padding:8px;transform:translateX(-50%) translateY(-50%);top:50%;left:50%;position:absolute;height:100%\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;font-size:16pt;height:100%\">ch</button></div></div></div><div style=\"width:100%\"><div style=\"width:100%;position:relative;height:200px\"><div style=\"padding:8px;top:0;left:0;width:100%;position:relative;height:100%\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;width:100%;font-size:16pt;height:100%\">fill</button></div></div></div><div style=\"align-self:flex-start;padding:8px\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left\">View One</div></div><div style=\"align-self:center;padding:8px\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left\">View Two</div></div><div style=\"align-self:flex-end;padding:8px\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;font-size:16pt;text-align:left\">View Three</div></div><div style=\"padding:8px;width:100%\"><div style=\"background-color:#FF8080;padding:16px;color:#222222;width:100%;font-size:16pt;text-align:left\">View Four</div></div><div style=\"align-self:flex-start;padding:8px\"><button class=\"drawable-button-primary id-scrollToTop\"style=\"padding:16px;text-transform:none;color:#FFFFFF;font-size:16pt\">Scroll to Top</button></div><div style=\"align-self:center;padding:8px\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;font-size:16pt\">View Two</button></div><div style=\"align-self:flex-end;padding:8px\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;font-size:16pt\">View Three</button></div><div style=\"padding:8px;width:100%\"><button class=\"drawable-button-primary\"style=\"padding:16px;text-transform:none;color:#FFFFFF;width:100%;font-size:16pt\">View Four</button></div><div style=\"padding:8px;width:100%\"><input style=\"padding:8px;color:#222222;width:100%;font-size:16pt\"type=\"text\" ></input></div><div style=\"padding:32px\"><div style=\"color:#222222;font-size:16pt;text-align:left\">This is some longer content that is used in an attempt to debug iOS's weirdness involving padding on LinearLayout.  Hopefully it works soon.</div></div><div ><div style=\"padding:32px;color:#222222;font-size:16pt;text-align:left\">This is some longer content that is used in an attempt to debug iOS's weirdness involving padding on LinearLayout.  Hopefully it works soon.</div></div></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/multiple_demo.html":
/*!***************************************!*\
  !*** ./src/layout/multiple_demo.html ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div style=\"flex-direction:column;display:flex\"><div style=\"padding:16px;width:100%\"><div style=\"color:#000000;width:100%;font-size:24pt;text-align:center\">Check out my multiple rows</div></div><div style=\"flex-shrink:1;width:100%;height:0px;flex-grow:1\"><div class=\"khrysalis-recycler id-list\"style=\"width:100%;height:100%\"id=\"list_601eeab1b7ff4d6e9e799da35e99a964\" ><script >prototypePopulateList(document.getElementById('list_601eeab1b7ff4d6e9e799da35e99a964'), 'component_test')</script></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/pong_demo.html":
/*!***********************************!*\
  !*** ./src/layout/pong_demo.html ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div style=\"position:relative\"><div style=\"transform:translateX(-50%) translateY(-50%);top:50%;left:50%;width:100%;position:relative\"><div class=\"khrysalis-com.lightningkite.khrysalis.views.-custom-view id-customView\"style=\"background-color:var(--color-black);width:100%\"></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/preview.html":
/*!*********************************!*\
  !*** ./src/layout/preview.html ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div style=\"flex-direction:column;display:flex\"><div style=\"width:100%\"><div class=\"id-viewName\"style=\"padding:8px;color:#222222;width:100%;font-size:16pt;text-align:center\">View Name</div></div><div style=\"flex-shrink:1;width:100%;height:0px;flex-grow:1\"><div class=\"khrysalis-pager id-pager\"style=\"background-color:var(--color-white);width:100%;height:100%\"><div class=\"khrysalis-pager-content\"></div><button class=\"khrysalis-pager-left\"></button><button class=\"khrysalis-pager-right\"></button></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/segmented_control_demo.html":
/*!************************************************!*\
  !*** ./src/layout/segmented_control_demo.html ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div style=\"flex-direction:column;display:flex\"><div style=\"width:100%\"><div class=\"id-tabs khrysalis-tabs\"style=\"width:100%\"></div></div><div style=\"width:100%\"><div class=\"id-tabs2 khrysalis-tabs\"style=\"width:100%\"></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/select_demo.html":
/*!*************************************!*\
  !*** ./src/layout/select_demo.html ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div style=\"flex-direction:column;display:flex\"><div style=\"padding:16px;width:100%\"><div style=\"color:#000000;width:100%;font-size:24pt;text-align:center\">Select Demo</div></div><div style=\"flex-shrink:1;width:100%;height:0px;flex-grow:1\"><div class=\"khrysalis-recycler id-list\"style=\"width:100%;height:100%\"id=\"list_1e37af630b1b4aa9be583ce1dda82211\" ><script >prototypePopulateList(document.getElementById('list_1e37af630b1b4aa9be583ce1dda82211'), 'component_test')</script></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/slider_demo.html":
/*!*************************************!*\
  !*** ./src/layout/slider_demo.html ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div class=\"khrysalis-scroll-view\"style=\"overflow-x:hidden;overflow-y:scroll;position:relative\"><div style=\"top:0;left:0;width:100%;position:relative\"><div style=\"flex-direction:column;display:flex;width:100%\"><div style=\"padding:16px;width:100%\"><input class=\"id-slider\"style=\"width:100%\"min=\"1\" max=\"100\" type=\"range\" value=\"50\" ></input></div><div style=\"padding:16px;width:100%\"><div class=\"id-valueDisplay\"style=\"color:#000000;width:100%;font-size:24pt;text-align:left\"></div></div><div style=\"padding:16px\"><div class=\"khrysalis-rating-bar id-rating\"style=\"flex-direction:row;display:flex;justify-content:center;align-items:center\"><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div></div></div><div style=\"padding:16px\"><div class=\"khrysalis-rating-bar id-ratingDisplayStars\"style=\"flex-direction:row;display:flex;justify-content:center;align-items:center\"><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div></div></div><div style=\"padding:16px\"><div class=\"id-ratingDisplayStarsSmall khrysalis-rating-bar\"style=\"flex-direction:row;display:flex;justify-content:center;align-items:center\"><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div></div></div><div style=\"padding:16px;width:100%\"><div class=\"id-ratingDisplayNumber\"style=\"color:#000000;width:100%;font-size:24pt;text-align:left\"></div></div><div style=\"padding:16px\"><div class=\"khrysalis-rating-bar id-ratingFloat\"style=\"flex-direction:row;display:flex;justify-content:center;align-items:center\"><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div></div></div><div style=\"padding:16px\"><div class=\"khrysalis-rating-bar id-ratingDisplayStarsFloat\"style=\"flex-direction:row;display:flex;justify-content:center;align-items:center\"><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div></div></div><div style=\"padding:16px\"><div class=\"id-ratingDisplayStarsSmallFloat khrysalis-rating-bar\"style=\"flex-direction:row;display:flex;justify-content:center;align-items:center\"><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div><div class=\"khrysalis-rating-bar-star khrysalis-rating-bar-star-on\"style=\"flex-grow:1\"></div></div></div><div style=\"padding:16px;width:100%\"><div class=\"id-ratingDisplayNumberFloat\"style=\"color:#000000;width:100%;font-size:24pt;text-align:left\"></div></div></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/view_pager_demo.html":
/*!*****************************************!*\
  !*** ./src/layout/view_pager_demo.html ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div style=\"position:relative\"><div style=\"top:0;left:0;width:100%;position:relative;height:100%\"><div class=\"id-viewPager khrysalis-pager\"style=\"width:100%;height:100%\"><div class=\"khrysalis-pager-content\"></div><button class=\"khrysalis-pager-left\"></button><button class=\"khrysalis-pager-right\"></button></div></div><div style=\"padding:8px;transform:translateX(-50%);left:50%;bottom:0;position:absolute\"><div class=\"khrysalis-page-indicator id-viewPagerIndicator\"></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/layout/websocket_demo.html":
/*!****************************************!*\
  !*** ./src/layout/websocket_demo.html ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Module
var code = "<div style=\"padding:8px;flex-direction:column;display:flex\"><div style=\"width:100%\"><div style=\"color:#222222;width:100%;font-size:16pt;text-align:left\">This attaches to a socket that just echos the value back.</div></div><div style=\"flex-shrink:1;width:100%;height:0px;flex-grow:1\"><div class=\"khrysalis-recycler id-items\"style=\"width:100%;height:100%\"id=\"list_04b1d89967a1435aa33938d018bae121\" ><script >prototypePopulateList(document.getElementById('list_04b1d89967a1435aa33938d018bae121'), 'component_text')</script></div></div><div style=\"width:100%\"><div style=\"flex-direction:row;display:flex;width:100%;justify-content:center;align-items:center;text-align:center\"><div style=\"padding:8px;flex-shrink:1;width:0px;flex-grow:1\"><input class=\"id-input\"style=\"color:#222222;width:100%;font-size:16pt\"type=\"text\" ></input></div><div ><button class=\"id-submit\"><image class=\"id-submit\"src=\"src/images/ic-send-black-24dp.svg\" ></image></button></div></div></div></div>";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/vg/ControlsDemoVG.shared.ts":
/*!*****************************************!*\
  !*** ./src/vg/ControlsDemoVG.shared.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ControlsDemoVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/ControlsDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml.numberText TS numberText
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.<anonymous>.xml TS xml
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTestXml TS ComponentTestXml
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.number TS number
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.<anonymous>.obs TS obs
// FQImport: com.lightningkite.khrysalis.observables.binding.bind>android.widget.Spinner TS spinnerBindAdvanced
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalis.observables.binding.bind>android.widget.AutoCompleteTextView TS androidWidgetAutoCompleteTextViewBind
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTestXml.label TS label
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.text TS text
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.view TS view
// FQImport: com.lightningkite.khrysalis.observables.binding.bindString>android.widget.EditText TS androidWidgetEditTextBindString
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTestXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml.editableAutoText TS editableAutoText
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.<anonymous>.t TS t
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml.editableText TS editableText
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.<anonymous>.n TS n
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.<anonymous>.item TS item
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.<anonymous>.view TS view
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml.editableTextCopy TS editableTextCopy
// FQImport: com.lightningkite.khrysalis.observables.combine>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any> TS comLightningkiteKhrysalisObservablesObservablePropertyCombine
// FQImport: com.lightningkite.khrysalis.observables.binding.bindInteger>android.widget.EditText TS androidWidgetEditTextBindInteger
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.options TS options
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty TS StandardObservableProperty
// FQImport: com.lightningkite.khrysalis.observables.binding.bindString>android.widget.TextView TS androidWidgetTextViewBindString
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty.value TS value
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml.editableTextBig TS editableTextBig
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml.spinner TS spinner
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml TS ControlsDemoXml
const AutoCompleteTextView_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/AutoCompleteTextView.binding.actual */ "../../khrysalis/web/dist/observables/binding/AutoCompleteTextView.binding.actual.js");
const Spinner_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/Spinner.binding.actual */ "../../khrysalis/web/dist/observables/binding/Spinner.binding.actual.js");
const EditText_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/EditText.binding.actual */ "../../khrysalis/web/dist/observables/binding/EditText.binding.actual.js");
const CombineObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/CombineObservableProperty.shared */ "../../khrysalis/web/dist/observables/CombineObservableProperty.shared.js");
const ComponentTestXml_1 = __webpack_require__(/*! ../layout/ComponentTestXml */ "./src/layout/ComponentTestXml.ts");
const StandardObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const TextView_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/TextView.binding.actual */ "../../khrysalis/web/dist/observables/binding/TextView.binding.actual.js");
const ControlsDemoXml_1 = __webpack_require__(/*! ../layout/ControlsDemoXml */ "./src/layout/ControlsDemoXml.ts");
//! Declares com.lightningkite.khrysalistemplate.vg.ControlsDemoVG
class ControlsDemoVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor() {
        super();
        this.text = new StandardObservableProperty_shared_1.StandardObservableProperty("", undefined);
        this.options = new StandardObservableProperty_shared_1.StandardObservableProperty(["Apple", "Banana", "Chili Pepper", "Dragon Fruit"], undefined);
        this._number = new StandardObservableProperty_shared_1.StandardObservableProperty(32, undefined);
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.ControlsDemoVG.title
    get title() { return "Controls Demo"; }
    generate(dependency) {
        const xml = new ControlsDemoXml_1.ControlsDemoXml();
        const view = xml.setup(dependency);
        EditText_binding_actual_1.androidWidgetEditTextBindInteger(xml.numberText, this._number);
        TextView_binding_actual_1.androidWidgetTextViewBindString(xml.editableText, CombineObservableProperty_shared_1.comLightningkiteKhrysalisObservablesObservablePropertyCombine(this.text, this._number, (t, n) => `${t} (${n})`));
        EditText_binding_actual_1.androidWidgetEditTextBindString(xml.editableAutoText, this.text);
        AutoCompleteTextView_binding_actual_1.androidWidgetAutoCompleteTextViewBind(xml.editableAutoText, this.options, (it) => it, (item) => {
            this.text.value = item;
        });
        TextView_binding_actual_1.androidWidgetTextViewBindString(xml.editableTextCopy, this.text);
        EditText_binding_actual_1.androidWidgetEditTextBindString(xml.editableTextBig, this.text);
        Spinner_binding_actual_1.spinnerBindAdvanced(xml.spinner, this.options, this.text, (obs) => {
            const xml = new ComponentTestXml_1.ComponentTestXml();
            const view = xml.setup(dependency);
            TextView_binding_actual_1.androidWidgetTextViewBindString(xml.label, obs);
            return view;
        });
        return view;
    }
}
exports.ControlsDemoVG = ControlsDemoVG;


/***/ }),

/***/ "./src/vg/DateButtonDemoVG.shared.ts":
/*!*******************************************!*\
  !*** ./src/vg/DateButtonDemoVG.shared.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DateButtonDemoVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/DateButtonDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: java.util.Date TS Date
// FQImport: com.lightningkite.khrysalistemplate.vg.DateButtonDemoVG.generate.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.time.format>java.util.Date TS javaUtilDateFormat
// FQImport: com.lightningkite.khrysalistemplate.layouts.DateButtonDemoXml.text TS text
// FQImport: com.lightningkite.khrysalistemplate.layouts.DateButtonDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalis.time.ClockPartSize.Medium TS Medium
// FQImport: com.lightningkite.khrysalis.time.ClockPartSize TS ClockPartSize
// FQImport: com.lightningkite.khrysalistemplate.layouts.DateButtonDemoXml.dateButton TS dateButton
// FQImport: com.lightningkite.khrysalis.observables.binding.bind>com.lightningkite.khrysalis.views.android.DateButton TS comLightningkiteKhrysalisViewsAndroidDateButtonBind
// FQImport: com.lightningkite.khrysalistemplate.layouts.DateButtonDemoXml TS DateButtonDemoXml
// FQImport: com.lightningkite.khrysalistemplate.vg.DateButtonDemoVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalistemplate.vg.DateButtonDemoVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty TS StandardObservableProperty
// FQImport: com.lightningkite.khrysalistemplate.layouts.DateButtonDemoXml.timeButton TS timeButton
// FQImport: com.lightningkite.khrysalis.observables.binding.bindString>android.widget.TextView TS androidWidgetTextViewBindString
// FQImport: com.lightningkite.khrysalis.observables.binding.bind>com.lightningkite.khrysalis.views.android.TimeButton TS comLightningkiteKhrysalisViewsAndroidTimeButtonBind
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty TS MutableObservableProperty
// FQImport: com.lightningkite.khrysalis.observables.map>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any> TS comLightningkiteKhrysalisObservablesObservablePropertyMap
// FQImport: com.lightningkite.khrysalistemplate.vg.DateButtonDemoVG.date TS date
// FQImport: com.lightningkite.khrysalistemplate.vg.DateButtonDemoVG.generate.view TS view
const DateButtonDemoXml_1 = __webpack_require__(/*! ../layout/DateButtonDemoXml */ "./src/layout/DateButtonDemoXml.ts");
const StandardObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const TransformedObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/TransformedObservableProperty.shared */ "../../khrysalis/web/dist/observables/TransformedObservableProperty.shared.js");
const TextView_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/TextView.binding.actual */ "../../khrysalis/web/dist/observables/binding/TextView.binding.actual.js");
const DateButton_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/DateButton.binding.actual */ "../../khrysalis/web/dist/observables/binding/DateButton.binding.actual.js");
const Date_actual_1 = __webpack_require__(/*! khrysalis/dist/time/Date.actual */ "../../khrysalis/web/dist/time/Date.actual.js");
const ClockPartSize_shared_1 = __webpack_require__(/*! khrysalis/dist/time/ClockPartSize.shared */ "../../khrysalis/web/dist/time/ClockPartSize.shared.js");
//! Declares com.lightningkite.khrysalistemplate.vg.DateButtonDemoVG
class DateButtonDemoVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor() {
        super();
        this.date = new StandardObservableProperty_shared_1.StandardObservableProperty(Date.constructor(), undefined);
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.DateButtonDemoVG.title
    get title() { return "Date Button Demo"; }
    generate(dependency) {
        const xml = new DateButtonDemoXml_1.DateButtonDemoXml();
        const view = xml.setup(dependency);
        TextView_binding_actual_1.androidWidgetTextViewBindString(xml.text, TransformedObservableProperty_shared_1.comLightningkiteKhrysalisObservablesObservablePropertyMap(this.date, (it) => Date_actual_1.javaUtilDateFormat(it, ClockPartSize_shared_1.ClockPartSize.Medium, ClockPartSize_shared_1.ClockPartSize.Medium)));
        DateButton_binding_actual_1.comLightningkiteKhrysalisViewsAndroidDateButtonBind(xml.dateButton, this.date);
        DateButton_binding_actual_1.comLightningkiteKhrysalisViewsAndroidTimeButtonBind(xml.timeButton, this.date, undefined);
        return view;
    }
}
exports.DateButtonDemoVG = DateButtonDemoVG;


/***/ }),

/***/ "./src/vg/DateRangeDemoVG.shared.ts":
/*!******************************************!*\
  !*** ./src/vg/DateRangeDemoVG.shared.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DateRangeDemoVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/DateRangeDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: java.util.Date TS Date
// FQImport: com.lightningkite.khrysalistemplate.vg.DateRangeDemoVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalistemplate.vg.DateRangeDemoVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalis.views.SelectMultipleDatesMonthCVD.selectedPaint TS selectedPaint
// FQImport: android.graphics.Paint.color TS color
// FQImport: com.lightningkite.khrysalis.views.SelectMultipleDatesMonthCVD.selectedDayPaint TS selectedDayPaint
// FQImport: com.lightningkite.khrysalistemplate.layouts.DateRangeDemoXml.month4Delegate TS month4Delegate
// FQImport: com.lightningkite.khrysalistemplate.layouts.DateRangeDemoXml TS DateRangeDemoXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.DateRangeDemoXml.month3Delegate TS month3Delegate
// FQImport: com.lightningkite.khrysalistemplate.vg.DateRangeDemoVG.generate.view TS view
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.selectedDayPaint TS selectedDayPaint
// FQImport: kotlin.collections.Set TS Set
// FQImport: com.lightningkite.khrysalistemplate.layouts.DateRangeDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalis.views.SelectDateMonthCVD.selectedDayPaint TS selectedDayPaint
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty TS StandardObservableProperty
// FQImport: com.lightningkite.khrysalis.views.SelectMultipleDatesMonthCVD.dragEnabled TS dragEnabled
// FQImport: com.lightningkite.khrysalis.views.SelectDateMonthCVD.dragEnabled TS dragEnabled
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.dragEnabled TS dragEnabled
// FQImport: com.lightningkite.khrysalis.views.SelectDateRangeMonthCVD.selectedPaint TS selectedPaint
// FQImport: com.lightningkite.khrysalis.views.SelectDateMonthCVD.selectedPaint TS selectedPaint
// FQImport: com.lightningkite.khrysalistemplate.layouts.DateRangeDemoXml.month2Delegate TS month2Delegate
const DateRangeDemoXml_1 = __webpack_require__(/*! ../layout/DateRangeDemoXml */ "./src/layout/DateRangeDemoXml.ts");
const StandardObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const Colors_actual_1 = __webpack_require__(/*! khrysalis/dist/views/Colors.actual */ "../../khrysalis/web/dist/views/Colors.actual.js");
//! Declares com.lightningkite.khrysalistemplate.vg.DateRangeDemoVG
class DateRangeDemoVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor() {
        super();
        this.start = new StandardObservableProperty_shared_1.StandardObservableProperty(Date.constructor(), undefined);
        this.endInclusive = new StandardObservableProperty_shared_1.StandardObservableProperty(Date.constructor(), undefined);
        this.dates = new StandardObservableProperty_shared_1.StandardObservableProperty(new Set([]), undefined);
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.DateRangeDemoVG.title
    get title() { return "Date Range Demo"; }
    generate(dependency) {
        const xml = new DateRangeDemoXml_1.DateRangeDemoXml();
        const view = xml.setup(dependency);
        xml.month2Delegate.dragEnabled = false;
        xml.month2Delegate.selectedDayPaint.color = Colors_actual_1.numberToColor(0xFFFFFFFF);
        xml.month2Delegate.selectedPaint.color = Colors_actual_1.numberToColor(0xFFFF0000);
        xml.month3Delegate.dragEnabled = false;
        xml.month3Delegate.selectedDayPaint.color = Colors_actual_1.numberToColor(0xFFFFFFFF);
        xml.month3Delegate.selectedPaint.color = Colors_actual_1.numberToColor(0xFFFF0000);
        xml.month4Delegate.dragEnabled = false;
        xml.month4Delegate.selectedDayPaint.color = Colors_actual_1.numberToColor(0xFFFFFFFF);
        xml.month4Delegate.selectedPaint.color = Colors_actual_1.numberToColor(0xFFFF0000);
        return view;
    }
}
exports.DateRangeDemoVG = DateRangeDemoVG;


/***/ }),

/***/ "./src/vg/DrawableDemoVG.shared.ts":
/*!*****************************************!*\
  !*** ./src/vg/DrawableDemoVG.shared.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DrawableDemoVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/DrawableDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalistemplate.vg.DrawableDemoVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalistemplate.layouts.DrawableDemoXml TS DrawableDemoXml
// FQImport: com.lightningkite.khrysalistemplate.vg.DrawableDemoVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalistemplate.layouts.DrawableDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.vg.DrawableDemoVG.generate.view TS view
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const DrawableDemoXml_1 = __webpack_require__(/*! ../layout/DrawableDemoXml */ "./src/layout/DrawableDemoXml.ts");
//! Declares com.lightningkite.khrysalistemplate.vg.DrawableDemoVG
class DrawableDemoVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor() {
        super();
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.DrawableDemoVG.title
    get title() { return "Drawable Demo"; }
    generate(dependency) {
        const xml = new DrawableDemoXml_1.DrawableDemoXml();
        const view = xml.setup(dependency);
        return view;
    }
}
exports.DrawableDemoVG = DrawableDemoVG;


/***/ }),

/***/ "./src/vg/ExampleContentVG.shared.ts":
/*!*******************************************!*\
  !*** ./src/vg/ExampleContentVG.shared.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ExampleContentVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/ExampleContentVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalistemplate.vg.ExampleContentVG.generate.view TS view
// FQImport: com.lightningkite.khrysalistemplate.layouts.ExampleContentXml.exampleContentIncrement TS exampleContentIncrement
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty.value TS value
// FQImport: com.lightningkite.khrysalistemplate.layouts.ExampleContentXml.scrollToTop TS scrollToTop
// FQImport: com.lightningkite.khrysalis.observables.binding.bindText>android.widget.TextView TS androidWidgetTextViewBindText
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: kotlin.Int.toString TS toString
// FQImport: com.lightningkite.khrysalistemplate.vg.ExampleContentVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalistemplate.layouts.ExampleContentXml.chainedIncrement TS chainedIncrement
// FQImport: com.lightningkite.khrysalistemplate.layouts.ExampleContentXml TS ExampleContentXml
// FQImport: com.lightningkite.khrysalis.observables.map>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any> TS comLightningkiteKhrysalisObservablesObservablePropertyMap
// FQImport: com.lightningkite.khrysalistemplate.vg.ExampleContentVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalistemplate.vg.ExampleContentVG.increment TS increment
// FQImport: com.lightningkite.khrysalistemplate.layouts.ExampleContentXml.scrollView TS scrollView
// FQImport: com.lightningkite.khrysalistemplate.layouts.ExampleContentXml.exampleContentNumber TS exampleContentNumber
// FQImport: com.lightningkite.khrysalistemplate.vg.ExampleContentVG.number TS number
// FQImport: com.lightningkite.khrysalis.observables.flatMap>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any> TS comLightningkiteKhrysalisObservablesObservablePropertyFlatMap
// FQImport: com.lightningkite.khrysalistemplate.vg.ExampleContentVG.chained TS chained
// FQImport: com.lightningkite.khrysalistemplate.vg.ExampleContentVG.generate.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalistemplate.layouts.ExampleContentXml.chainedNumber TS chainedNumber
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty TS StandardObservableProperty
// FQImport: com.lightningkite.khrysalistemplate.layouts.ExampleContentXml.setup TS setup
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty.value TS value
// FQImport: com.lightningkite.khrysalis.observables.binding.bindString>android.widget.TextView TS androidWidgetTextViewBindString
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty TS MutableObservableProperty
const ExampleContentXml_1 = __webpack_require__(/*! ../layout/ExampleContentXml */ "./src/layout/ExampleContentXml.ts");
const TextView_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/TextView.binding.actual */ "../../khrysalis/web/dist/observables/binding/TextView.binding.actual.js");
const StandardObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const TransformedObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/TransformedObservableProperty.shared */ "../../khrysalis/web/dist/observables/TransformedObservableProperty.shared.js");
const FlatMappedObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/FlatMappedObservableProperty.shared */ "../../khrysalis/web/dist/observables/FlatMappedObservableProperty.shared.js");
//! Declares com.lightningkite.khrysalistemplate.vg.ExampleContentVG
class ExampleContentVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor() {
        super();
        this._number = new StandardObservableProperty_shared_1.StandardObservableProperty(0, undefined);
        this.chained = new StandardObservableProperty_shared_1.StandardObservableProperty(new StandardObservableProperty_shared_1.StandardObservableProperty(0, undefined), undefined);
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.ExampleContentVG.title
    get title() { return "Example Content"; }
    increment() {
        this._number.value += 1;
    }
    generate(dependency) {
        const xml = new ExampleContentXml_1.ExampleContentXml();
        const view = xml.setup(dependency);
        xml.exampleContentIncrement.addEventListener("onclick", (_ev) => {
            _ev.stopPropagation();
            this.increment();
        });
        TextView_binding_actual_1.androidWidgetTextViewBindText(xml.exampleContentNumber, this._number, (it) => it.toString());
        xml.chainedIncrement.addEventListener("onclick", (_ev) => {
            _ev.stopPropagation();
            this.chained.value.value = this.chained.value.value + 1;
        });
        TextView_binding_actual_1.androidWidgetTextViewBindString(xml.chainedNumber, TransformedObservableProperty_shared_1.comLightningkiteKhrysalisObservablesObservablePropertyMap(FlatMappedObservableProperty_shared_1.comLightningkiteKhrysalisObservablesObservablePropertyFlatMap(this.chained, (it) => it), (it) => it.toString()));
        xml.scrollToTop.addEventListener("onclick", (_ev) => {
            _ev.stopPropagation();
            xml.scrollView.scroll(0, 0);
        });
        return view;
    }
}
exports.ExampleContentVG = ExampleContentVG;


/***/ }),

/***/ "./src/vg/ExternalTestVG.shared.ts":
/*!*****************************************!*\
  !*** ./src/vg/ExternalTestVG.shared.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ExternalTestVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/ExternalTestVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalistemplate.layouts.ExternalTestXml.openWeb TS openWeb
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalistemplate.layouts.ExternalTestXml.openMap TS openMap
// FQImport: com.lightningkite.khrysalistemplate.layouts.ExternalTestXml TS ExternalTestXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.ExternalTestXml.openEvent TS openEvent
// FQImport: com.lightningkite.khrysalistemplate.vg.ExternalTestVG.generate.view TS view
// FQImport: com.lightningkite.khrysalistemplate.vg.ExternalTestVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalis.views.openMap>com.lightningkite.khrysalis.android.ActivityAccess TS comLightningkiteKhrysalisAndroidActivityAccessOpenMap
// FQImport: com.lightningkite.khrysalis.location.GeoCoordinate TS GeoCoordinate
// FQImport: com.lightningkite.khrysalistemplate.layouts.ExternalTestXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.vg.ExternalTestVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalis.views.openEvent>com.lightningkite.khrysalis.android.ActivityAccess TS comLightningkiteKhrysalisAndroidActivityAccessOpenEvent
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const ViewDependency_actual_1 = __webpack_require__(/*! khrysalis/dist/views/ViewDependency.actual */ "../../khrysalis/web/dist/views/ViewDependency.actual.js");
const GeoCoordinate_shared_1 = __webpack_require__(/*! khrysalis/dist/location/GeoCoordinate.shared */ "../../khrysalis/web/dist/location/GeoCoordinate.shared.js");
const ExternalTestXml_1 = __webpack_require__(/*! ../layout/ExternalTestXml */ "./src/layout/ExternalTestXml.ts");
const Date_actual_1 = __webpack_require__(/*! khrysalis/dist/time/Date.actual */ "../../khrysalis/web/dist/time/Date.actual.js");
//! Declares com.lightningkite.khrysalistemplate.vg.ExternalTestVG
class ExternalTestVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor() {
        super();
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.ExternalTestVG.title
    get title() { return "External Test"; }
    generate(dependency) {
        const xml = new ExternalTestXml_1.ExternalTestXml();
        const view = xml.setup(dependency);
        //--- Set Up xml.scrollView (overwritten on flow generation)
        //--- Set Up xml.openMap
        xml.openMap.addEventListener("onclick", (_ev) => {
            _ev.stopPropagation();
            ViewDependency_actual_1.comLightningkiteKhrysalisAndroidActivityAccessOpenMap(dependency, new GeoCoordinate_shared_1.GeoCoordinate(41.7269, -111.8432), "Lightning Kite", 14);
        });
        //--- Set Up xml.openWeb
        xml.openWeb.addEventListener("onclick", (_ev) => {
            _ev.stopPropagation();
            window.open("https://lightningkite.com", "_blank");
        });
        //--- Set Up xml.openEvent
        xml.openEvent.addEventListener("onclick", (_ev) => {
            _ev.stopPropagation();
            ViewDependency_actual_1.comLightningkiteKhrysalisAndroidActivityAccessOpenEvent(dependency, "A Virtual Lunch with LK", "Come eat virtual food with us!", "Lightning Kite in Logan Utah", Date_actual_1.copyDateMod(Date_actual_1.copyDateMod(Date_actual_1.copyDateMod(Date_actual_1.copyDateModRelative(Date.constructor(), Date.prototype.getDate, Date.prototype.setDate, 1), Date.prototype.setHours, 12), Date.prototype.setMinutes, 0), Date.prototype.setSeconds, 0), Date_actual_1.copyDateMod(Date_actual_1.copyDateMod(Date_actual_1.copyDateMod(Date_actual_1.copyDateModRelative(Date.constructor(), Date.prototype.getDate, Date.prototype.setDate, 1), Date.prototype.setHours, 13), Date.prototype.setMinutes, 0), Date.prototype.setSeconds, 0));
        });
        //--- Generate End (overwritten on flow generation)
        return view;
    }
}
exports.ExternalTestVG = ExternalTestVG;


/***/ }),

/***/ "./src/vg/FloatingHexagonsDemoVG.shared.ts":
/*!*************************************************!*\
  !*** ./src/vg/FloatingHexagonsDemoVG.shared.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Hexagon = exports.FloatingHexagonsDelegate = exports.FloatingHexagonsDemoVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/FloatingHexagonsDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.centerY TS centerY
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.move.y TS y
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.radius TS radius
// FQImport: android.graphics.Paint.textSize TS textSize
// FQImport: android.graphics.Paint.color TS color
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.draw.i TS i
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.sizeThatFitsWidth.height TS height
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.paint TS paint
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.draw.angle2 TS angle2
// FQImport: android.graphics.Paint.strokeWidth TS strokeWidth
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.draw.height TS height
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.draw.cornerY1 TS cornerY1
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.draw.cornerY2 TS cornerY2
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.frame.<anonymous>.loc TS loc
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.animationTime TS animationTime
// FQImport: android.util.DisplayMetrics TS DisplayMetrics
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.backgroundPaint TS backgroundPaint
// FQImport: com.lightningkite.khrysalistemplate.layouts.FloatingHexagonsDemoXml TS FloatingHexagonsDemoXml
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.location TS location
// FQImport: android.graphics.Paint.alpha TS alpha
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.draw.angle1 TS angle1
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.frame.time TS time
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.move.x TS x
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.moveToPos.x TS x
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.moveToPos TS moveToPos
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.draw.tempList TS tempList
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.moveTo TS moveTo
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.draw.canvas TS canvas
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.draw TS draw
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.sizeThatFitsHeight.width TS width
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.onTouchDown.x TS x
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.moveX.x TS x
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon TS Hexagon
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDemoVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.frame.<anonymous>.<anonymous>.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.moveX TS moveX
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.degreesToRadians TS degreesToRadians
// FQImport: com.lightningkite.khrysalis.views.draw.newLinearGradient TS newLinearGradient
// FQImport: com.lightningkite.khrysalis.views.CustomViewDelegate TS CustomViewDelegate
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.frame.<anonymous>.<anonymous>.delta TS delta
// FQImport: android.graphics.Shader.TileMode.REPEAT TS REPEAT
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.centerX TS centerX
// FQImport: android.graphics.Paint.shader TS shader
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDemoVG.generate.view TS view
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.draw.width TS width
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.draw.cornerX2 TS cornerX2
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.moveToPos.time TS time
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDemoVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.draw.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.hexagonPaint TS hexagonPaint
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.hexagons TS hexagons
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.draw.canvas TS canvas
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.layer TS layer
// FQImport: android.graphics.Shader.TileMode TS TileMode
// FQImport: android.graphics.Paint TS Paint
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate.frame.<anonymous>.<anonymous>.moveTo TS moveTo
// FQImport: com.lightningkite.khrysalistemplate.layouts.FloatingHexagonsDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.vg.Hexagon.draw.cornerX1 TS cornerX1
// FQImport: android.graphics.Shader TS Shader
const Paint_actual_1 = __webpack_require__(/*! khrysalis/dist/views/draw/Paint.actual */ "../../khrysalis/web/dist/views/draw/Paint.actual.js");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const Random_actual_1 = __webpack_require__(/*! khrysalis/dist/Random.actual */ "../../khrysalis/web/dist/Random.actual.js");
const LinearGradient_actual_1 = __webpack_require__(/*! khrysalis/dist/views/draw/LinearGradient.actual */ "../../khrysalis/web/dist/views/draw/LinearGradient.actual.js");
const Path_actual_1 = __webpack_require__(/*! khrysalis/dist/views/draw/Path.actual */ "../../khrysalis/web/dist/views/draw/Path.actual.js");
const CustomViewDelegate_shared_1 = __webpack_require__(/*! khrysalis/dist/views/CustomViewDelegate.shared */ "../../khrysalis/web/dist/views/CustomViewDelegate.shared.js");
const Colors_actual_1 = __webpack_require__(/*! khrysalis/dist/views/Colors.actual */ "../../khrysalis/web/dist/views/Colors.actual.js");
const FloatingHexagonsDemoXml_1 = __webpack_require__(/*! ../layout/FloatingHexagonsDemoXml */ "./src/layout/FloatingHexagonsDemoXml.ts");
const Kotlin_1 = __webpack_require__(/*! khrysalis/dist/Kotlin */ "../../khrysalis/web/dist/Kotlin.js");
//! Declares com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDemoVG
class FloatingHexagonsDemoVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor() {
        super();
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDemoVG.title
    get title() { return "Floating Hexagons Test"; }
    generate(dependency) {
        const xml = new FloatingHexagonsDemoXml_1.FloatingHexagonsDemoXml();
        const view = xml.setup(dependency);
        return view;
    }
}
exports.FloatingHexagonsDemoVG = FloatingHexagonsDemoVG;
//! Declares com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDelegate
class FloatingHexagonsDelegate extends CustomViewDelegate_shared_1.CustomViewDelegate {
    constructor() {
        super();
        this.backgroundPaint = Paint_actual_1.Paint.constructor();
        this.hexagonPaint = Paint_actual_1.Paint.constructor();
        this.hexagonPaint.strokeWidth = 4;
        this.hexagonPaint.color = Colors_actual_1.numberToColor(0xFFFFFFFF);
        this.location = null;
        this.moveTo = null;
        this.animationTime = 0;
        this.hexagons = null;
        this.backgroundPaint.color = Colors_actual_1.numberToColor(0xFFFFFFFF);
        this.backgroundPaint.textSize = 12;
    }
    frame(time) {
        const temp32 = this.location;
        if (temp32 !== null)
            ((loc) => ((_it) => {
                if (_it === null)
                    return null;
                return ((moveTo) => (() => {
                    if (Math.abs(loc - moveTo) > .01 && this.animationTime > 0) {
                        const delta = (moveTo - loc) / this.animationTime;
                        const temp39 = this.hexagons;
                        if (temp39 !== null)
                            for (const _x of temp39) {
                                const it = _x;
                                it.moveX(delta);
                            }
                        ;
                        this.location = loc + delta;
                        return this.animationTime = this.animationTime - time;
                    }
                })())(_it);
            })(this.moveTo))(temp32);
    }
    draw(canvas, width, height, displayMetrics) {
        if (this.hexagons.equals(null)) {
            const tempList = [];
            for (const i of new Kotlin_1.NumberRange(0, 7)) {
                tempList.push(new Hexagon((Random_actual_1.RandomInstance.random() * width * 1.5), (Random_actual_1.RandomInstance.random() * height), ((Random_actual_1.RandomInstance.random() + 0.2) * width / 4), (Random_actual_1.RandomInstance.random_int31() % (5 - 1) + 1), this.hexagonPaint));
            }
            this.hexagons = Array.from(tempList);
        }
        if (this.location === null) {
            this.location = width / 2;
            this.moveTo = width / 2;
        }
        if (this.backgroundPaint.shader.equals(null)) {
            this.backgroundPaint.shader = LinearGradient_actual_1.newLinearGradient(width, 0, 0, height, [Colors_actual_1.numberToColor(0xFF773DBD), Colors_actual_1.numberToColor(0xFF1226AA)], [.25, 1], LinearGradient_actual_1.Shader.TileMode.REPEAT);
        }
        canvas.clip(Path_actual_1.pathFromLTRB(0, 0, width, height));
        this.backgroundPaint.complete(canvas);
        const temp48 = this.hexagons;
        if (temp48 !== null)
            for (const _x of temp48) {
                const it = _x;
                it.draw(canvas);
            }
        ;
    }
    moveToPos(x, time) {
        this.moveTo = x;
        this.animationTime = time;
    }
    onTouchDown(id, x, y, width, height) {
        this.moveToPos(x, 10);
        return true;
    }
    onTouchMove(id, x, y, width, height) {
        return true;
    }
    onTouchUp(id, x, y, width, height) {
        return true;
    }
    generateAccessibilityView() { return null; }
    sizeThatFitsWidth(width, height) {
        return height;
    }
    sizeThatFitsHeight(width, height) {
        return width;
    }
}
exports.FloatingHexagonsDelegate = FloatingHexagonsDelegate;
//! Declares com.lightningkite.khrysalistemplate.vg.Hexagon
class Hexagon {
    constructor(centerX, centerY, radius, layer, paint) {
        this.centerX = centerX;
        this.centerY = centerY;
        this.radius = radius;
        this.layer = layer;
        this.paint = paint;
        console.log(this.layer);
        this.degreesToRadians = 3.14159 / 180;
    }
    draw(canvas) {
        for (const i of new Kotlin_1.NumberRange(0, 5)) {
            const angle1 = (i * 60) * this.degreesToRadians;
            const angle2 = (i * 60 + 60) * this.degreesToRadians;
            const cornerX1 = Math.sin(angle1) * this.radius + this.centerX;
            const cornerY1 = (Math.cos(angle1) * 1.1) * this.radius + this.centerY;
            const cornerX2 = Math.sin(angle2) * this.radius + this.centerX;
            const cornerY2 = (Math.cos(angle2) * 1.1) * this.radius + this.centerY;
            this.paint.alpha = 200 / this.layer;
            canvas.moveTo(cornerX1, cornerY1);
            canvas.lineTo(cornerX2, cornerY2);
            this.paint.complete(canvas);
        }
    }
    move(x, y) {
        this.centerX = this.centerX + x / this.layer;
        this.centerY = this.centerY + y / this.layer;
    }
    moveX(x) {
        this.centerX = this.centerX + x / this.layer;
    }
}
exports.Hexagon = Hexagon;


/***/ }),

/***/ "./src/vg/HttpDemoVG.shared.ts":
/*!*************************************!*\
  !*** ./src/vg/HttpDemoVG.shared.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpDemoVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/HttpDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalistemplate.vg.HttpDemoVG TS HttpDemoVG
// FQImport: com.lightningkite.khrysalis.observables.asObservableProperty>io.reactivex.Observable<kotlin.Any> TS ioReactivexObservableAsObservableProperty
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTextXml.label TS label
// FQImport: com.lightningkite.khrysalistemplate.vg.HttpDemoVG.generate.<anonymous>.observable TS observable
// FQImport: com.lightningkite.khrysalistemplate.vg.HttpDemoVG.generate.<anonymous>.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalistemplate.vg.HttpDemoVG.Post.title TS title
// FQImport: com.lightningkite.khrysalistemplate.vg.HttpDemoVG.generate.view TS view
// FQImport: com.lightningkite.khrysalistemplate.layouts.HttpDemoXml TS HttpDemoXml
// FQImport: com.lightningkite.khrysalistemplate.vg.HttpDemoVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalis.net.readJson>io.reactivex.Single<okhttp3.Response> TS ioReactivexSingleReadJson
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTextXml TS ComponentTextXml
// FQImport: com.lightningkite.khrysalis.net.HttpClient.call TS call
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalis.observables.binding.bind>androidx.recyclerview.widget.RecyclerView TS androidxRecyclerviewWidgetRecyclerViewBind
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTextXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.vg.HttpDemoVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalistemplate.layouts.HttpDemoXml.items TS items
// FQImport: com.lightningkite.khrysalis.net.HttpClient TS HttpClient
// FQImport: com.lightningkite.khrysalistemplate.layouts.HttpDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalis.observables.binding.bindString>android.widget.TextView TS androidWidgetTextViewBindString
// FQImport: com.lightningkite.khrysalistemplate.vg.HttpDemoVG.generate.<anonymous>.cellView TS cellView
// FQImport: com.lightningkite.khrysalistemplate.vg.HttpDemoVG.generate.<anonymous>.cellXml TS cellXml
// FQImport: com.lightningkite.khrysalis.observables.map>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any> TS comLightningkiteKhrysalisObservablesObservablePropertyMap
// FQImport: com.lightningkite.khrysalis.Codable TS Codable
const Kotlin_1 = __webpack_require__(/*! khrysalis/dist/Kotlin */ "../../khrysalis/web/dist/Kotlin.js");
const ComponentTextXml_1 = __webpack_require__(/*! ../layout/ComponentTextXml */ "./src/layout/ComponentTextXml.ts");
const EventToObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/EventToObservableProperty.shared */ "../../khrysalis/web/dist/observables/EventToObservableProperty.shared.js");
const jsonParsing_1 = __webpack_require__(/*! khrysalis/dist/net/jsonParsing */ "../../khrysalis/web/dist/net/jsonParsing.js");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const TransformedObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/TransformedObservableProperty.shared */ "../../khrysalis/web/dist/observables/TransformedObservableProperty.shared.js");
const TextView_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/TextView.binding.actual */ "../../khrysalis/web/dist/observables/binding/TextView.binding.actual.js");
const RxHttpAssist_actual_1 = __webpack_require__(/*! khrysalis/dist/net/RxHttpAssist.actual */ "../../khrysalis/web/dist/net/RxHttpAssist.actual.js");
const HttpClient_actual_1 = __webpack_require__(/*! khrysalis/dist/net/HttpClient.actual */ "../../khrysalis/web/dist/net/HttpClient.actual.js");
const HttpDemoXml_1 = __webpack_require__(/*! ../layout/HttpDemoXml */ "./src/layout/HttpDemoXml.ts");
const RecyclerView_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/RecyclerView.binding.actual */ "../../khrysalis/web/dist/observables/binding/RecyclerView.binding.actual.js");
//! Declares com.lightningkite.khrysalistemplate.vg.HttpDemoVG
class HttpDemoVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor() {
        super();
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.HttpDemoVG.title
    get title() { return "Http Demo"; }
    generate(dependency) {
        const xml = new HttpDemoXml_1.HttpDemoXml();
        const view = xml.setup(dependency);
        //--- Set Up xml.items
        RecyclerView_binding_actual_1.androidxRecyclerviewWidgetRecyclerViewBind(xml.items, EventToObservableProperty_shared_1.ioReactivexObservableAsObservableProperty(RxHttpAssist_actual_1.ioReactivexSingleReadJson(HttpClient_actual_1.HttpClient.INSTANCE.call("https://jsonplaceholder.typicode.com/posts/", undefined, undefined, undefined), [Array, [HttpDemoVG.Post]]), [new HttpDemoVG.Post(0, 0, "Loading...", "-")]), new HttpDemoVG.Post(0, 0, "Default", "Failure"), (observable) => {
            //--- Make Subview For xml.items
            const cellXml = new ComponentTextXml_1.ComponentTextXml();
            const cellView = cellXml.setup(dependency);
            //--- Set Up cellXml.label
            TextView_binding_actual_1.androidWidgetTextViewBindString(cellXml.label, TransformedObservableProperty_shared_1.comLightningkiteKhrysalisObservablesObservablePropertyMap(observable, (it) => it.title));
            //--- End Make Subview For xml.items
            return cellView;
        });
        //--- Generate End (overwritten on flow generation)
        return view;
    }
}
exports.HttpDemoVG = HttpDemoVG;
(function (HttpDemoVG) {
    //! Declares com.lightningkite.khrysalistemplate.vg.HttpDemoVG.Post
    class Post {
        constructor(userId, id, title, body) {
            this.userId = userId;
            this.id = id;
            this.title = title;
            this.body = body;
        }
        static fromJson(obj) {
            return new Post(jsonParsing_1.parse(obj["userId"], [Number]), jsonParsing_1.parse(obj["id"], [Number]), jsonParsing_1.parse(obj["title"], [String]), jsonParsing_1.parse(obj["body"], [String]));
        }
        toJson() {
            return {
                userId: this.userId,
                id: this.id,
                title: this.title,
                body: this.body
            };
        }
        hashCode() {
            let hash = 17;
            hash = 31 * hash + this.userId;
            hash = 31 * hash + this.id;
            hash = 31 * hash + Kotlin_1.hashString(this.title);
            hash = 31 * hash + Kotlin_1.hashString(this.body);
            return hash;
        }
        equals(other) { return other instanceof Post && this.userId === other.userId && this.id === other.id && this.title === other.title && this.body === other.body; }
        toString() { return `Post(userId = ${this.userId}, id = ${this.id}, title = ${this.title}, body = ${this.body})`; }
        copy(userId = this.userId, id = this.id, title = this.title, body = this.body) { return new Post(userId, id, title, body); }
    }
    Post.implementsInterfaceComLightningkiteKhrysalisCodable = true;
    HttpDemoVG.Post = Post;
})(HttpDemoVG = exports.HttpDemoVG || (exports.HttpDemoVG = {}));


/***/ }),

/***/ "./src/vg/LoadImageDemoVG.shared.ts":
/*!******************************************!*\
  !*** ./src/vg/LoadImageDemoVG.shared.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LoadImageDemoVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/LoadImageDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoadImageDemoXml.loremPixel TS loremPixel
// FQImport: com.lightningkite.khrysalistemplate.vg.LoadImageDemoVG.generate.<anonymous>.<anonymous>.url TS url
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoadImageDemoXml TS LoadImageDemoXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoadImageDemoXml.gallery TS gallery
// FQImport: com.lightningkite.khrysalistemplate.vg.LoadImageDemoVG.generate.view TS view
// FQImport: com.lightningkite.khrysalis.ImageReference TS ImageReference
// FQImport: com.lightningkite.khrysalistemplate.vg.LoadImageDemoVG.generate.<anonymous>.<anonymous>.<anonymous>.url TS url
// FQImport: com.lightningkite.khrysalis.views.requestImagesGallery>com.lightningkite.khrysalis.android.ActivityAccess TS comLightningkiteKhrysalisAndroidActivityAccessRequestImagesGallery
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoadImageDemoXml.camera TS camera
// FQImport: com.lightningkite.khrysalis.observables.binding.loadImage>android.widget.ImageView TS androidWidgetImageViewLoadImage
// FQImport: com.lightningkite.khrysalis.views.requestImageGallery>com.lightningkite.khrysalis.android.ActivityAccess TS comLightningkiteKhrysalisAndroidActivityAccessRequestImageGallery
// FQImport: com.lightningkite.khrysalistemplate.vg.LoadImageDemoVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalis.views.requestImageCamera>com.lightningkite.khrysalis.android.ActivityAccess TS comLightningkiteKhrysalisAndroidActivityAccessRequestImageCamera
// FQImport: com.lightningkite.khrysalistemplate.vg.LoadImageDemoVG.generate.<anonymous>.<anonymous>.urls TS urls
// FQImport: com.lightningkite.khrysalis.ImageRemoteUrl TS ImageRemoteUrl
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoadImageDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoadImageDemoXml.image TS image
// FQImport: com.lightningkite.khrysalistemplate.vg.LoadImageDemoVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoadImageDemoXml.galleryMultiple TS galleryMultiple
const Image_shared_1 = __webpack_require__(/*! khrysalis/dist/Image.shared */ "../../khrysalis/web/dist/Image.shared.js");
const ViewDependency_actual_1 = __webpack_require__(/*! khrysalis/dist/views/ViewDependency.actual */ "../../khrysalis/web/dist/views/ViewDependency.actual.js");
const ImageView_actual_1 = __webpack_require__(/*! khrysalis/dist/views/ImageView.actual */ "../../khrysalis/web/dist/views/ImageView.actual.js");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const LoadImageDemoXml_1 = __webpack_require__(/*! ../layout/LoadImageDemoXml */ "./src/layout/LoadImageDemoXml.ts");
//! Declares com.lightningkite.khrysalistemplate.vg.LoadImageDemoVG
class LoadImageDemoVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor() {
        super();
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.LoadImageDemoVG.title
    get title() { return "Load Image Demo"; }
    generate(dependency) {
        const xml = new LoadImageDemoXml_1.LoadImageDemoXml();
        const view = xml.setup(dependency);
        xml.camera.addEventListener("onclick", (_ev) => {
            _ev.stopPropagation();
            ViewDependency_actual_1.comLightningkiteKhrysalisAndroidActivityAccessRequestImageCamera(dependency, undefined, (url) => {
                ImageView_actual_1.androidWidgetImageViewLoadImage(xml.image, new Image_shared_1.ImageReference(url));
            });
        });
        xml.galleryMultiple.addEventListener("onclick", (_ev) => {
            _ev.stopPropagation();
            ViewDependency_actual_1.comLightningkiteKhrysalisAndroidActivityAccessRequestImagesGallery(dependency, (urls) => {
                var _a;
                const temp87 = ((_a = urls[0]) !== null && _a !== void 0 ? _a : null);
                if (temp87 !== null)
                    ((url) => ImageView_actual_1.androidWidgetImageViewLoadImage(xml.image, new Image_shared_1.ImageReference(url)))(temp87);
            });
        });
        xml.gallery.addEventListener("onclick", (_ev) => {
            _ev.stopPropagation();
            ViewDependency_actual_1.comLightningkiteKhrysalisAndroidActivityAccessRequestImageGallery(dependency, (url) => {
                ImageView_actual_1.androidWidgetImageViewLoadImage(xml.image, new Image_shared_1.ImageReference(url));
            });
        });
        xml.loremPixel.addEventListener("onclick", (_ev) => {
            _ev.stopPropagation();
            ImageView_actual_1.androidWidgetImageViewLoadImage(xml.image, new Image_shared_1.ImageRemoteUrl("https://picsum.photos/200"));
        });
        return view;
    }
}
exports.LoadImageDemoVG = LoadImageDemoVG;


/***/ }),

/***/ "./src/vg/LocationDemoVG.shared.ts":
/*!*****************************************!*\
  !*** ./src/vg/LocationDemoVG.shared.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationDemoVG = void 0;
const StandardObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const TextView_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/TextView.binding.actual */ "../../khrysalis/web/dist/observables/binding/TextView.binding.actual.js");
const LocationDemoXml_1 = __webpack_require__(/*! ../layout/LocationDemoXml */ "./src/layout/LocationDemoXml.ts");
const ViewDependency_location_actual_1 = __webpack_require__(/*! khrysalis/dist/location/ViewDependency.location.actual */ "../../khrysalis/web/dist/location/ViewDependency.location.actual.js");
const TransformedObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/TransformedObservableProperty.shared */ "../../khrysalis/web/dist/observables/TransformedObservableProperty.shared.js");
//! Declares com.lightningkite.khrysalistemplate.vg.LocationDemoVG
class LocationDemoVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor() {
        super();
        this.locationInfo = new StandardObservableProperty_shared_1.StandardObservableProperty(null, undefined);
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.LocationDemoVG.title
    get title() { return "Location Demo"; }
    generate(dependency) {
        const xml = new LocationDemoXml_1.LocationDemoXml();
        const view = xml.setup(dependency);
        xml.getLocation.addEventListener("onclick", (_ev) => {
            _ev.stopPropagation();
            ViewDependency_location_actual_1.comLightningkiteKhrysalisAndroidActivityAccessRequestLocation(dependency, 100.0, 5.0, (location, message) => {
                console.log(message);
                this.locationInfo.value = location;
            });
        });
        TextView_binding_actual_1.androidWidgetTextViewBindString(xml.locationDisplay, TransformedObservableProperty_shared_1.comLightningkiteKhrysalisObservablesObservablePropertyTransformed(this.locationInfo, (it) => (() => {
            if (!(it.equals(null))) {
                return `${it.coordinate}`;
            }
            else {
                return "Nothing yet";
            }
        })()));
        return view;
    }
}
exports.LocationDemoVG = LocationDemoVG;


/***/ }),

/***/ "./src/vg/LoginDemoVG.shared.ts":
/*!**************************************!*\
  !*** ./src/vg/LoginDemoVG.shared.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LoginDemoVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/LoginDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalistemplate.vg.ExampleContentVG TS ExampleContentVG
// FQImport: com.lightningkite.khrysalistemplate.vg.LoginDemoVG.agree TS agree
// FQImport: com.lightningkite.khrysalistemplate.vg.LoginDemoVG.generate.view TS view
// FQImport: com.lightningkite.khrysalistemplate.R.string.password TS password
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalis.views.matches>com.lightningkite.khrysalis.views.FormField<kotlin.Any> TS comLightningkiteKhrysalisViewsFormFieldMatches
// FQImport: com.lightningkite.khrysalistemplate.vg.LoginDemoVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalis.delay TS delay
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoginDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalis.observables.binding.bindString>android.widget.EditText TS androidWidgetEditTextBindString
// FQImport: com.lightningkite.khrysalistemplate.vg.LoginDemoVG.password TS password
// FQImport: com.lightningkite.khrysalis.views.FormField.value TS value
// FQImport: com.lightningkite.khrysalis.views.required>com.lightningkite.khrysalis.views.FormField<kotlin.String> TS comLightningkiteKhrysalisViewsFormFieldRequired
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoginDemoXml.submitLoading TS submitLoading
// FQImport: com.lightningkite.khrysalis.views.FormField.observable TS observable
// FQImport: com.lightningkite.khrysalistemplate.vg.LoginDemoVG.verifyPassword.<anonymous>.field TS field
// FQImport: com.lightningkite.khrysalis.observables.binding.bindLoading>android.widget.ViewFlipper TS androidWidgetViewFlipperBindLoading
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty TS StandardObservableProperty
// FQImport: com.lightningkite.khrysalistemplate.vg.LoginDemoVG.submit TS submit
// FQImport: com.lightningkite.khrysalis.views.Form TS Form
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty TS MutableObservableProperty
// FQImport: com.lightningkite.khrysalistemplate.vg.LoginDemoVG.form TS form
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoginDemoXml.agree TS agree
// FQImport: com.lightningkite.khrysalistemplate.R.string.mustAgree TS mustAgree
// FQImport: com.lightningkite.khrysalistemplate.vg.LoginDemoVG.verifyPassword TS verifyPassword
// FQImport: com.lightningkite.khrysalistemplate.vg.LoginDemoVG.loading TS loading
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty.value TS value
// FQImport: com.lightningkite.khrysalis.observables.binding.bind>android.widget.CompoundButton TS androidWidgetCompoundButtonBind
// FQImport: com.lightningkite.khrysalis.views.Form.field TS fieldRes
// FQImport: com.lightningkite.khrysalis.views.ViewStringResource TS ViewStringResource
// FQImport: com.lightningkite.khrysalistemplate.R.string.verify_password TS verify_password
// FQImport: com.lightningkite.khrysalistemplate.vg.LoginDemoVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalistemplate.vg.LoginDemoVG.agree.<anonymous>.field TS field
// FQImport: com.lightningkite.khrysalis.views.FormField TS FormField
// FQImport: com.lightningkite.khrysalistemplate.R TS R
// FQImport: com.lightningkite.khrysalistemplate.vg.LoginDemoVG.password.<anonymous>.field TS field
// FQImport: com.lightningkite.khrysalis.views.Form.runOrDialog TS runOrDialog
// FQImport: com.lightningkite.khrysalistemplate.vg.LoginDemoVG.stack TS stack
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.push TS push
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack TS ObservableStack
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoginDemoXml.password TS password
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoginDemoXml.username TS username
// FQImport: com.lightningkite.khrysalistemplate.vg.LoginDemoVG.username.<anonymous>.field TS field
// FQImport: com.lightningkite.khrysalis.views.unless>com.lightningkite.khrysalis.views.ViewString TS comLightningkiteKhrysalisViewsViewStringUnless
// FQImport: com.lightningkite.khrysalistemplate.vg.LoginDemoVG.username TS username
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoginDemoXml.verifyPassword TS verifyPassword
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoginDemoXml TS LoginDemoXml
// FQImport: com.lightningkite.khrysalistemplate.R.string TS string
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoginDemoXml.submit TS submit
// FQImport: com.lightningkite.khrysalistemplate.R.string.username TS username
const EditText_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/EditText.binding.actual */ "../../khrysalis/web/dist/observables/binding/EditText.binding.actual.js");
const R_1 = __webpack_require__(/*! ../R */ "./src/R.ts");
const Form_shared_1 = __webpack_require__(/*! khrysalis/dist/views/Form.shared */ "../../khrysalis/web/dist/views/Form.shared.js");
const ExampleContentVG_shared_1 = __webpack_require__(/*! ./ExampleContentVG.shared */ "./src/vg/ExampleContentVG.shared.ts");
const CompoundButton_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/CompoundButton.binding.actual */ "../../khrysalis/web/dist/observables/binding/CompoundButton.binding.actual.js");
const StandardObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const ViewFlipper_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/ViewFlipper.binding.actual */ "../../khrysalis/web/dist/observables/binding/ViewFlipper.binding.actual.js");
const LoginDemoXml_1 = __webpack_require__(/*! ../layout/LoginDemoXml */ "./src/layout/LoginDemoXml.ts");
const delay_actual_1 = __webpack_require__(/*! khrysalis/dist/delay.actual */ "../../khrysalis/web/dist/delay.actual.js");
const Strings_shared_1 = __webpack_require__(/*! khrysalis/dist/views/Strings.shared */ "../../khrysalis/web/dist/views/Strings.shared.js");
//! Declares com.lightningkite.khrysalistemplate.vg.LoginDemoVG
class LoginDemoVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor(stack) {
        super();
        this.stack = stack;
        this.form = new Form_shared_1.Form();
        this.username = this.form.fieldRes(R_1.R._string.username, "", (field) => Form_shared_1.comLightningkiteKhrysalisViewsFormFieldRequired(field));
        this.password = this.form.fieldRes(R_1.R._string.password, "", (field) => Form_shared_1.comLightningkiteKhrysalisViewsFormFieldRequired(field));
        this.verifyPassword = this.form.fieldRes(R_1.R._string.verify_password, "", (field) => { var _a; return (_a = Form_shared_1.comLightningkiteKhrysalisViewsFormFieldRequired(field)) !== null && _a !== void 0 ? _a : Form_shared_1.comLightningkiteKhrysalisViewsFormFieldMatches(field, this.password); });
        this.agree = this.form.fieldRes(R_1.R._string.password, false, (field) => Form_shared_1.comLightningkiteKhrysalisViewsViewStringUnless(new Strings_shared_1.ViewStringResource(R_1.R._string.mustAgree), field.value));
        this.loading = new StandardObservableProperty_shared_1.StandardObservableProperty(false, undefined);
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.LoginDemoVG.title
    get title() { return "Log In Demo"; }
    generate(dependency) {
        const xml = new LoginDemoXml_1.LoginDemoXml();
        const view = xml.setup(dependency);
        EditText_binding_actual_1.androidWidgetEditTextBindString(xml.username, this.username.observable);
        EditText_binding_actual_1.androidWidgetEditTextBindString(xml.password, this.password.observable);
        EditText_binding_actual_1.androidWidgetEditTextBindString(xml.verifyPassword, this.verifyPassword.observable);
        CompoundButton_binding_actual_1.androidWidgetCompoundButtonBind(xml.agree, this.agree.observable);
        ViewFlipper_binding_actual_1.androidWidgetViewFlipperBindLoading(xml.submitLoading, this.loading, undefined);
        xml.submit.addEventListener("onclick", (_ev) => {
            _ev.stopPropagation();
            this.submit();
        });
        return view;
    }
    submit() {
        this.form.runOrDialog(() => {
            console.log("Submit!");
            this.loading.value = true;
            delay_actual_1.delay(1000, () => {
                var _a;
                this.loading.value = false;
                (_a = this.stack) === null || _a === void 0 ? void 0 : _a.push(new ExampleContentVG_shared_1.ExampleContentVG());
            });
        });
    }
}
exports.LoginDemoVG = LoginDemoVG;


/***/ }),

/***/ "./src/vg/MainVG.shared.ts":
/*!*********************************!*\
  !*** ./src/vg/MainVG.shared.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MainVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/MainVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalis.views.EntryPoint TS EntryPoint
// FQImport: com.lightningkite.khrysalistemplate.layouts.MainXml TS MainXml
// FQImport: com.lightningkite.khrysalistemplate.vg.ExampleContentVG TS ExampleContentVG
// FQImport: com.lightningkite.khrysalis.observables.binding.bindVisible>android.view.View TS androidViewViewBindVisible
// FQImport: com.lightningkite.khrysalistemplate.layouts.MainXml.mainBack TS mainBack
// FQImport: kotlin.collections.Map TS Map
// FQImport: com.lightningkite.khrysalis.observables.binding.bindStack>com.lightningkite.khrysalis.views.android.SwapView TS comLightningkiteKhrysalisViewsAndroidSwapViewBindStack
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator.title TS title
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalistemplate.vg.MainVG.shouldBackBeShown.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalistemplate.vg.SelectDemoVG TS SelectDemoVG
// FQImport: com.lightningkite.khrysalistemplate.layouts.MainXml.title TS title
// FQImport: com.lightningkite.khrysalis.observables.map>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any> TS comLightningkiteKhrysalisObservablesObservablePropertyMap
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.push TS push
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.pop TS pop
// FQImport: com.lightningkite.khrysalis.views.EntryPoint TS EntryPointDefaults
// FQImport: com.lightningkite.khrysalistemplate.vg.MainVG.shouldBackBeShown TS shouldBackBeShown
// FQImport: com.lightningkite.khrysalistemplate.vg.MainVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalistemplate.vg.MainVG.generate.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack TS ObservableStack
// FQImport: com.lightningkite.khrysalistemplate.vg.MainVG.stack TS stack
// FQImport: com.lightningkite.khrysalistemplate.vg.MainVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalistemplate.layouts.MainXml.setup TS setup
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty TS ObservableProperty
// FQImport: com.lightningkite.khrysalistemplate.layouts.MainXml.mainContent TS mainContent
// FQImport: com.lightningkite.khrysalis.observables.binding.bindString>android.widget.TextView TS androidWidgetTextViewBindString
// FQImport: com.lightningkite.khrysalistemplate.vg.MainVG.generate.view TS view
const View_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/View.binding.actual */ "../../khrysalis/web/dist/observables/binding/View.binding.actual.js");
const SwapView_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/SwapView.binding.actual */ "../../khrysalis/web/dist/observables/binding/SwapView.binding.actual.js");
const EntryPoint_shared_1 = __webpack_require__(/*! khrysalis/dist/views/EntryPoint.shared */ "../../khrysalis/web/dist/views/EntryPoint.shared.js");
const SelectDemoVG_shared_1 = __webpack_require__(/*! ./SelectDemoVG.shared */ "./src/vg/SelectDemoVG.shared.ts");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const TransformedObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/TransformedObservableProperty.shared */ "../../khrysalis/web/dist/observables/TransformedObservableProperty.shared.js");
const MainXml_1 = __webpack_require__(/*! ../layout/MainXml */ "./src/layout/MainXml.ts");
const TextView_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/TextView.binding.actual */ "../../khrysalis/web/dist/observables/binding/TextView.binding.actual.js");
const ExampleContentVG_shared_1 = __webpack_require__(/*! ./ExampleContentVG.shared */ "./src/vg/ExampleContentVG.shared.ts");
const ObservableStack_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/ObservableStack.shared */ "../../khrysalis/web/dist/observables/ObservableStack.shared.js");
//! Declares com.lightningkite.khrysalistemplate.vg.MainVG
class MainVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor() {
        super();
        this.stack = new ObservableStack_shared_1.ObservableStack();
        this.shouldBackBeShown = TransformedObservableProperty_shared_1.comLightningkiteKhrysalisObservablesObservablePropertyMap(this.stack, (it) => it.length > 1);
        this.stack.push(new SelectDemoVG_shared_1.SelectDemoVG(this.stack));
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.MainVG.title
    get title() { return "Main"; }
    //! Declares com.lightningkite.khrysalistemplate.vg.MainVG.mainStack
    get mainStack() { return this.stack; }
    generate(dependency) {
        const xml = new MainXml_1.MainXml();
        const view = xml.setup(dependency);
        SwapView_binding_actual_1.comLightningkiteKhrysalisViewsAndroidSwapViewBindStack(xml.mainContent, dependency, this.stack);
        TextView_binding_actual_1.androidWidgetTextViewBindString(xml.title, TransformedObservableProperty_shared_1.comLightningkiteKhrysalisObservablesObservablePropertyMap(this.stack, (it) => { var _a, _b, _c; return (_c = (_b = ((_a = it[it.length - 1]) !== null && _a !== void 0 ? _a : null)) === null || _b === void 0 ? void 0 : _b.title) !== null && _c !== void 0 ? _c : ""; }));
        View_binding_actual_1.androidViewViewBindVisible(xml.mainBack, this.shouldBackBeShown);
        xml.mainBack.addEventListener("onclick", (_ev) => {
            _ev.stopPropagation();
            this.stack.pop();
        });
        return view;
    }
    handleDeepLink(schema, host, path, params) {
        this.stack.push(new ExampleContentVG_shared_1.ExampleContentVG());
    }
    onBackPressed() { return EntryPoint_shared_1.EntryPointDefaults.onBackPressed(this); }
}
exports.MainVG = MainVG;
MainVG.implementsInterfaceComLightningkiteKhrysalisViewsEntryPoint = true;


/***/ }),

/***/ "./src/vg/MarginTestVG.shared.ts":
/*!***************************************!*\
  !*** ./src/vg/MarginTestVG.shared.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MarginTestsVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/MarginTestVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalistemplate.layouts.MarginTestXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.vg.MarginTestsVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalistemplate.vg.MarginTestsVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalistemplate.layouts.MarginTestXml.scrollToTop TS scrollToTop
// FQImport: com.lightningkite.khrysalistemplate.layouts.MarginTestXml.scrollView TS scrollView
// FQImport: com.lightningkite.khrysalistemplate.layouts.MarginTestXml TS MarginTestXml
// FQImport: com.lightningkite.khrysalistemplate.vg.MarginTestsVG.generate.view TS view
const MarginTestXml_1 = __webpack_require__(/*! ../layout/MarginTestXml */ "./src/layout/MarginTestXml.ts");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
//! Declares com.lightningkite.khrysalistemplate.vg.MarginTestsVG
class MarginTestsVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor() {
        super();
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.MarginTestsVG.title
    get title() { return "Margin Tests"; }
    generate(dependency) {
        const xml = new MarginTestXml_1.MarginTestXml();
        const view = xml.setup(dependency);
        xml.scrollToTop.addEventListener("onclick", (_ev) => {
            _ev.stopPropagation();
            xml.scrollView.scroll(0, 0);
        });
        return view;
    }
}
exports.MarginTestsVG = MarginTestsVG;


/***/ }),

/***/ "./src/vg/MultipleDemoVG.shared.ts":
/*!*****************************************!*\
  !*** ./src/vg/MultipleDemoVG.shared.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MultipleDemoVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/MultipleDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTestXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTextXml.label TS label
// FQImport: com.lightningkite.khrysalistemplate.vg.MultipleDemoVG.generate.<anonymous>.<anonymous>.obs TS obs
// FQImport: com.lightningkite.khrysalistemplate.vg.MultipleDemoVG.generate.<anonymous>.<anonymous>.cellXml TS cellXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.MultipleDemoXml TS MultipleDemoXml
// FQImport: com.lightningkite.khrysalistemplate.vg.MultipleDemoVG.generate.view TS view
// FQImport: com.lightningkite.khrysalistemplate.vg.MultipleDemoVG.generate.<anonymous>.handler TS handler
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTestXml TS ComponentTestXml
// FQImport: com.lightningkite.khrysalis.observables.ConstantObservableProperty TS ConstantObservableProperty
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTextXml TS ComponentTextXml
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalistemplate.vg.MultipleDemoVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTestXml.label TS label
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTextXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.vg.MultipleDemoVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalistemplate.vg.MultipleDemoVG.generate.<anonymous>.<anonymous>.cellView TS cellView
// FQImport: com.lightningkite.khrysalistemplate.vg.MultipleDemoVG.data TS data
// FQImport: com.lightningkite.khrysalistemplate.layouts.MultipleDemoXml.list TS list
// FQImport: com.lightningkite.khrysalistemplate.layouts.MultipleDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalis.observables.binding.RVTypeHandler.handle TS handle
// FQImport: com.lightningkite.khrysalistemplate.vg.MultipleDemoVG.generate.<anonymous>.<anonymous>.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.observables.binding.bindString>android.widget.TextView TS androidWidgetTextViewBindString
// FQImport: com.lightningkite.khrysalis.observables.map>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any> TS comLightningkiteKhrysalisObservablesObservablePropertyMap
// FQImport: com.lightningkite.khrysalis.observables.binding.bindMulti>androidx.recyclerview.widget.RecyclerView TS recyclerViewBindMultiType
const ComponentTextXml_1 = __webpack_require__(/*! ../layout/ComponentTextXml */ "./src/layout/ComponentTextXml.ts");
const ComponentTestXml_1 = __webpack_require__(/*! ../layout/ComponentTestXml */ "./src/layout/ComponentTestXml.ts");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const TransformedObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/TransformedObservableProperty.shared */ "../../khrysalis/web/dist/observables/TransformedObservableProperty.shared.js");
const MultipleDemoXml_1 = __webpack_require__(/*! ../layout/MultipleDemoXml */ "./src/layout/MultipleDemoXml.ts");
const TextView_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/TextView.binding.actual */ "../../khrysalis/web/dist/observables/binding/TextView.binding.actual.js");
const RecyclerView_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/RecyclerView.binding.actual */ "../../khrysalis/web/dist/observables/binding/RecyclerView.binding.actual.js");
const ConstantObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/ConstantObservableProperty.shared */ "../../khrysalis/web/dist/observables/ConstantObservableProperty.shared.js");
//! Declares com.lightningkite.khrysalistemplate.vg.MultipleDemoVG
class MultipleDemoVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor() {
        super();
        this.data = [1, 2, "3", 4, "5", undefined, "Test", 6];
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.MultipleDemoVG.title
    get title() { return "Multiple List Demo"; }
    generate(dependency) {
        const xml = new MultipleDemoXml_1.MultipleDemoXml();
        const view = xml.setup(dependency);
        RecyclerView_binding_actual_1.recyclerViewBindMultiType(xml.list, dependency, new ConstantObservableProperty_shared_1.ConstantObservableProperty(this.data), (handler) => {
            handler.handle([Number], 0, (obs) => {
                const cellXml = new ComponentTestXml_1.ComponentTestXml();
                const cellView = cellXml.setup(dependency);
                TextView_binding_actual_1.androidWidgetTextViewBindString(cellXml.label, TransformedObservableProperty_shared_1.comLightningkiteKhrysalisObservablesObservablePropertyMap(obs, (it) => `The number ${it}`));
                return cellView;
            });
            handler.handle([String], "", (obs) => {
                const cellXml = new ComponentTestXml_1.ComponentTestXml();
                const cellView = cellXml.setup(dependency);
                TextView_binding_actual_1.androidWidgetTextViewBindString(cellXml.label, TransformedObservableProperty_shared_1.comLightningkiteKhrysalisObservablesObservablePropertyMap(obs, (it) => `The string '${it}'`));
                return cellView;
            });
            handler.handle([undefined], undefined, (obs) => {
                const cellXml = new ComponentTextXml_1.ComponentTextXml();
                const cellView = cellXml.setup(dependency);
                cellXml.label.innerText = "-----";
                return cellView;
            });
        });
        return view;
    }
}
exports.MultipleDemoVG = MultipleDemoVG;


/***/ }),

/***/ "./src/vg/PongDemoVG.shared.ts":
/*!*************************************!*\
  !*** ./src/vg/PongDemoVG.shared.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PongDelegate = exports.PongDemoVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/PongDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.ballRadius TS ballRadius
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.ballVY TS ballVY
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.paddleLeftY TS paddleLeftY
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.scoreRight TS scoreRight
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.reverseY.y TS y
// FQImport: android.graphics.Paint.textSize TS textSize
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.onTouchUp TS onTouchUp
// FQImport: android.graphics.Paint.color TS color
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.stageHalfLength TS stageHalfLength
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.frame.time TS time
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.ballX TS ballX
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.reverseX.x TS x
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDemoVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.stageHalfWidth TS stageHalfWidth
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.onTouchDown.y TS y
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.width TS width
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.paint TS paint
// FQImport: android.util.DisplayMetrics TS DisplayMetrics
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.onTouchUp.x TS x
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.draw.width TS width
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.onTouchDown.x TS x
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.paddleHalfWidth TS paddleHalfWidth
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.sizeThatFitsWidth.height TS height
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.transformY TS transformY
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.onTouchDown.id TS id
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.onTouchMove.height TS height
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.onTouchMove.width TS width
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.scoreLeft TS scoreLeft
// FQImport: com.lightningkite.khrysalistemplate.layouts.PongDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.paddleHalfThickness TS paddleHalfThickness
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDemoVG.generate.view TS view
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.paddleRightY TS paddleRightY
// FQImport: com.lightningkite.khrysalistemplate.layouts.PongDemoXml TS PongDemoXml
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.draw.height TS height
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.onTouchDown.height TS height
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.transformX.x TS x
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.onTouchMove.x TS x
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.onTouchUp.y TS y
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.reverseY TS reverseY
// FQImport: com.lightningkite.khrysalis.views.draw.newLinearGradient TS newLinearGradient
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.reverseX TS reverseX
// FQImport: com.lightningkite.khrysalis.views.CustomViewDelegate TS CustomViewDelegate
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.height TS height
// FQImport: android.graphics.Shader.TileMode.REPEAT TS REPEAT
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.draw.canvas TS canvas
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.ballVX TS ballVX
// FQImport: android.graphics.Paint.shader TS shader
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.onTouchMove.y TS y
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.sizeThatFitsHeight.width TS width
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.onTouchDown.width TS width
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDemoVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.transformX TS transformX
// FQImport: com.lightningkite.khrysalis.views.draw.drawTextCentered>android.graphics.Canvas TS androidGraphicsCanvasDrawTextCentered
// FQImport: android.graphics.Shader.TileMode TS TileMode
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.paddleOffset TS paddleOffset
// FQImport: android.graphics.Paint TS Paint
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.ballY TS ballY
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.transformY.y TS y
// FQImport: android.graphics.Shader TS Shader
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDelegate.onTouchMove.id TS id
const Paint_actual_1 = __webpack_require__(/*! khrysalis/dist/views/draw/Paint.actual */ "../../khrysalis/web/dist/views/draw/Paint.actual.js");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const LinearGradient_actual_1 = __webpack_require__(/*! khrysalis/dist/views/draw/LinearGradient.actual */ "../../khrysalis/web/dist/views/draw/LinearGradient.actual.js");
const Path_actual_1 = __webpack_require__(/*! khrysalis/dist/views/draw/Path.actual */ "../../khrysalis/web/dist/views/draw/Path.actual.js");
const CustomViewDelegate_shared_1 = __webpack_require__(/*! khrysalis/dist/views/CustomViewDelegate.shared */ "../../khrysalis/web/dist/views/CustomViewDelegate.shared.js");
const Colors_actual_1 = __webpack_require__(/*! khrysalis/dist/views/Colors.actual */ "../../khrysalis/web/dist/views/Colors.actual.js");
const PongDemoXml_1 = __webpack_require__(/*! ../layout/PongDemoXml */ "./src/layout/PongDemoXml.ts");
const Canvas_actual_1 = __webpack_require__(/*! khrysalis/dist/views/draw/Canvas.actual */ "../../khrysalis/web/dist/views/draw/Canvas.actual.js");
//! Declares com.lightningkite.khrysalistemplate.vg.PongDemoVG
class PongDemoVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor() {
        super();
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.PongDemoVG.title
    get title() { return "Pong Test"; }
    generate(dependency) {
        const xml = new PongDemoXml_1.PongDemoXml();
        const view = xml.setup(dependency);
        return view;
    }
}
exports.PongDemoVG = PongDemoVG;
//! Declares com.lightningkite.khrysalistemplate.vg.PongDelegate
class PongDelegate extends CustomViewDelegate_shared_1.CustomViewDelegate {
    constructor() {
        super();
        this.ballX = 0;
        this.ballY = 0;
        this.ballRadius = 5;
        this.ballVX = 100;
        this.ballVY = 100;
        this.stageHalfLength = 100;
        this.stageHalfWidth = 50;
        this.paddleOffset = 20;
        this.paddleHalfThickness = 5;
        this.paddleHalfWidth = 10;
        this.paddleLeftY = 0;
        this.paddleRightY = 0;
        this.scoreLeft = 0;
        this.scoreRight = 0;
        this.paint = Paint_actual_1.Paint.constructor();
        this.paint.color = Colors_actual_1.numberToColor(0xFFFFFFFF);
        this.paint.textSize = 12;
        this.width = 1;
        this.height = 1;
    }
    frame(time) {
        this.ballX = this.ballX + this.ballVX * time;
        this.ballY = this.ballY + this.ballVY * time;
        if (this.ballY > this.stageHalfWidth - this.ballRadius) {
            this.ballVY = -Math.abs(this.ballVY);
            this.ballY = this.stageHalfWidth - this.ballRadius;
        }
        if (this.ballY < -this.stageHalfWidth + this.ballRadius) {
            this.ballVY = Math.abs(this.ballVY);
            this.ballY = -this.stageHalfWidth + this.ballRadius;
        }
        if (Math.abs(this.ballX - -(this.stageHalfLength - this.paddleOffset)) < this.paddleHalfThickness + this.ballRadius) {
            if (Math.abs(this.ballY - this.paddleLeftY) < this.paddleHalfWidth + this.ballRadius) {
                this.ballVX = Math.abs(this.ballVX);
            }
        }
        if (Math.abs(this.ballX - (this.stageHalfLength - this.paddleOffset)) < this.paddleHalfThickness + this.ballRadius) {
            if (Math.abs(this.ballY - this.paddleRightY) < this.paddleHalfWidth + this.ballRadius) {
                this.ballVX = -Math.abs(this.ballVX);
            }
        }
        if (this.ballX < -this.stageHalfLength) {
            this.ballX = 0;
            this.ballY = 0;
            this.ballVX = -this.ballVX;
            this.scoreRight++;
        }
        else if (this.ballX > this.stageHalfLength) {
            this.ballX = 0;
            this.ballY = 0;
            this.ballVX = -this.ballVX;
            this.scoreLeft++;
        }
    }
    draw(canvas, width, height, displayMetrics) {
        this.width = width;
        this.height = height;
        if (this.paint.shader.equals(null)) {
            this.paint.shader = LinearGradient_actual_1.newLinearGradient(0, 0, width, height, [Colors_actual_1.numberToColor(0xFFFF0000), Colors_actual_1.numberToColor(0xFF0000FF)], [0, 1], LinearGradient_actual_1.Shader.TileMode.REPEAT);
        }
        canvas.clip(Path_actual_1.pathFromLTRB(this.transformX(-this.stageHalfLength + this.paddleOffset - this.paddleHalfThickness), this.transformY(this.paddleLeftY - this.paddleHalfWidth), this.transformX(-this.stageHalfLength + this.paddleOffset + this.paddleHalfThickness), this.transformY(this.paddleLeftY + this.paddleHalfWidth)));
        this.paint.complete(canvas);
        canvas.clip(Path_actual_1.pathFromLTRB(this.transformX(this.stageHalfLength - this.paddleOffset - this.paddleHalfThickness), this.transformY(this.paddleRightY - this.paddleHalfWidth), this.transformX(this.stageHalfLength - this.paddleOffset + this.paddleHalfThickness), this.transformY(this.paddleRightY + this.paddleHalfWidth)));
        this.paint.complete(canvas);
        canvas.clip(Path_actual_1.pathOvalFromLTRB(this.transformX(this.ballX - this.ballRadius), this.transformY(this.ballY - this.ballRadius), this.transformX(this.ballX + this.ballRadius), this.transformY(this.ballY + this.ballRadius)));
        this.paint.complete(canvas);
        this.paint.textSize = height / 6;
        Canvas_actual_1.androidGraphicsCanvasDrawTextCentered(canvas, `${this.scoreLeft} - ${this.scoreRight}`, this.transformX(0), this.transformY(-this.stageHalfWidth / 2), this.paint);
    }
    onTouchDown(id, x, y, width, height) {
        return this.onTouchUp(id, x, y, width, height);
    }
    onTouchMove(id, x, y, width, height) {
        return this.onTouchUp(id, x, y, width, height);
    }
    onTouchUp(id, x, y, width, height) {
        if (this.reverseX(x) < 0) {
            this.paddleLeftY = this.reverseY(y);
        }
        else {
            this.paddleRightY = this.reverseY(y);
        }
        return true;
    }
    transformX(x) {
        return (x + this.stageHalfLength) / (this.stageHalfLength * 2) * this.width;
    }
    transformY(y) {
        return (y + this.stageHalfWidth) / (this.stageHalfWidth * 2) * this.height;
    }
    reverseX(x) {
        return (x - this.width / 2) / this.width * this.stageHalfLength * 2;
    }
    reverseY(y) {
        return (y - this.height / 2) / this.height * this.stageHalfWidth * 2;
    }
    generateAccessibilityView() { return null; }
    sizeThatFitsWidth(width, height) {
        return height * this.stageHalfLength / this.stageHalfWidth;
    }
    sizeThatFitsHeight(width, height) {
        return width * this.stageHalfWidth / this.stageHalfLength;
    }
}
exports.PongDelegate = PongDelegate;


/***/ }),

/***/ "./src/vg/PreviewVG.shared.ts":
/*!************************************!*\
  !*** ./src/vg/PreviewVG.shared.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PreviewVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/PreviewVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.layouts.PreviewXml.viewName TS viewName
// FQImport: com.lightningkite.khrysalis.observables.binding.bind>androidx.viewpager.widget.ViewPager TS androidxViewpagerWidgetViewPagerBindStatic
// FQImport: com.lightningkite.khrysalistemplate.layouts.MainXml TS MainXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.PreviewXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG.generate.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG.previews.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalistemplate.layouts.ViewPagerDemoXml TS ViewPagerDemoXml
// FQImport: com.lightningkite.khrysalis.observables.subscribeBy>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any> TS comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG.generate.view TS view
// FQImport: com.lightningkite.khrysalistemplate.layouts.SegmentedControlDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.layouts.SelectDemoXml TS SelectDemoXml
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalistemplate.layouts.SegmentedControlDemoXml TS SegmentedControlDemoXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoginDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalis.rx.until>io.reactivex.disposables.Disposable TS ioReactivexDisposablesDisposableUntil
// FQImport: com.lightningkite.khrysalistemplate.layouts.ExampleContentXml TS ExampleContentXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.SliderDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG.XmlPreview.name TS name
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG.previews TS previews
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalistemplate.layouts.MainXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG.previewIndex TS previewIndex
// FQImport: com.lightningkite.khrysalistemplate.layouts.PreviewXml TS PreviewXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.DateRangeDemoXml TS DateRangeDemoXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.PreviewXml.pager TS pager
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG.XmlPreview.make TS make
// FQImport: com.lightningkite.khrysalistemplate.layouts.DateRangeDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.layouts.SliderDemoXml TS SliderDemoXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.ExampleContentXml.setup TS setup
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty TS StandardObservableProperty
// FQImport: com.lightningkite.khrysalis.rx.removed>android.view.View TS getAndroidViewViewRemoved
// FQImport: com.lightningkite.khrysalistemplate.layouts.SelectDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.layouts.LoginDemoXml TS LoginDemoXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.ViewPagerDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.layouts.ControlsDemoXml TS ControlsDemoXml
const SelectDemoXml_1 = __webpack_require__(/*! ../layout/SelectDemoXml */ "./src/layout/SelectDemoXml.ts");
const ViewPagerDemoXml_1 = __webpack_require__(/*! ../layout/ViewPagerDemoXml */ "./src/layout/ViewPagerDemoXml.ts");
const MainXml_1 = __webpack_require__(/*! ../layout/MainXml */ "./src/layout/MainXml.ts");
const DisposeCondition_actual_1 = __webpack_require__(/*! khrysalis/dist/rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
const SliderDemoXml_1 = __webpack_require__(/*! ../layout/SliderDemoXml */ "./src/layout/SliderDemoXml.ts");
const DateRangeDemoXml_1 = __webpack_require__(/*! ../layout/DateRangeDemoXml */ "./src/layout/DateRangeDemoXml.ts");
const ExampleContentXml_1 = __webpack_require__(/*! ../layout/ExampleContentXml */ "./src/layout/ExampleContentXml.ts");
const ViewPager_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/ViewPager.binding.actual */ "../../khrysalis/web/dist/observables/binding/ViewPager.binding.actual.js");
const StandardObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const SegmentedControlDemoXml_1 = __webpack_require__(/*! ../layout/SegmentedControlDemoXml */ "./src/layout/SegmentedControlDemoXml.ts");
const PreviewXml_1 = __webpack_require__(/*! ../layout/PreviewXml */ "./src/layout/PreviewXml.ts");
const ControlsDemoXml_1 = __webpack_require__(/*! ../layout/ControlsDemoXml */ "./src/layout/ControlsDemoXml.ts");
const LoginDemoXml_1 = __webpack_require__(/*! ../layout/LoginDemoXml */ "./src/layout/LoginDemoXml.ts");
const ObservableProperty_ext_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/ObservableProperty.ext.shared */ "../../khrysalis/web/dist/observables/ObservableProperty.ext.shared.js");
//! Declares com.lightningkite.khrysalistemplate.vg.PreviewVG
class PreviewVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor() {
        super();
        this.previews = [new PreviewVG.XmlPreview("ControlsDemoXml", (it) => new ControlsDemoXml_1.ControlsDemoXml().setup(it)), new PreviewVG.XmlPreview("DateRangeDemoXml", (it) => new DateRangeDemoXml_1.DateRangeDemoXml().setup(it)), new PreviewVG.XmlPreview("ExampleContentXml", (it) => new ExampleContentXml_1.ExampleContentXml().setup(it)), new PreviewVG.XmlPreview("LoginDemoXml", (it) => new LoginDemoXml_1.LoginDemoXml().setup(it)), new PreviewVG.XmlPreview("MainXml", (it) => new MainXml_1.MainXml().setup(it)), new PreviewVG.XmlPreview("SegmentedControlDemoXml", (it) => new SegmentedControlDemoXml_1.SegmentedControlDemoXml().setup(it)), new PreviewVG.XmlPreview("SelectDemoXml", (it) => new SelectDemoXml_1.SelectDemoXml().setup(it)), new PreviewVG.XmlPreview("SliderDemoXml", (it) => new SliderDemoXml_1.SliderDemoXml().setup(it)), new PreviewVG.XmlPreview("ViewPagerDemoXml", (it) => new ViewPagerDemoXml_1.ViewPagerDemoXml().setup(it))];
        this.previewIndex = new StandardObservableProperty_shared_1.StandardObservableProperty(0, undefined);
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.PreviewVG.title
    get title() { return "Preview"; }
    generate(dependency) {
        const xml = new PreviewXml_1.PreviewXml();
        const view = xml.setup(dependency);
        ViewPager_binding_actual_1.androidxViewpagerWidgetViewPagerBindStatic(xml.pager, this.previews, this.previewIndex, (it) => it.make(dependency));
        DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(this.previewIndex, undefined, undefined, (it) => {
            xml.viewName.innerText = this.previews[it].name;
        }), DisposeCondition_actual_1.getAndroidViewViewRemoved(view));
        return view;
    }
}
exports.PreviewVG = PreviewVG;
(function (PreviewVG) {
    //! Declares com.lightningkite.khrysalistemplate.vg.PreviewVG.XmlPreview
    class XmlPreview {
        constructor(name, make) {
            this.name = name;
            this.make = make;
        }
    }
    PreviewVG.XmlPreview = XmlPreview;
})(PreviewVG = exports.PreviewVG || (exports.PreviewVG = {}));


/***/ }),

/***/ "./src/vg/SegmentedControlDemoVG.shared.ts":
/*!*************************************************!*\
  !*** ./src/vg/SegmentedControlDemoVG.shared.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SegmentedControlDemoVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/SegmentedControlDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalistemplate.vg.SegmentedControlDemoVG.generate.view TS view
// FQImport: com.lightningkite.khrysalis.observables.binding.bind>com.google.android.material.tabs.TabLayout TS comGoogleAndroidMaterialTabsTabLayoutBind
// FQImport: com.lightningkite.khrysalistemplate.vg.SegmentedControlDemoVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalistemplate.vg.SegmentedControlDemoVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty TS StandardObservableProperty
// FQImport: com.lightningkite.khrysalistemplate.layouts.SegmentedControlDemoXml TS SegmentedControlDemoXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.SegmentedControlDemoXml.tabs2 TS tabs2
// FQImport: com.lightningkite.khrysalistemplate.layouts.SegmentedControlDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.layouts.SegmentedControlDemoXml.tabs TS tabs
const StandardObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const SegmentedControlDemoXml_1 = __webpack_require__(/*! ../layout/SegmentedControlDemoXml */ "./src/layout/SegmentedControlDemoXml.ts");
const TabLayout_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/TabLayout.binding.actual */ "../../khrysalis/web/dist/observables/binding/TabLayout.binding.actual.js");
//! Declares com.lightningkite.khrysalistemplate.vg.SegmentedControlDemoVG
class SegmentedControlDemoVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor() {
        super();
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.SegmentedControlDemoVG.title
    get title() { return "Segmented Control Demo"; }
    generate(dependency) {
        const xml = new SegmentedControlDemoXml_1.SegmentedControlDemoXml();
        const view = xml.setup(dependency);
        TabLayout_binding_actual_1.comGoogleAndroidMaterialTabsTabLayoutBind(xml.tabs, ["A", "B", "C"], new StandardObservableProperty_shared_1.StandardObservableProperty(0, undefined), undefined);
        TabLayout_binding_actual_1.comGoogleAndroidMaterialTabsTabLayoutBind(xml.tabs2, ["A", "B", "C", "D", "E", "F", "G"], new StandardObservableProperty_shared_1.StandardObservableProperty(0, undefined), undefined);
        return view;
    }
}
exports.SegmentedControlDemoVG = SegmentedControlDemoVG;


/***/ }),

/***/ "./src/vg/SelectDemoVG.shared.ts":
/*!***************************************!*\
  !*** ./src/vg/SelectDemoVG.shared.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SelectDemoVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/SelectDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalistemplate.vg.SelectDemoVG.<init>.stack TS stack
// FQImport: com.lightningkite.khrysalistemplate.vg.ExampleContentVG TS ExampleContentVG
// FQImport: com.lightningkite.khrysalistemplate.vg.FloatingHexagonsDemoVG TS FloatingHexagonsDemoVG
// FQImport: kotlin.collections.Map TS Map
// FQImport: com.lightningkite.khrysalistemplate.vg.MarginTestsVG TS MarginTestsVG
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTestXml TS ComponentTestXml
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator.title TS title
// FQImport: com.lightningkite.khrysalistemplate.vg.SegmentedControlDemoVG TS SegmentedControlDemoVG
// FQImport: com.lightningkite.khrysalistemplate.layouts.SelectDemoXml TS SelectDemoXml
// FQImport: com.lightningkite.khrysalistemplate.vg.PongDemoVG TS PongDemoVG
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTestXml.label TS label
// FQImport: com.lightningkite.khrysalistemplate.vg.SelectDemoVG.selectVG TS selectVG
// FQImport: com.lightningkite.khrysalistemplate.vg.SliderDemoVG TS SliderDemoVG
// FQImport: com.lightningkite.khrysalistemplate.vg.MultipleDemoVG TS MultipleDemoVG
// FQImport: com.lightningkite.khrysalis.views.EntryPoint TS EntryPointDefaults
// FQImport: com.lightningkite.khrysalistemplate.vg.DrawableDemoVG TS DrawableDemoVG
// FQImport: com.lightningkite.khrysalistemplate.vg.SelectDemoVG.generate.<anonymous>.view TS view
// FQImport: com.lightningkite.khrysalistemplate.vg.DateButtonDemoVG TS DateButtonDemoVG
// FQImport: com.lightningkite.khrysalistemplate.layouts.SelectDemoXml.list TS list
// FQImport: com.lightningkite.khrysalistemplate.vg.LoginDemoVG TS LoginDemoVG
// FQImport: com.lightningkite.khrysalis.observables.binding.bind>androidx.recyclerview.widget.RecyclerView TS androidxRecyclerviewWidgetRecyclerViewBind
// FQImport: com.lightningkite.khrysalistemplate.vg.SelectDemoVG.generate.view TS view
// FQImport: com.lightningkite.khrysalistemplate.vg.HttpDemoVG TS HttpDemoVG
// FQImport: com.lightningkite.khrysalis.views.EntryPoint TS EntryPoint
// FQImport: com.lightningkite.khrysalistemplate.vg.PreviewVG TS PreviewVG
// FQImport: com.lightningkite.khrysalistemplate.vg.SelectDemoVG.options TS options
// FQImport: com.lightningkite.khrysalistemplate.vg.ExternalTestVG TS ExternalTestVG
// FQImport: com.lightningkite.khrysalis.observables.ConstantObservableProperty TS ConstantObservableProperty
// FQImport: com.lightningkite.khrysalistemplate.vg.LoadImageDemoVG TS LoadImageDemoVG
// FQImport: com.lightningkite.khrysalis.observables.binding.bindText>android.widget.TextView TS androidWidgetTextViewBindText
// FQImport: com.lightningkite.khrysalistemplate.vg.SelectDemoVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTestXml.button TS button
// FQImport: com.lightningkite.khrysalistemplate.vg.ViewPagerDemoVG TS ViewPagerDemoVG
// FQImport: com.lightningkite.khrysalistemplate.vg.LocationDemoVG TS LocationDemoVG
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTestXml.setup TS setup
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack.push TS push
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack TS ObservableStack
// FQImport: com.lightningkite.khrysalistemplate.vg.ControlsDemoVG TS ControlsDemoVG
// FQImport: com.lightningkite.khrysalistemplate.vg.DateRangeDemoVG TS DateRangeDemoVG
// FQImport: com.lightningkite.khrysalistemplate.vg.SelectDemoVG.generate.<anonymous>.obs TS obs
// FQImport: com.lightningkite.khrysalistemplate.vg.SelectDemoVG.generate.<anonymous>.xml TS xml
// FQImport: com.lightningkite.khrysalistemplate.vg.SelectDemoVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalistemplate.vg.SelectDemoVG.generate.<anonymous>.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalistemplate.vg.SelectDemoVG.stack TS stack
// FQImport: com.lightningkite.khrysalistemplate.layouts.SelectDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.vg.WebsocketDemoVG TS WebsocketDemoVG
// FQImport: com.lightningkite.khrysalistemplate.vg.SelectDemoVG.selectVG.viewGenerator TS viewGenerator
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty.value TS value
const ExternalTestVG_shared_1 = __webpack_require__(/*! ./ExternalTestVG.shared */ "./src/vg/ExternalTestVG.shared.ts");
const TextView_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/TextView.binding.actual */ "../../khrysalis/web/dist/observables/binding/TextView.binding.actual.js");
const SliderDemoVG_shared_1 = __webpack_require__(/*! ./SliderDemoVG.shared */ "./src/vg/SliderDemoVG.shared.ts");
const DrawableDemoVG_shared_1 = __webpack_require__(/*! ./DrawableDemoVG.shared */ "./src/vg/DrawableDemoVG.shared.ts");
const PreviewVG_shared_1 = __webpack_require__(/*! ./PreviewVG.shared */ "./src/vg/PreviewVG.shared.ts");
const EntryPoint_shared_1 = __webpack_require__(/*! khrysalis/dist/views/EntryPoint.shared */ "../../khrysalis/web/dist/views/EntryPoint.shared.js");
const MultipleDemoVG_shared_1 = __webpack_require__(/*! ./MultipleDemoVG.shared */ "./src/vg/MultipleDemoVG.shared.ts");
const SegmentedControlDemoVG_shared_1 = __webpack_require__(/*! ./SegmentedControlDemoVG.shared */ "./src/vg/SegmentedControlDemoVG.shared.ts");
const PongDemoVG_shared_1 = __webpack_require__(/*! ./PongDemoVG.shared */ "./src/vg/PongDemoVG.shared.ts");
const DateButtonDemoVG_shared_1 = __webpack_require__(/*! ./DateButtonDemoVG.shared */ "./src/vg/DateButtonDemoVG.shared.ts");
const LoadImageDemoVG_shared_1 = __webpack_require__(/*! ./LoadImageDemoVG.shared */ "./src/vg/LoadImageDemoVG.shared.ts");
const MarginTestVG_shared_1 = __webpack_require__(/*! ./MarginTestVG.shared */ "./src/vg/MarginTestVG.shared.ts");
const ControlsDemoVG_shared_1 = __webpack_require__(/*! ./ControlsDemoVG.shared */ "./src/vg/ControlsDemoVG.shared.ts");
const DateRangeDemoVG_shared_1 = __webpack_require__(/*! ./DateRangeDemoVG.shared */ "./src/vg/DateRangeDemoVG.shared.ts");
const HttpDemoVG_shared_1 = __webpack_require__(/*! ./HttpDemoVG.shared */ "./src/vg/HttpDemoVG.shared.ts");
const RecyclerView_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/RecyclerView.binding.actual */ "../../khrysalis/web/dist/observables/binding/RecyclerView.binding.actual.js");
const SelectDemoXml_1 = __webpack_require__(/*! ../layout/SelectDemoXml */ "./src/layout/SelectDemoXml.ts");
const WebsocketDemoVG_shared_1 = __webpack_require__(/*! ./WebsocketDemoVG.shared */ "./src/vg/WebsocketDemoVG.shared.ts");
const ComponentTestXml_1 = __webpack_require__(/*! ../layout/ComponentTestXml */ "./src/layout/ComponentTestXml.ts");
const ExampleContentVG_shared_1 = __webpack_require__(/*! ./ExampleContentVG.shared */ "./src/vg/ExampleContentVG.shared.ts");
const LocationDemoVG_shared_1 = __webpack_require__(/*! ./LocationDemoVG.shared */ "./src/vg/LocationDemoVG.shared.ts");
const ConstantObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/ConstantObservableProperty.shared */ "../../khrysalis/web/dist/observables/ConstantObservableProperty.shared.js");
const ViewPagerDemoVG_shared_1 = __webpack_require__(/*! ./ViewPagerDemoVG.shared */ "./src/vg/ViewPagerDemoVG.shared.ts");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const LoginDemoVG_shared_1 = __webpack_require__(/*! ./LoginDemoVG.shared */ "./src/vg/LoginDemoVG.shared.ts");
const FloatingHexagonsDemoVG_shared_1 = __webpack_require__(/*! ./FloatingHexagonsDemoVG.shared */ "./src/vg/FloatingHexagonsDemoVG.shared.ts");
//! Declares com.lightningkite.khrysalistemplate.vg.SelectDemoVG
class SelectDemoVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor(stack) {
        super();
        this.options = [new WebsocketDemoVG_shared_1.WebsocketDemoVG(), new HttpDemoVG_shared_1.HttpDemoVG(), new ExternalTestVG_shared_1.ExternalTestVG(), new PongDemoVG_shared_1.PongDemoVG(), new FloatingHexagonsDemoVG_shared_1.FloatingHexagonsDemoVG(), new MarginTestVG_shared_1.MarginTestsVG(), new MultipleDemoVG_shared_1.MultipleDemoVG(), new DateButtonDemoVG_shared_1.DateButtonDemoVG(), new LocationDemoVG_shared_1.LocationDemoVG(), new LoadImageDemoVG_shared_1.LoadImageDemoVG(), new ControlsDemoVG_shared_1.ControlsDemoVG(), new ExampleContentVG_shared_1.ExampleContentVG(), new ViewPagerDemoVG_shared_1.ViewPagerDemoVG(stack), new SegmentedControlDemoVG_shared_1.SegmentedControlDemoVG(), new SliderDemoVG_shared_1.SliderDemoVG(), new DateRangeDemoVG_shared_1.DateRangeDemoVG(), new LoginDemoVG_shared_1.LoginDemoVG(stack), new DrawableDemoVG_shared_1.DrawableDemoVG(), new PreviewVG_shared_1.PreviewVG()];
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.SelectDemoVG.title
    get title() { return "Select Demo"; }
    selectVG(viewGenerator) {
        var _a;
        (_a = this.stack) === null || _a === void 0 ? void 0 : _a.push(viewGenerator);
    }
    generate(dependency) {
        const xml = new SelectDemoXml_1.SelectDemoXml();
        const view = xml.setup(dependency);
        RecyclerView_binding_actual_1.androidxRecyclerviewWidgetRecyclerViewBind(xml.list, new ConstantObservableProperty_shared_1.ConstantObservableProperty(this.options), this.options[0], (obs) => {
            const xml = new ComponentTestXml_1.ComponentTestXml();
            const view = xml.setup(dependency);
            TextView_binding_actual_1.androidWidgetTextViewBindText(xml.label, obs, (it) => it.title);
            xml.button.addEventListener("onclick", (_ev) => {
                _ev.stopPropagation();
                this.selectVG(obs.value);
            });
            return view;
        });
        return view;
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.SelectDemoVG.mainStack
    get mainStack() { return this.stack; }
    handleDeepLink(schema, host, path, params) { return EntryPoint_shared_1.EntryPointDefaults.handleDeepLink(this, schema, host, path, params); }
    onBackPressed() { return EntryPoint_shared_1.EntryPointDefaults.onBackPressed(this); }
}
exports.SelectDemoVG = SelectDemoVG;
SelectDemoVG.implementsInterfaceComLightningkiteKhrysalisViewsEntryPoint = true;


/***/ }),

/***/ "./src/vg/SliderDemoVG.shared.ts":
/*!***************************************!*\
  !*** ./src/vg/SliderDemoVG.shared.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SliderDemoVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/SliderDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalistemplate.layouts.SliderDemoXml.valueDisplay TS valueDisplay
// FQImport: com.lightningkite.khrysalistemplate.vg.SliderDemoVG.generate.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalis.observables.binding.bind>android.widget.RatingBar TS ratingBarBindMutable
// FQImport: com.lightningkite.khrysalistemplate.layouts.SliderDemoXml.ratingDisplayNumber TS ratingDisplayNumber
// FQImport: com.lightningkite.khrysalis.observables.binding.bindText>android.widget.TextView TS androidWidgetTextViewBindText
// FQImport: com.lightningkite.khrysalistemplate.layouts.SliderDemoXml.ratingFloat TS ratingFloat
// FQImport: com.lightningkite.khrysalistemplate.vg.SliderDemoVG.obsRatingFloat TS obsRatingFloat
// FQImport: com.lightningkite.khrysalistemplate.layouts.SliderDemoXml.ratingDisplayNumberFloat TS ratingDisplayNumberFloat
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: kotlin.Int.toString TS toString
// FQImport: com.lightningkite.khrysalistemplate.layouts.SliderDemoXml.ratingDisplayStarsSmallFloat TS ratingDisplayStarsSmallFloat
// FQImport: com.lightningkite.khrysalistemplate.layouts.SliderDemoXml.rating TS rating
// FQImport: com.lightningkite.khrysalis.observables.binding.bindFloat>android.widget.RatingBar TS ratingBarBindFloatMutable
// FQImport: com.lightningkite.khrysalistemplate.vg.SliderDemoVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalistemplate.vg.SliderDemoVG.obsRatingInt.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalistemplate.layouts.SliderDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalistemplate.vg.SliderDemoVG.obsRatingInt TS obsRatingInt
// FQImport: com.lightningkite.khrysalistemplate.vg.SliderDemoVG.obsRatingFloat.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalistemplate.vg.SliderDemoVG.generate.view TS view
// FQImport: kotlin.Float.toString TS toString
// FQImport: com.lightningkite.khrysalistemplate.vg.SliderDemoVG.percent TS percent
// FQImport: com.lightningkite.khrysalistemplate.layouts.SliderDemoXml.ratingDisplayStarsFloat TS ratingDisplayStarsFloat
// FQImport: com.lightningkite.khrysalistemplate.layouts.SliderDemoXml.ratingDisplayStarsSmall TS ratingDisplayStarsSmall
// FQImport: com.lightningkite.khrysalistemplate.vg.SliderDemoVG.ratio TS ratio
// FQImport: com.lightningkite.khrysalis.observables.binding.bind>android.widget.SeekBar TS androidWidgetSeekBarBind
// FQImport: com.lightningkite.khrysalistemplate.layouts.SliderDemoXml TS SliderDemoXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.SliderDemoXml.slider TS slider
// FQImport: com.lightningkite.khrysalistemplate.layouts.SliderDemoXml.ratingDisplayStars TS ratingDisplayStars
// FQImport: com.lightningkite.khrysalis.observables.transformed>com.lightningkite.khrysalis.observables.MutableObservableProperty<kotlin.Any> TS comLightningkiteKhrysalisObservablesMutableObservablePropertyTransformed
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty TS StandardObservableProperty
// FQImport: com.lightningkite.khrysalistemplate.vg.SliderDemoVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty TS MutableObservableProperty
// FQImport: com.lightningkite.khrysalistemplate.vg.SliderDemoVG.percent.<anonymous>.it TS it
const TextView_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/TextView.binding.actual */ "../../khrysalis/web/dist/observables/binding/TextView.binding.actual.js");
const SeekBar_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/SeekBar.binding.actual */ "../../khrysalis/web/dist/observables/binding/SeekBar.binding.actual.js");
const RatingBar_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/RatingBar.binding.actual */ "../../khrysalis/web/dist/observables/binding/RatingBar.binding.actual.js");
const StandardObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const TransformedMutableObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/TransformedMutableObservableProperty.shared */ "../../khrysalis/web/dist/observables/TransformedMutableObservableProperty.shared.js");
const SliderDemoXml_1 = __webpack_require__(/*! ../layout/SliderDemoXml */ "./src/layout/SliderDemoXml.ts");
//! Declares com.lightningkite.khrysalistemplate.vg.SliderDemoVG
class SliderDemoVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor() {
        super();
        this.ratio = new StandardObservableProperty_shared_1.StandardObservableProperty(0, undefined);
        this.percent = TransformedMutableObservableProperty_shared_1.comLightningkiteKhrysalisObservablesMutableObservablePropertyTransformed(this.ratio, (it) => Math.floor((it * 100)), (it) => it / 100);
        this.obsRatingInt = TransformedMutableObservableProperty_shared_1.comLightningkiteKhrysalisObservablesMutableObservablePropertyTransformed(this.ratio, (it) => Math.floor((it * 5)), (it) => it / 5);
        this.obsRatingFloat = TransformedMutableObservableProperty_shared_1.comLightningkiteKhrysalisObservablesMutableObservablePropertyTransformed(this.ratio, (it) => it * 5, (it) => it / 5);
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.SliderDemoVG.title
    get title() { return "Slider Demo"; }
    generate(dependency) {
        const xml = new SliderDemoXml_1.SliderDemoXml();
        const view = xml.setup(dependency);
        SeekBar_binding_actual_1.androidWidgetSeekBarBind(xml.slider, 0, 100, this.percent);
        TextView_binding_actual_1.androidWidgetTextViewBindText(xml.valueDisplay, this.percent, (it) => it.toString());
        RatingBar_binding_actual_1.ratingBarBindMutable(xml.rating, 5, this.obsRatingInt);
        RatingBar_binding_actual_1.ratingBarBindMutable(xml.ratingDisplayStars, 5, this.obsRatingInt);
        RatingBar_binding_actual_1.ratingBarBindMutable(xml.ratingDisplayStarsSmall, 5, this.obsRatingInt);
        TextView_binding_actual_1.androidWidgetTextViewBindText(xml.ratingDisplayNumber, this.obsRatingInt, (it) => it.toString());
        RatingBar_binding_actual_1.ratingBarBindFloatMutable(xml.ratingFloat, 5, this.obsRatingFloat);
        RatingBar_binding_actual_1.ratingBarBindFloatMutable(xml.ratingDisplayStarsFloat, 5, this.obsRatingFloat);
        RatingBar_binding_actual_1.ratingBarBindFloatMutable(xml.ratingDisplayStarsSmallFloat, 5, this.obsRatingFloat);
        TextView_binding_actual_1.androidWidgetTextViewBindText(xml.ratingDisplayNumberFloat, this.obsRatingFloat, (it) => it.toString());
        return view;
    }
}
exports.SliderDemoVG = SliderDemoVG;


/***/ }),

/***/ "./src/vg/ViewPagerDemoVG.shared.ts":
/*!******************************************!*\
  !*** ./src/vg/ViewPagerDemoVG.shared.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ViewPagerDemoVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/ViewPagerDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalistemplate.vg.ViewPagerDemoVG.generate.<anonymous>.xml TS xml
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTestXml.setup TS setup
// FQImport: com.lightningkite.khrysalis.observables.binding.bind>androidx.viewpager.widget.ViewPager TS androidxViewpagerWidgetViewPagerBindStatic
// FQImport: com.lightningkite.khrysalistemplate.layouts.ViewPagerDemoXml.viewPagerIndicator TS viewPagerIndicator
// FQImport: com.lightningkite.khrysalistemplate.layouts.ViewPagerDemoXml.viewPager TS viewPager
// FQImport: com.lightningkite.khrysalistemplate.vg.ViewPagerDemoVG.generate.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalistemplate.vg.ViewPagerDemoVG.generate.view TS view
// FQImport: com.lightningkite.khrysalis.observables.ObservableStack TS ObservableStack
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTestXml TS ComponentTestXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.ViewPagerDemoXml TS ViewPagerDemoXml
// FQImport: com.lightningkite.khrysalistemplate.vg.ViewPagerDemoVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalistemplate.vg.ViewPagerDemoVG.generate.<anonymous>.view TS view
// FQImport: com.lightningkite.khrysalistemplate.vg.ViewPagerDemoVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalistemplate.vg.ViewPagerDemoVG.selectedIndex TS selectedIndex
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTestXml.label TS label
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty TS StandardObservableProperty
// FQImport: com.lightningkite.khrysalistemplate.vg.ViewPagerDemoVG.items TS items
// FQImport: com.lightningkite.khrysalistemplate.layouts.ViewPagerDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalis.observables.binding.bind>com.rd.PageIndicatorView TS comRdPageIndicatorViewBind
const ViewPagerDemoXml_1 = __webpack_require__(/*! ../layout/ViewPagerDemoXml */ "./src/layout/ViewPagerDemoXml.ts");
const ViewPager_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/ViewPager.binding.actual */ "../../khrysalis/web/dist/observables/binding/ViewPager.binding.actual.js");
const ComponentTestXml_1 = __webpack_require__(/*! ../layout/ComponentTestXml */ "./src/layout/ComponentTestXml.ts");
const StandardObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const PageIndicatorView_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/PageIndicatorView.binding.actual */ "../../khrysalis/web/dist/observables/binding/PageIndicatorView.binding.actual.js");
//! Declares com.lightningkite.khrysalistemplate.vg.ViewPagerDemoVG
class ViewPagerDemoVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor(stack) {
        super();
        this.stack = stack;
        this.items = ["First", "Second", "Third"];
        this.selectedIndex = new StandardObservableProperty_shared_1.StandardObservableProperty(0, undefined);
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.ViewPagerDemoVG.title
    get title() { return "View Pager Demo"; }
    generate(dependency) {
        const xml = new ViewPagerDemoXml_1.ViewPagerDemoXml();
        const view = xml.setup(dependency);
        ViewPager_binding_actual_1.androidxViewpagerWidgetViewPagerBindStatic(xml.viewPager, this.items, this.selectedIndex, (it) => {
            const xml = new ComponentTestXml_1.ComponentTestXml();
            const view = xml.setup(dependency);
            xml.label.innerText = it;
            return view;
        });
        PageIndicatorView_binding_actual_1.comRdPageIndicatorViewBind(xml.viewPagerIndicator, this.items.length, this.selectedIndex);
        return view;
    }
}
exports.ViewPagerDemoVG = ViewPagerDemoVG;


/***/ }),

/***/ "./src/vg/WebsocketDemoVG.shared.ts":
/*!******************************************!*\
  !*** ./src/vg/WebsocketDemoVG.shared.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.WebsocketDemoVG = void 0;
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: vg/WebsocketDemoVG.shared.kt
// Package: com.lightningkite.khrysalistemplate.vg
// FQImport: com.lightningkite.khrysalistemplate.vg.WebsocketDemoVG.generate.<anonymous>.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalistemplate.layouts.WebsocketDemoXml.setup TS setup
// FQImport: com.lightningkite.khrysalis.views.ViewGenerator TS ViewGenerator
// FQImport: com.lightningkite.khrysalis.net.HttpClient TS HttpClient
// FQImport: com.lightningkite.khrysalistemplate.vg.WebsocketDemoVG.generate.itemsList TS itemsList
// FQImport: com.lightningkite.khrysalistemplate.vg.WebsocketDemoVG.text TS text
// FQImport: com.lightningkite.khrysalis.net.ConnectedWebSocket TS ConnectedWebSocket
// FQImport: com.lightningkite.khrysalistemplate.vg.WebsocketDemoVG.generate.<anonymous>.cellView TS cellView
// FQImport: com.lightningkite.khrysalis.observables.binding.bindString>android.widget.EditText TS androidWidgetEditTextBindString
// FQImport: com.lightningkite.khrysalis.rx.until>io.reactivex.disposables.Disposable TS ioReactivexDisposablesDisposableUntil
// FQImport: com.lightningkite.khrysalis.net.HttpClient.webSocket TS webSocket
// FQImport: com.lightningkite.khrysalis.observables.map>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any> TS comLightningkiteKhrysalisObservablesObservablePropertyMap
// FQImport: com.lightningkite.khrysalis.observables.asObservableProperty>io.reactivex.Observable<kotlin.Any> TS ioReactivexObservableAsObservableProperty
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTextXml.label TS label
// FQImport: com.lightningkite.khrysalistemplate.vg.WebsocketDemoVG.generate.xml TS xml
// FQImport: com.lightningkite.khrysalistemplate.layouts.WebsocketDemoXml.input TS input
// FQImport: com.lightningkite.khrysalistemplate.vg.WebsocketDemoVG.generate.<anonymous>.observable TS observable
// FQImport: com.lightningkite.khrysalistemplate.vg.WebsocketDemoVG.generate.<anonymous>.it TS it
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTextXml TS ComponentTextXml
// FQImport: com.lightningkite.khrysalistemplate.layouts.WebsocketDemoXml TS WebsocketDemoXml
// FQImport: com.lightningkite.khrysalis.observables.binding.bind>androidx.recyclerview.widget.RecyclerView TS androidxRecyclerviewWidgetRecyclerViewBind
// FQImport: com.lightningkite.khrysalis.net.ConnectedWebSocket.read TS read
// FQImport: com.lightningkite.khrysalistemplate.layouts.ComponentTextXml.setup TS setup
// FQImport: com.lightningkite.khrysalis.net.WebSocketFrame TS WebSocketFrame
// FQImport: com.lightningkite.khrysalistemplate.vg.WebsocketDemoVG.generate.<anonymous>.cellXml TS cellXml
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty TS StandardObservableProperty
// FQImport: com.lightningkite.khrysalis.rx.removed>android.view.View TS getAndroidViewViewRemoved
// FQImport: com.lightningkite.khrysalistemplate.vg.WebsocketDemoVG.socket TS socket
// FQImport: com.lightningkite.khrysalistemplate.layouts.WebsocketDemoXml.submit TS submit
// FQImport: com.lightningkite.khrysalistemplate.layouts.WebsocketDemoXml.items TS items
// FQImport: com.lightningkite.khrysalis.observables.binding.bindString>android.widget.TextView TS androidWidgetTextViewBindString
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty.value TS value
// FQImport: com.lightningkite.khrysalistemplate.vg.WebsocketDemoVG.generate.dependency TS dependency
// FQImport: com.lightningkite.khrysalistemplate.vg.WebsocketDemoVG.generate.view TS view
// FQImport: com.lightningkite.khrysalis.net.WebSocketFrame.text TS text
const operators_1 = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
const WebSocketFrame_shared_1 = __webpack_require__(/*! khrysalis/dist/net/WebSocketFrame.shared */ "../../khrysalis/web/dist/net/WebSocketFrame.shared.js");
const EditText_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/EditText.binding.actual */ "../../khrysalis/web/dist/observables/binding/EditText.binding.actual.js");
const TransformedObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/TransformedObservableProperty.shared */ "../../khrysalis/web/dist/observables/TransformedObservableProperty.shared.js");
const DisposeCondition_actual_1 = __webpack_require__(/*! khrysalis/dist/rx/DisposeCondition.actual */ "../../khrysalis/web/dist/rx/DisposeCondition.actual.js");
const WebsocketDemoXml_1 = __webpack_require__(/*! ../layout/WebsocketDemoXml */ "./src/layout/WebsocketDemoXml.ts");
const ComponentTextXml_1 = __webpack_require__(/*! ../layout/ComponentTextXml */ "./src/layout/ComponentTextXml.ts");
const StandardObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/StandardObservableProperty.shared */ "../../khrysalis/web/dist/observables/StandardObservableProperty.shared.js");
const EventToObservableProperty_shared_1 = __webpack_require__(/*! khrysalis/dist/observables/EventToObservableProperty.shared */ "../../khrysalis/web/dist/observables/EventToObservableProperty.shared.js");
const ViewGenerator_shared_1 = __webpack_require__(/*! khrysalis/dist/views/ViewGenerator.shared */ "../../khrysalis/web/dist/views/ViewGenerator.shared.js");
const TextView_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/TextView.binding.actual */ "../../khrysalis/web/dist/observables/binding/TextView.binding.actual.js");
const HttpClient_actual_1 = __webpack_require__(/*! khrysalis/dist/net/HttpClient.actual */ "../../khrysalis/web/dist/net/HttpClient.actual.js");
const RecyclerView_binding_actual_1 = __webpack_require__(/*! khrysalis/dist/observables/binding/RecyclerView.binding.actual */ "../../khrysalis/web/dist/observables/binding/RecyclerView.binding.actual.js");
//! Declares com.lightningkite.khrysalistemplate.vg.WebsocketDemoVG
class WebsocketDemoVG extends ViewGenerator_shared_1.ViewGenerator {
    constructor() {
        super();
        this.socket = HttpClient_actual_1.HttpClient.INSTANCE.webSocket("wss://echo.websocket.org").pipe(operators_1.publishReplay(1)).pipe(operators_1.refCount());
        this.text = new StandardObservableProperty_shared_1.StandardObservableProperty("", undefined);
    }
    //! Declares com.lightningkite.khrysalistemplate.vg.WebsocketDemoVG.title
    get title() { return "Websocket Demo"; }
    generate(dependency) {
        const xml = new WebsocketDemoXml_1.WebsocketDemoXml();
        const view = xml.setup(dependency);
        //--- Set Up xml.items
        const itemsList = [];
        RecyclerView_binding_actual_1.androidxRecyclerviewWidgetRecyclerViewBind(xml.items, EventToObservableProperty_shared_1.ioReactivexObservableAsObservableProperty(this.socket.pipe(operators_1.switchMap((it) => it.read)).pipe(operators_1.map((it) => {
            console.log("Adding item");
            itemsList.push(it);
            while (itemsList.length > 20) {
                itemsList.splice(0, 1);
            }
            return itemsList;
        })), itemsList), new WebSocketFrame_shared_1.WebSocketFrame(undefined, undefined), (observable) => {
            //--- Make Subview For xml.items (overwritten on flow generation)
            const cellXml = new ComponentTextXml_1.ComponentTextXml();
            const cellView = cellXml.setup(dependency);
            //--- Set Up cellXml.label (overwritten on flow generation)
            TextView_binding_actual_1.androidWidgetTextViewBindString(cellXml.label, TransformedObservableProperty_shared_1.comLightningkiteKhrysalisObservablesObservablePropertyMap(observable, (it) => { var _a; return (_a = it.text) !== null && _a !== void 0 ? _a : "---"; }));
            //--- End Make Subview For xml.items (overwritten on flow generation)
            return cellView;
        });
        //--- Set Up xml.input
        EditText_binding_actual_1.androidWidgetEditTextBindString(xml.input, this.text);
        //--- Set Up xml.submit
        xml.submit.addEventListener("onclick", (_ev) => {
            _ev.stopPropagation();
            DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(this.socket.pipe(operators_1.take(1)).subscribe((it) => {
                it.next(new WebSocketFrame_shared_1.WebSocketFrame(undefined, this.text.value));
            }, undefined, undefined), DisposeCondition_actual_1.getAndroidViewViewRemoved(xml.submit));
        });
        //--- Generate End (overwritten on flow generation)
        return view;
    }
    //--- Init
    //--- Actions
    submitClick() {
    }
}
exports.WebsocketDemoVG = WebsocketDemoVG;


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,