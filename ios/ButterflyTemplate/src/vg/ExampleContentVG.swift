// Generated by Khrysalis Swift converter - this file will be overwritten.
// File: vg/ExampleContentVG.kt
// Package: com.lightningkite.butterflytemplate.vg
import Butterfly
import Foundation

public class ExampleContentVG : ViewGenerator {
    override public init() {
        self.number = StandardObservableProperty(underlyingValue: 0)
        self.chained = StandardObservableProperty(underlyingValue: StandardObservableProperty(underlyingValue: 0))
        super.init()
        //Necessary properties should be initialized now
    }
    
    override public var title: String {
        get { return "Example Content" }
    }
    
    public let number: StandardObservableProperty<Int>
    public let chained: StandardObservableProperty<MutableObservableProperty<Int>>
    
    public func increment() -> Void {
        let temp3 = self.number
        temp3.value = self.number.value + 1
    }
    
    override public func generate(dependency: ViewControllerAccess) -> UIView {
        let xml = ExampleContentXml()
        let view = xml.setup(dependency: dependency)
        xml.exampleContentIncrement.onClick(action: { () -> Void in self.increment() })
        xml.exampleContentNumber.bindText(observable: self.number, transform: { (it) -> String in String(kotlin: it) })
        xml.chainedIncrement.onClick(action: { () -> Void in self.chained.value.value = self.chained.value.value + 1 })
        xml.chainedNumber.bindString(observable: self.chained.flatMap(transformation: { (it) -> ObservableProperty<Int> in it }).map(read: { (it) -> String in String(kotlin: it) }))
        xml.scrollToTop.onClick(action: { () -> Void in xml.scrollView.smoothScrollTo(0, 0) })
        return view
    }
}


