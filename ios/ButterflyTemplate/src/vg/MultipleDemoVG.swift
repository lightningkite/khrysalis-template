// Generated by Khrysalis Swift converter - this file will be overwritten.
// File: vg/MultipleDemoVG.kt
// Package: com.lightningkite.butterflytemplate.vg
import UIKit
import Butterfly
import Foundation

public class MultipleDemoVG : ViewGenerator {
    override public init() {
        self.data = [Int(1), Int(2), "3", Int(4), "5", (), "Test", Int(6)] as! Array<Any>
        super.init()
        //Necessary properties should be initialized now
    }
    
    override public var title: String {
        get { return "Multiple List Demo" }
    }
    
    public let data: Array<Any>
    
    override public func generate(dependency: ViewControllerAccess) -> UIView {
        let xml = MultipleDemoXml()
        let view = xml.setup(dependency: dependency)
        
        xml.list.bindMulti(viewDependency: dependency, data: ConstantObservableProperty(underlyingValue: self.data), typeHandlerSetup: { (handler) -> Void in 
                handler.handle(defaultValue: Int(0), action: { (obs) -> UIView in 
                        let cellXml = ComponentTestXml()
                        let cellView = cellXml.setup(dependency: dependency)
                        cellXml.label.bindString(observable: obs.map(read: { (it) -> String in "The number \(it)" }))
                        return cellView
                })
                handler.handle(defaultValue: "", action: { (obs) -> UIView in 
                        let cellXml = ComponentTestXml()
                        let cellView = cellXml.setup(dependency: dependency)
                        cellXml.label.bindString(observable: obs.map(read: { (it) -> String in "The string '\(it)'" }))
                        return cellView
                })
                handler.handle(defaultValue: (), action: { (obs) -> UIView in 
                        let cellXml = ComponentTextXml()
                        let cellView = cellXml.setup(dependency: dependency)
                        cellXml.label.text = "-----"
                        return cellView
                })
        })
        
        return view
    }
}


